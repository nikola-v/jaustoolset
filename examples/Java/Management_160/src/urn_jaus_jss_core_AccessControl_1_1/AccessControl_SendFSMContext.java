/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : AccessControl_SendFSM.sm
 */

package src.urn_jaus_jss_core_AccessControl_1_1;

import framework.internalEvents.*;
import src.urn_jaus_jss_core_AccessControl_1_1.InternalEvents.*;
import src.urn_jaus_jss_core_AccessControl_1_1.Messages.*;
import java.io.PrintStream;

public class AccessControl_SendFSMContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public AccessControl_SendFSMContext(AccessControl_SendFSM owner)
    {
        super (AccessControl_SendFSM_SM.Sending);

        _owner = owner;
    }

    public AccessControl_SendFSMContext(AccessControl_SendFSM owner, AccessControl_SendFSMState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void BroadcastGlobalTransition()
    {
        _transition = "BroadcastGlobalTransition";
        getState().BroadcastGlobalTransition(this);
        _transition = "";
        return;
    }

    public void BroadcastLocalTransition()
    {
        _transition = "BroadcastLocalTransition";
        getState().BroadcastLocalTransition(this);
        _transition = "";
        return;
    }

    public void CancelEventTransition()
    {
        _transition = "CancelEventTransition";
        getState().CancelEventTransition(this);
        _transition = "";
        return;
    }

    public void CommandCompletedTransition()
    {
        _transition = "CommandCompletedTransition";
        getState().CommandCompletedTransition(this);
        _transition = "";
        return;
    }

    public void CommandExpiredTransition()
    {
        _transition = "CommandExpiredTransition";
        getState().CommandExpiredTransition(this);
        _transition = "";
        return;
    }

    public void CreateCommandEventTransition()
    {
        _transition = "CreateCommandEventTransition";
        getState().CreateCommandEventTransition(this);
        _transition = "";
        return;
    }

    public void CreateEventTransition()
    {
        _transition = "CreateEventTransition";
        getState().CreateEventTransition(this);
        _transition = "";
        return;
    }

    public void EventErrorTransition()
    {
        _transition = "EventErrorTransition";
        getState().EventErrorTransition(this);
        _transition = "";
        return;
    }

    public void EventOccurredTransition()
    {
        _transition = "EventOccurredTransition";
        getState().EventOccurredTransition(this);
        _transition = "";
        return;
    }

    public void QueryAuthorityTransition()
    {
        _transition = "QueryAuthorityTransition";
        getState().QueryAuthorityTransition(this);
        _transition = "";
        return;
    }

    public void QueryControlTransition()
    {
        _transition = "QueryControlTransition";
        getState().QueryControlTransition(this);
        _transition = "";
        return;
    }

    public void QueryEventTimeoutTransition()
    {
        _transition = "QueryEventTimeoutTransition";
        getState().QueryEventTimeoutTransition(this);
        _transition = "";
        return;
    }

    public void QueryEventsTransition()
    {
        _transition = "QueryEventsTransition";
        getState().QueryEventsTransition(this);
        _transition = "";
        return;
    }

    public void QueryTimeoutTransition()
    {
        _transition = "QueryTimeoutTransition";
        getState().QueryTimeoutTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition()
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this);
        _transition = "";
        return;
    }

    public void ReleaseControlTransition()
    {
        _transition = "ReleaseControlTransition";
        getState().ReleaseControlTransition(this);
        _transition = "";
        return;
    }

    public void RequestControlTransition()
    {
        _transition = "RequestControlTransition";
        getState().RequestControlTransition(this);
        _transition = "";
        return;
    }

    public void SendTransition()
    {
        _transition = "SendTransition";
        getState().SendTransition(this);
        _transition = "";
        return;
    }

    public void SetAuthorityTransition()
    {
        _transition = "SetAuthorityTransition";
        getState().SetAuthorityTransition(this);
        _transition = "";
        return;
    }

    public void TimeoutTransition()
    {
        _transition = "TimeoutTransition";
        getState().TimeoutTransition(this);
        _transition = "";
        return;
    }

    public void UpdateEventTransition()
    {
        _transition = "UpdateEventTransition";
        getState().UpdateEventTransition(this);
        _transition = "";
        return;
    }

    public AccessControl_SendFSMState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((AccessControl_SendFSMState) _state);
    }

    protected AccessControl_SendFSM getOwner()
    {
        return (_owner);
    }

    public void setOwner(AccessControl_SendFSM owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private AccessControl_SendFSM _owner;

//---------------------------------------------------------------
// Inner classes.
//

    public static abstract class AccessControl_SendFSMState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected AccessControl_SendFSMState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(AccessControl_SendFSMContext context) {}
        protected void Exit(AccessControl_SendFSMContext context) {}

        protected void BroadcastGlobalTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void BroadcastLocalTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void CancelEventTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void CommandCompletedTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void CommandExpiredTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void CreateCommandEventTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void CreateEventTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void EventErrorTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void EventOccurredTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryAuthorityTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryControlTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryEventTimeoutTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryEventsTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryTimeoutTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void ReleaseControlTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void RequestControlTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void SendTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void SetAuthorityTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void TimeoutTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void UpdateEventTransition(AccessControl_SendFSMContext context)
        {
            Default(context);
        }

        protected void Default(AccessControl_SendFSMContext context)
        {
            if (context.getDebugFlag() == true)
            {
                PrintStream str = 
                    context.getDebugStream();

                str.println(
                    "TRANSITION   : Default");
            }

            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class AccessControl_SendFSM_SM
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final AccessControl_SendFSM_SM_Default.AccessControl_SendFSM_SM_Sending Sending =
            new AccessControl_SendFSM_SM_Default.AccessControl_SendFSM_SM_Sending("AccessControl_SendFSM_SM.Sending", 0);
        public static final AccessControl_SendFSM_SM_Default.AccessControl_SendFSM_SM_Internally_Generated_State_DO_NOT_USE Internally_Generated_State_DO_NOT_USE =
            new AccessControl_SendFSM_SM_Default.AccessControl_SendFSM_SM_Internally_Generated_State_DO_NOT_USE("AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE", 1);
        private static final AccessControl_SendFSM_SM_Default Default =
            new AccessControl_SendFSM_SM_Default("AccessControl_SendFSM_SM.Default", -1);

    }

    protected static class AccessControl_SendFSM_SM_Default
        extends AccessControl_SendFSMState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected AccessControl_SendFSM_SM_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Inner classse.
    //


        private static final class AccessControl_SendFSM_SM_Sending
            extends AccessControl_SendFSM_SM_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            private AccessControl_SendFSM_SM_Sending(String name, int id)
            {
                super (name, id);
            }

        //-------------------------------------------------------
        // Member data.
        //
        }

        private static final class AccessControl_SendFSM_SM_Internally_Generated_State_DO_NOT_USE
            extends AccessControl_SendFSM_SM_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            private AccessControl_SendFSM_SM_Internally_Generated_State_DO_NOT_USE(String name, int id)
            {
                super (name, id);
            }

            protected void BroadcastGlobalTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
                }


                return;
            }

            protected void BroadcastLocalTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
                }


                return;
            }

            protected void CancelEventTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CancelEventTransition()");
                }


                return;
            }

            protected void CommandCompletedTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CommandCompletedTransition()");
                }


                return;
            }

            protected void CommandExpiredTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CommandExpiredTransition()");
                }


                return;
            }

            protected void CreateCommandEventTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateCommandEventTransition()");
                }


                return;
            }

            protected void CreateEventTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateEventTransition()");
                }


                return;
            }

            protected void EventErrorTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.EventErrorTransition()");
                }


                return;
            }

            protected void EventOccurredTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.EventOccurredTransition()");
                }


                return;
            }

            protected void QueryAuthorityTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryAuthorityTransition()");
                }


                return;
            }

            protected void QueryControlTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryControlTransition()");
                }


                return;
            }

            protected void QueryEventTimeoutTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventTimeoutTransition()");
                }


                return;
            }

            protected void QueryEventsTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventsTransition()");
                }


                return;
            }

            protected void QueryTimeoutTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryTimeoutTransition()");
                }


                return;
            }

            protected void ReceiveTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
                }


                return;
            }

            protected void ReleaseControlTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.ReleaseControlTransition()");
                }


                return;
            }

            protected void RequestControlTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.RequestControlTransition()");
                }


                return;
            }

            protected void SendTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
                }


                return;
            }

            protected void SetAuthorityTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SetAuthorityTransition()");
                }


                return;
            }

            protected void TimeoutTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.TimeoutTransition()");
                }


                return;
            }

            protected void UpdateEventTransition(AccessControl_SendFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : AccessControl_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.UpdateEventTransition()");
                }


                return;
            }

        //-------------------------------------------------------
        // Member data.
        //
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
