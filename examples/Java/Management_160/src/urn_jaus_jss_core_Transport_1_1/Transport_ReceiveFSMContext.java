/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : Transport_ReceiveFSM.sm
 */

package src.urn_jaus_jss_core_Transport_1_1;

import framework.internalEvents.*;
import src.urn_jaus_jss_core_Transport_1_1.InternalEvents.*;
import java.io.PrintStream;

public class Transport_ReceiveFSMContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public Transport_ReceiveFSMContext(Transport_ReceiveFSM owner)
    {
        super (Transport_ReceiveFSM_SM.Receiving);

        _owner = owner;
    }

    public Transport_ReceiveFSMContext(Transport_ReceiveFSM owner, Transport_ReceiveFSMState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void BroadcastGlobalTransition()
    {
        _transition = "BroadcastGlobalTransition";
        getState().BroadcastGlobalTransition(this);
        _transition = "";
        return;
    }

    public void BroadcastLocalTransition()
    {
        _transition = "BroadcastLocalTransition";
        getState().BroadcastLocalTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition()
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this);
        _transition = "";
        return;
    }

    public void SendTransition()
    {
        _transition = "SendTransition";
        getState().SendTransition(this);
        _transition = "";
        return;
    }

    public Transport_ReceiveFSMState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((Transport_ReceiveFSMState) _state);
    }

    protected Transport_ReceiveFSM getOwner()
    {
        return (_owner);
    }

    public void setOwner(Transport_ReceiveFSM owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private Transport_ReceiveFSM _owner;

//---------------------------------------------------------------
// Inner classes.
//

    public static abstract class Transport_ReceiveFSMState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected Transport_ReceiveFSMState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(Transport_ReceiveFSMContext context) {}
        protected void Exit(Transport_ReceiveFSMContext context) {}

        protected void BroadcastGlobalTransition(Transport_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void BroadcastLocalTransition(Transport_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(Transport_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void SendTransition(Transport_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void Default(Transport_ReceiveFSMContext context)
        {
            if (context.getDebugFlag() == true)
            {
                PrintStream str = 
                    context.getDebugStream();

                str.println(
                    "TRANSITION   : Default");
            }

            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class Transport_ReceiveFSM_SM
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final Transport_ReceiveFSM_SM_Default.Transport_ReceiveFSM_SM_Receiving Receiving =
            new Transport_ReceiveFSM_SM_Default.Transport_ReceiveFSM_SM_Receiving("Transport_ReceiveFSM_SM.Receiving", 0);
        public static final Transport_ReceiveFSM_SM_Default.Transport_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE Internally_Generated_State_DO_NOT_USE =
            new Transport_ReceiveFSM_SM_Default.Transport_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE("Transport_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE", 1);
        private static final Transport_ReceiveFSM_SM_Default Default =
            new Transport_ReceiveFSM_SM_Default("Transport_ReceiveFSM_SM.Default", -1);

    }

    protected static class Transport_ReceiveFSM_SM_Default
        extends Transport_ReceiveFSMState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected Transport_ReceiveFSM_SM_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Inner classse.
    //


        private static final class Transport_ReceiveFSM_SM_Receiving
            extends Transport_ReceiveFSM_SM_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            private Transport_ReceiveFSM_SM_Receiving(String name, int id)
            {
                super (name, id);
            }

            protected void ReceiveTransition(Transport_ReceiveFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : Transport_ReceiveFSM_SM.Receiving.ReceiveTransition()");
                }


                return;
            }

        //-------------------------------------------------------
        // Member data.
        //
        }

        private static final class Transport_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE
            extends Transport_ReceiveFSM_SM_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            private Transport_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE(String name, int id)
            {
                super (name, id);
            }

            protected void BroadcastGlobalTransition(Transport_ReceiveFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : Transport_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
                }


                return;
            }

            protected void BroadcastLocalTransition(Transport_ReceiveFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : Transport_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
                }


                return;
            }

            protected void ReceiveTransition(Transport_ReceiveFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : Transport_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
                }


                return;
            }

            protected void SendTransition(Transport_ReceiveFSMContext context)
            {

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("TRANSITION   : Transport_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
                }


                return;
            }

        //-------------------------------------------------------
        // Member data.
        //
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
