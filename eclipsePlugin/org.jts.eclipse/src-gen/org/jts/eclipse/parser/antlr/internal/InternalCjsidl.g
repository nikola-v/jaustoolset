/*
* generated by Xtext
*/
grammar InternalCjsidl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.jts.eclipse.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.jts.eclipse.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.jts.eclipse.services.CjsidlGrammarAccess;

}

@parser::members {

 	private CjsidlGrammarAccess grammarAccess;
 	
    public InternalCjsidlParser(TokenStream input, IAstFactory factory, CjsidlGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/jts/eclipse/parser/antlr/internal/InternalCjsidl.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "jaus";	
   	}
   	
   	@Override
   	protected CjsidlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulejaus
entryRulejaus returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getJausRule(), currentNode); }
	 iv_rulejaus=rulejaus 
	 { $current=$iv_rulejaus.current; } 
	 EOF 
;

// Rule jaus
rulejaus returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getJausAccess().getSetServiceDefParserRuleCall_0_0(), currentNode); 
	    }
		lv_set_0_1=ruleserviceDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getJausRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"set",
	        		lv_set_0_1, 
	        		"serviceDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getJausAccess().getSetDeclaredTypeSetParserRuleCall_0_1(), currentNode); 
	    }
		lv_set_0_2=ruledeclaredTypeSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getJausRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"set",
	        		lv_set_0_2, 
	        		"declaredTypeSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getJausAccess().getSetDeclaredConstSetParserRuleCall_0_2(), currentNode); 
	    }
		lv_set_0_3=ruledeclaredConstSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getJausRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"set",
	        		lv_set_0_3, 
	        		"declaredConstSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)
;





// Entry rule entryRuleserviceDef
entryRuleserviceDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getServiceDefRule(), currentNode); }
	 iv_ruleserviceDef=ruleserviceDef 
	 { $current=$iv_ruleserviceDef.current; } 
	 EOF 
;

// Rule serviceDef
ruleserviceDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'service' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getServiceKeyword_0(), null); 
    }
(
(
		lv_serviceName_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getServiceDefAccess().getServiceNameIDTerminalRuleCall_1_0(), "serviceName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"serviceName",
	        		lv_serviceName_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getLeftParenthesisKeyword_2(), null); 
    }
	'id' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getIdKeyword_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getEqualsSignKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getNameURIParserRuleCall_5_0(), currentNode); 
	    }
		lv_name_5_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getCommaKeyword_6(), null); 
    }
	'version' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getVersionKeyword_7(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getEqualsSignKeyword_8(), null); 
    }
(
(
(
		lv_serviceVersion_9_1=RULE_DECIMAL
		{
			createLeafNode(grammarAccess.getServiceDefAccess().getServiceVersionDECIMALTerminalRuleCall_9_0_0(), "serviceVersion"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"serviceVersion",
	        		lv_serviceVersion_9_1, 
	        		"DECIMAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_serviceVersion_9_2=RULE_VERSION
		{
			createLeafNode(grammarAccess.getServiceDefAccess().getServiceVersionVERSIONTerminalRuleCall_9_0_1(), "serviceVersion"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"serviceVersion",
	        		lv_serviceVersion_9_2, 
	        		"VERSION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)	')' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getRightParenthesisKeyword_10(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getLeftCurlyBracketKeyword_11(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getDescrDescriptionParserRuleCall_12_0(), currentNode); 
	    }
		lv_descr_12_0=ruledescription		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"descr",
	        		lv_descr_12_0, 
	        		"description", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getAssumptAssumptionsParserRuleCall_13_0(), currentNode); 
	    }
		lv_assumpt_13_0=ruleassumptions		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"assumpt",
	        		lv_assumpt_13_0, 
	        		"assumptions", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getRefsReferencesParserRuleCall_14_0(), currentNode); 
	    }
		lv_refs_14_0=rulereferences		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"refs",
	        		lv_refs_14_0, 
	        		"references", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getConstSetDeclaredConstSetParserRuleCall_15_0(), currentNode); 
	    }
		lv_constSet_15_0=ruledeclaredConstSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constSet",
	        		lv_constSet_15_0, 
	        		"declaredConstSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getTypeSetDeclaredTypeSetParserRuleCall_16_0(), currentNode); 
	    }
		lv_typeSet_16_0=ruledeclaredTypeSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typeSet",
	        		lv_typeSet_16_0, 
	        		"declaredTypeSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getMessageSetMessageSetParserRuleCall_17_0(), currentNode); 
	    }
		lv_messageSet_17_0=rulemessageSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"messageSet",
	        		lv_messageSet_17_0, 
	        		"messageSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getInternalEventSetInternalEventSetParserRuleCall_18_0(), currentNode); 
	    }
		lv_internalEventSet_18_0=ruleinternalEventSet		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"internalEventSet",
	        		lv_internalEventSet_18_0, 
	        		"internalEventSet", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getServiceDefAccess().getProtocolBehaviorProtocolBehaviorParserRuleCall_19_0(), currentNode); 
	    }
		lv_protocolBehavior_19_0=ruleprotocolBehavior		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"protocolBehavior",
	        		lv_protocolBehavior_19_0, 
	        		"protocolBehavior", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getRightCurlyBracketKeyword_20(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getServiceDefAccess().getSemicolonKeyword_21(), null); 
    }
)?)
;





// Entry rule entryRuledescription
entryRuledescription returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDescriptionRule(), currentNode); }
	 iv_ruledescription=ruledescription 
	 { $current=$iv_ruledescription.current; } 
	 EOF 
;

// Rule description
ruledescription returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'description' 
    {
        createLeafNode(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0(), null); 
    }
(
(
		lv_content_1_0=RULE_STRINGLITERAL
		{
			createLeafNode(grammarAccess.getDescriptionAccess().getContentSTRINGLITERALTerminalRuleCall_1_0(), "content"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDescriptionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"content",
	        		lv_content_1_0, 
	        		"STRINGLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getDescriptionAccess().getSemicolonKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleassumptions
entryRuleassumptions returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAssumptionsRule(), currentNode); } 
	 iv_ruleassumptions=ruleassumptions 
	 { $current=$iv_ruleassumptions.current.getText(); }  
	 EOF 
;

// Rule assumptions
ruleassumptions returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='assumptions' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssumptionsAccess().getAssumptionsKeyword_0(), null); 
    }
    this_STRINGLITERAL_1=RULE_STRINGLITERAL    {
		$current.merge(this_STRINGLITERAL_1);
    }

    { 
    createLeafNode(grammarAccess.getAssumptionsAccess().getSTRINGLITERALTerminalRuleCall_1(), null); 
    }

	kw=';' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAssumptionsAccess().getSemicolonKeyword_2(), null); 
    }
)
    ;





// Entry rule entryRulereferences
entryRulereferences returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getReferencesRule(), currentNode); }
	 iv_rulereferences=rulereferences 
	 { $current=$iv_rulereferences.current; } 
	 EOF 
;

// Rule references
rulereferences returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getReferencesAccess().getReferencesAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getReferencesAccess().getReferencesAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'references' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getReferencesKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'inherits_from' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getInherits_fromKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getReferencesAccess().getRefInheritRefAttrParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_refInherit_4_0=rulerefAttr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getReferencesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"refInherit",
	        		lv_refInherit_4_0, 
	        		"refAttr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getSemicolonKeyword_3_2(), null); 
    }
)?(	'client_of' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getClient_ofKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getReferencesAccess().getRefClientRefAttrParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_refClient_7_0=rulerefAttr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getReferencesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"refClient",
	        		lv_refClient_7_0, 
	        		"refAttr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getSemicolonKeyword_4_2(), null); 
    }
)*	'}' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getReferencesAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRulerefAttr
entryRulerefAttr returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRefAttrRule(), currentNode); }
	 iv_rulerefAttr=rulerefAttr 
	 { $current=$iv_rulerefAttr.current; } 
	 EOF 
;

// Rule refAttr
rulerefAttr returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getRefAttrAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRefAttrRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'import' 
    {
        createLeafNode(grammarAccess.getRefAttrAccess().getImportKeyword_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getRefAttrRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRefAttrAccess().getImportedNamespaceServiceDefCrossReference_2_0(), currentNode); 
	    }
		ruleURI		{ 
	        currentNode = currentNode.getParent();
	    }

)
)	'as' 
    {
        createLeafNode(grammarAccess.getRefAttrAccess().getAsKeyword_3(), null); 
    }
(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRefAttrAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRefAttrRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuledeclaredConstSet
entryRuledeclaredConstSet returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeclaredConstSetRule(), currentNode); }
	 iv_ruledeclaredConstSet=ruledeclaredConstSet 
	 { $current=$iv_ruledeclaredConstSet.current; } 
	 EOF 
;

// Rule declaredConstSet
ruledeclaredConstSet returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'constants' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getConstantsKeyword_0_0(), null); 
    }
(
(
		lv_constName_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDeclaredConstSetAccess().getConstNameIDTerminalRuleCall_0_1_0(), "constName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constName",
	        		lv_constName_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(	'(' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getLeftParenthesisKeyword_1_0(), null); 
    }
	'id' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getIdKeyword_1_1(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getEqualsSignKeyword_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredConstSetAccess().getNameURIParserRuleCall_1_3_0(), currentNode); 
	    }
		lv_name_5_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getCommaKeyword_1_4(), null); 
    }
	'version' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getVersionKeyword_1_5(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getEqualsSignKeyword_1_6(), null); 
    }
(
(
(
		lv_constSetVersion_9_1=RULE_DECIMAL
		{
			createLeafNode(grammarAccess.getDeclaredConstSetAccess().getConstSetVersionDECIMALTerminalRuleCall_1_7_0_0(), "constSetVersion"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constSetVersion",
	        		lv_constSetVersion_9_1, 
	        		"DECIMAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_constSetVersion_9_2=RULE_VERSION
		{
			createLeafNode(grammarAccess.getDeclaredConstSetAccess().getConstSetVersionVERSIONTerminalRuleCall_1_7_0_1(), "constSetVersion"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constSetVersion",
	        		lv_constSetVersion_9_2, 
	        		"VERSION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)	')' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getRightParenthesisKeyword_1_8(), null); 
    }
)?	'{' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredConstSetAccess().getDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_3_0(), currentNode); 
	    }
		lv_declaredConstSetRef_12_0=ruledeclaredConstSetRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"declaredConstSetRef",
	        		lv_declaredConstSetRef_12_0, 
	        		"declaredConstSetRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredConstSetAccess().getConstDefConstDefParserRuleCall_4_0(), currentNode); 
	    }
		lv_constDef_13_0=ruleconstDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"constDef",
	        		lv_constDef_13_0, 
	        		"constDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRuledeclaredConstSetRef
entryRuledeclaredConstSetRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeclaredConstSetRefRule(), currentNode); }
	 iv_ruledeclaredConstSetRef=ruledeclaredConstSetRef 
	 { $current=$iv_ruledeclaredConstSetRef.current; } 
	 EOF 
;

// Rule declaredConstSetRef
ruledeclaredConstSetRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getDeclaredConstSetRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'using' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetRefAccess().getUsingKeyword_1(), null); 
    }
	'constants' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetRefAccess().getConstantsKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredConstSetRefAccess().getImportedNamespaceDeclaredConstSetCrossReference_3_0(), currentNode); 
	    }
		ruleURI		{ 
	        currentNode = currentNode.getParent();
	    }

)
)	'as' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetRefAccess().getAsKeyword_4(), null); 
    }
(
(
		lv_name_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDeclaredConstSetRefAccess().getNameIDTerminalRuleCall_5_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredConstSetRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getDeclaredConstSetRefAccess().getSemicolonKeyword_6(), null); 
    }
)
;





// Entry rule entryRuledeclaredTypeSet
entryRuledeclaredTypeSet returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeclaredTypeSetRule(), currentNode); }
	 iv_ruledeclaredTypeSet=ruledeclaredTypeSet 
	 { $current=$iv_ruledeclaredTypeSet.current; } 
	 EOF 
;

// Rule declaredTypeSet
ruledeclaredTypeSet returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'typeset' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getTypesetKeyword_0(), null); 
    }
(
(
		lv_typeName_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getTypeNameIDTerminalRuleCall_1_0(), "typeName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typeName",
	        		lv_typeName_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
	'id' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getIdKeyword_2_1(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getEqualsSignKeyword_2_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredTypeSetAccess().getNameURIParserRuleCall_2_3_0(), currentNode); 
	    }
		lv_name_5_0=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getCommaKeyword_2_4(), null); 
    }
	'version' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getVersionKeyword_2_5(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getEqualsSignKeyword_2_6(), null); 
    }
(
(
(
		lv_version_9_1=RULE_DECIMAL
		{
			createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getVersionDECIMALTerminalRuleCall_2_7_0_0(), "version"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"version",
	        		lv_version_9_1, 
	        		"DECIMAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_version_9_2=RULE_VERSION
		{
			createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getVersionVERSIONTerminalRuleCall_2_7_0_1(), "version"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"version",
	        		lv_version_9_2, 
	        		"VERSION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)	')' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getRightParenthesisKeyword_2_8(), null); 
    }
)?	'{' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredTypeSetAccess().getDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_4_0(), currentNode); 
	    }
		lv_declaredConstSetRef_12_0=ruledeclaredConstSetRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"declaredConstSetRef",
	        		lv_declaredConstSetRef_12_0, 
	        		"declaredConstSetRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredTypeSetAccess().getDeclaredTypeSetRefDeclaredTypeSetRefParserRuleCall_5_0(), currentNode); 
	    }
		lv_declaredTypeSetRef_13_0=ruledeclaredTypeSetRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"declaredTypeSetRef",
	        		lv_declaredTypeSetRef_13_0, 
	        		"declaredTypeSetRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredTypeSetAccess().getTypeDefTypeDefParserRuleCall_6_0(), currentNode); 
	    }
		lv_typeDef_14_0=ruletypeDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"typeDef",
	        		lv_typeDef_14_0, 
	        		"typeDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredTypeSetAccess().getTypeRefTypeReferenceParserRuleCall_7_0_0(), currentNode); 
	    }
		lv_typeRef_15_0=ruletypeReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"typeRef",
	        		lv_typeRef_15_0, 
	        		"typeReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredTypeSetAccess().getScopedRefScopedTypeIdParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_scopedRef_16_0=rulescopedTypeId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"scopedRef",
	        		lv_scopedRef_16_0, 
	        		"scopedTypeId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getRightCurlyBracketKeyword_8(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetAccess().getSemicolonKeyword_9(), null); 
    }
)?)
;





// Entry rule entryRulemessageSet
entryRulemessageSet returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMessageSetRule(), currentNode); }
	 iv_rulemessageSet=rulemessageSet 
	 { $current=$iv_rulemessageSet.current; } 
	 EOF 
;

// Rule messageSet
rulemessageSet returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getMessageSetAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'messages' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getMessagesKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		lv_inputComment_3_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getMessageSetAccess().getInputCommentINTERPRETATIONTerminalRuleCall_3_0(), "inputComment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"inputComment",
	        		lv_inputComment_3_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'input' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getInputKeyword_4(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageSetAccess().getInputSetMessagesParserRuleCall_6_0(), currentNode); 
	    }
		lv_inputSet_6_0=rulemessages		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"inputSet",
	        		lv_inputSet_6_0, 
	        		"messages", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getRightCurlyBracketKeyword_7(), null); 
    }
(
(
		lv_outputComment_8_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getMessageSetAccess().getOutputCommentINTERPRETATIONTerminalRuleCall_8_0(), "outputComment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"outputComment",
	        		lv_outputComment_8_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'output' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getOutputKeyword_9(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getLeftCurlyBracketKeyword_10(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageSetAccess().getOutputSetMessagesParserRuleCall_11_0(), currentNode); 
	    }
		lv_outputSet_11_0=rulemessages		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"outputSet",
	        		lv_outputSet_11_0, 
	        		"messages", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getRightCurlyBracketKeyword_12(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getMessageSetAccess().getRightCurlyBracketKeyword_13(), null); 
    }
)
;





// Entry rule entryRulemessages
entryRulemessages returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMessagesRule(), currentNode); }
	 iv_rulemessages=rulemessages 
	 { $current=$iv_rulemessages.current; } 
	 EOF 
;

// Rule messages
rulemessages returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getMessagesAccess().getMessagesAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMessagesAccess().getMessagesAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessagesAccess().getMessageDefsMessageDefParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_messageDefs_1_0=rulemessageDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessagesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"messageDefs",
	        		lv_messageDefs_1_0, 
	        		"messageDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessagesAccess().getTypeRefsMessageRefParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_typeRefs_2_0=rulemessageRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessagesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"typeRefs",
	        		lv_typeRefs_2_0, 
	        		"messageRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessagesAccess().getScopedRefsMessageScopedRefParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_scopedRefs_3_0=rulemessageScopedRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessagesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"scopedRefs",
	        		lv_scopedRefs_3_0, 
	        		"messageScopedRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleinternalEventSet
entryRuleinternalEventSet returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInternalEventSetRule(), currentNode); }
	 iv_ruleinternalEventSet=ruleinternalEventSet 
	 { $current=$iv_ruleinternalEventSet.current; } 
	 EOF 
;

// Rule internalEventSet
ruleinternalEventSet returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getInternalEventSetAccess().getInternalEventSetAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInternalEventSetAccess().getInternalEventSetAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getInternalEventSetAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInternalEventSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'eventset' 
    {
        createLeafNode(grammarAccess.getInternalEventSetAccess().getEventsetKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getInternalEventSetAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInternalEventSetAccess().getDefsDeclaredEventDefParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_defs_4_1=ruledeclaredEventDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInternalEventSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defs",
	        		lv_defs_4_1, 
	        		"declaredEventDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getInternalEventSetAccess().getDefsEventDefParserRuleCall_4_0_1(), currentNode); 
	    }
		lv_defs_4_2=ruleeventDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInternalEventSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defs",
	        		lv_defs_4_2, 
	        		"eventDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getInternalEventSetAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getInternalEventSetAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRuleeventDef
entryRuleeventDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEventDefRule(), currentNode); }
	 iv_ruleeventDef=ruleeventDef 
	 { $current=$iv_ruleeventDef.current; } 
	 EOF 
;

// Rule eventDef
ruleeventDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'event' 
    {
        createLeafNode(grammarAccess.getEventDefAccess().getEventKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getEventDefAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getEventDefAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getEventDefAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEventDefAccess().getDescrDescriptionParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_descr_4_0=ruledescription		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"descr",
	        		lv_descr_4_0, 
	        		"description", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEventDefAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 1);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEventDefAccess().getHeaderHeaderDefParserRuleCall_3_1_0_0(), currentNode); 
	    }
		lv_header_5_0=ruleheaderDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"header",
	        		lv_header_5_0, 
	        		"headerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEventDefAccess().getHeaderHeaderRefParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_header_6_0=ruleheaderRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"header",
	        		lv_header_6_0, 
	        		"headerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEventDefAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 2);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEventDefAccess().getBodyBodyDefParserRuleCall_3_2_0_0(), currentNode); 
	    }
		lv_body_7_0=rulebodyDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_7_0, 
	        		"bodyDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEventDefAccess().getBodyBodyRefParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_body_8_0=rulebodyRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_8_0, 
	        		"bodyRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEventDefAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEventDefAccess().getUnorderedGroup_3(), 3);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEventDefAccess().getFooterFooterDefParserRuleCall_3_3_0_0(), currentNode); 
	    }
		lv_footer_9_0=rulefooterDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"footer",
	        		lv_footer_9_0, 
	        		"footerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEventDefAccess().getFooterFooterRefParserRuleCall_3_3_1_0(), currentNode); 
	    }
		lv_footer_10_0=rulefooterRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"footer",
	        		lv_footer_10_0, 
	        		"footerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEventDefAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getEventDefAccess().getUnorderedGroup_3())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getEventDefAccess().getUnorderedGroup_3());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getEventDefAccess().getRightCurlyBracketKeyword_4(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getEventDefAccess().getSemicolonKeyword_5(), null); 
    }
)?)
;





// Entry rule entryRulemessageRef
entryRulemessageRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMessageRefRule(), currentNode); }
	 iv_rulemessageRef=rulemessageRef 
	 { $current=$iv_rulemessageRef.current; } 
	 EOF 
;

// Rule messageRef
rulemessageRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getMessageRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'message' 
    {
        createLeafNode(grammarAccess.getMessageRefAccess().getMessageKeyword_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMessageRefAccess().getRefMessageDefCrossReference_2_0(), "ref"); 
	}

)
)(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getMessageRefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getMessageRefAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleprotocolBehavior
entryRuleprotocolBehavior returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProtocolBehaviorRule(), currentNode); }
	 iv_ruleprotocolBehavior=ruleprotocolBehavior 
	 { $current=$iv_ruleprotocolBehavior.current; } 
	 EOF 
;

// Rule protocolBehavior
ruleprotocolBehavior returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getProtocolBehaviorAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProtocolBehaviorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_stateless_1_0=	'stateless' 
    {
        createLeafNode(grammarAccess.getProtocolBehaviorAccess().getStatelessStatelessKeyword_1_0(), "stateless"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProtocolBehaviorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "stateless", lv_stateless_1_0, "stateless", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'protocol' 
    {
        createLeafNode(grammarAccess.getProtocolBehaviorAccess().getProtocolKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getProtocolBehaviorAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProtocolBehaviorAccess().getStateMachineStateMachineParserRuleCall_4_0(), currentNode); 
	    }
		lv_stateMachine_4_0=rulestateMachine		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProtocolBehaviorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"stateMachine",
	        		lv_stateMachine_4_0, 
	        		"stateMachine", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'}' 
    {
        createLeafNode(grammarAccess.getProtocolBehaviorAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getProtocolBehaviorAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRulestartState
entryRulestartState returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStartStateRule(), currentNode); }
	 iv_rulestartState=rulestartState 
	 { $current=$iv_rulestartState.current; } 
	 EOF 
;

// Rule startState
rulestartState returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getStartStateAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStartStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'start' 
    {
        createLeafNode(grammarAccess.getStartStateAccess().getStartKeyword_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getStartStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getStartStateAccess().getScopedStateCrossReference_2_0_0(), "scoped"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getStartStateAccess().getFullStopKeyword_2_1(), null); 
    }
)*(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getStartStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getStartStateAccess().getStateStateCrossReference_3_0(), "state"); 
	}

)
))
;





// Entry rule entryRulestateMachine
entryRulestateMachine returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStateMachineRule(), currentNode); }
	 iv_rulestateMachine=rulestateMachine 
	 { $current=$iv_rulestateMachine.current; } 
	 EOF 
;

// Rule stateMachine
rulestateMachine returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getStateMachineAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateMachineRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'state_machine' 
    {
        createLeafNode(grammarAccess.getStateMachineAccess().getState_machineKeyword_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getStateMachineRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getStateMachineAccess().getScopedRefAttrCrossReference_2_0_0(), "scoped"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getStateMachineAccess().getFullStopKeyword_2_1(), null); 
    }
)*(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateMachineRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getStateMachineAccess().getLeftParenthesisKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateMachineAccess().getStartStateStartStateParserRuleCall_5_0(), currentNode); 
	    }
		lv_startState_6_0=rulestartState		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateMachineRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"startState",
	        		lv_startState_6_0, 
	        		"startState", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getStateMachineAccess().getRightParenthesisKeyword_6(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_7(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateMachineAccess().getDefaultStateDefaultStateParserRuleCall_8_0_0(), currentNode); 
	    }
		lv_defaultState_9_0=ruledefaultState		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateMachineRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultState",
	        		lv_defaultState_9_0, 
	        		"defaultState", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_states_10_0=rulestate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateMachineRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"states",
	        		lv_states_10_0, 
	        		"state", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+)	'}' 
    {
        createLeafNode(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_9(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getStateMachineAccess().getSemicolonKeyword_10(), null); 
    }
)?)
;





// Entry rule entryRulestate
entryRulestate returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStateRule(), currentNode); }
	 iv_rulestate=rulestate 
	 { $current=$iv_rulestate.current; } 
	 EOF 
;

// Rule state
rulestate returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getStateAccess().getStateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getStateAccess().getStateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getStateAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_initial_2_0=	'initial' 
    {
        createLeafNode(grammarAccess.getStateAccess().getInitialInitialKeyword_2_0(), "initial"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "initial", lv_initial_2_0, "initial", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'state' 
    {
        createLeafNode(grammarAccess.getStateAccess().getStateKeyword_3(), null); 
    }
(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateAccess().getEntryActionEntryParserRuleCall_6_0_0(), currentNode); 
	    }
		lv_entryAction_6_0=ruleentry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"entryAction",
	        		lv_entryAction_6_0, 
	        		"entry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateAccess().getExitActionExitParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_exitAction_7_0=ruleexit		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"exitAction",
	        		lv_exitAction_7_0, 
	        		"exit", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_transitions_8_0=ruletransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"transitions",
	        		lv_transitions_8_0, 
	        		"transition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateAccess().getDefaultTransitionDefaultTransitionParserRuleCall_6_3_0(), currentNode); 
	    }
		lv_defaultTransition_9_0=ruledefaultTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defaultTransition",
	        		lv_defaultTransition_9_0, 
	        		"defaultTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateAccess().getDefaultStateDefaultStateParserRuleCall_6_4_0(), currentNode); 
	    }
		lv_defaultState_10_0=ruledefaultState		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultState",
	        		lv_defaultState_10_0, 
	        		"defaultState", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStateAccess().getSubStateStateParserRuleCall_6_5_0(), currentNode); 
	    }
		lv_subState_11_0=rulestate		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subState",
	        		lv_subState_11_0, 
	        		"state", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)	'}' 
    {
        createLeafNode(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_7(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getStateAccess().getSemicolonKeyword_8(), null); 
    }
)?)
;





// Entry rule entryRuledefaultState
entryRuledefaultState returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDefaultStateRule(), currentNode); }
	 iv_ruledefaultState=ruledefaultState 
	 { $current=$iv_ruledefaultState.current; } 
	 EOF 
;

// Rule defaultState
ruledefaultState returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDefaultStateAccess().getDefaultStateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDefaultStateAccess().getDefaultStateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getDefaultStateAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'state' 
    {
        createLeafNode(grammarAccess.getDefaultStateAccess().getStateKeyword_2(), null); 
    }
	'default' 
    {
        createLeafNode(grammarAccess.getDefaultStateAccess().getDefaultKeyword_3(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDefaultStateAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultStateAccess().getTransitionTransitionParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_transition_5_0=ruletransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"transition",
	        		lv_transition_5_0, 
	        		"transition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultStateAccess().getDefaultTransitionDefaultTransitionParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_defaultTransition_6_0=ruledefaultTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"defaultTransition",
	        		lv_defaultTransition_6_0, 
	        		"defaultTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)	'}' 
    {
        createLeafNode(grammarAccess.getDefaultStateAccess().getRightCurlyBracketKeyword_6(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getDefaultStateAccess().getSemicolonKeyword_7(), null); 
    }
)?)
;





// Entry rule entryRuleentry
entryRuleentry returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEntryRule(), currentNode); }
	 iv_ruleentry=ruleentry 
	 { $current=$iv_ruleentry.current; } 
	 EOF 
;

// Rule entry
ruleentry returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getEntryAccess().getEntryAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getEntryAccess().getEntryAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getEntryAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'entry' 
    {
        createLeafNode(grammarAccess.getEntryAccess().getEntryKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getEntryAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getEntryAccess().getUnorderedGroup_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntryAccess().getUnorderedGroup_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntryAccess().getUnorderedGroup_4(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEntryAccess().getActionsActionListParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_actions_5_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_5_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryAccess().getUnorderedGroup_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntryAccess().getUnorderedGroup_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntryAccess().getUnorderedGroup_4(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEntryAccess().getSendActionsSendActionListParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_sendActions_6_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_6_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryAccess().getUnorderedGroup_4());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getEntryAccess().getUnorderedGroup_4())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getEntryAccess().getUnorderedGroup_4());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getEntryAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getEntryAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRuleexit
entryRuleexit returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExitRule(), currentNode); }
	 iv_ruleexit=ruleexit 
	 { $current=$iv_ruleexit.current; } 
	 EOF 
;

// Rule exit
ruleexit returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getExitAccess().getExitAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getExitAccess().getExitAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getExitAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'exit' 
    {
        createLeafNode(grammarAccess.getExitAccess().getExitKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getExitAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getExitAccess().getUnorderedGroup_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getExitAccess().getUnorderedGroup_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getExitAccess().getUnorderedGroup_4(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExitAccess().getActionsActionListParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_actions_5_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_5_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getExitAccess().getUnorderedGroup_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getExitAccess().getUnorderedGroup_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getExitAccess().getUnorderedGroup_4(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExitAccess().getSendActionsSendActionListParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_sendActions_6_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_6_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getExitAccess().getUnorderedGroup_4());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getExitAccess().getUnorderedGroup_4())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getExitAccess().getUnorderedGroup_4());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getExitAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getExitAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRuletransParams
entryRuletransParams returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTransParamsRule(), currentNode); }
	 iv_ruletransParams=ruletransParams 
	 { $current=$iv_ruletransParams.current; } 
	 EOF 
;

// Rule transParams
ruletransParams returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getTransParamsAccess().getTransParamsAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTransParamsAccess().getTransParamsAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'(' 
    {
        createLeafNode(grammarAccess.getTransParamsAccess().getLeftParenthesisKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransParamsAccess().getParamsTransParamParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_params_2_0=ruletransParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"params",
	        		lv_params_2_0, 
	        		"transParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getTransParamsAccess().getCommaKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransParamsAccess().getParamsTransParamParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_params_4_0=ruletransParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"params",
	        		lv_params_4_0, 
	        		"transParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getTransParamsAccess().getRightParenthesisKeyword_3(), null); 
    }
)
;





// Entry rule entryRuletransParam
entryRuletransParam returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTransParamRule(), currentNode); }
	 iv_ruletransParam=ruletransParam 
	 { $current=$iv_ruletransParam.current; } 
	 EOF 
;

// Rule transParam
ruletransParam returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getTransParamAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTransParamAccess().getTypeEObjectCrossReference_1_0_0(), "type"); 
	}

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransParamAccess().getScopedEventTypeScopedEventTypeParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_scopedEventType_2_0=rulescopedEventType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedEventType",
	        		lv_scopedEventType_2_0, 
	        		"scopedEventType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
(
		lv_unsignedType_3_1=	'uint8' 
    {
        createLeafNode(grammarAccess.getTransParamAccess().getUnsignedTypeUint8Keyword_1_2_0_0(), "unsignedType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsignedType", lv_unsignedType_3_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_unsignedType_3_2=	'uint16' 
    {
        createLeafNode(grammarAccess.getTransParamAccess().getUnsignedTypeUint16Keyword_1_2_0_1(), "unsignedType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsignedType", lv_unsignedType_3_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_unsignedType_3_3=	'uint32' 
    {
        createLeafNode(grammarAccess.getTransParamAccess().getUnsignedTypeUint32Keyword_1_2_0_2(), "unsignedType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsignedType", lv_unsignedType_3_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_unsignedType_3_4=	'uint64' 
    {
        createLeafNode(grammarAccess.getTransParamAccess().getUnsignedTypeUint64Keyword_1_2_0_3(), "unsignedType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unsignedType", lv_unsignedType_3_4, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTransParamAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuletransition
entryRuletransition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTransitionRule(), currentNode); }
	 iv_ruletransition=ruletransition 
	 { $current=$iv_ruletransition.current; } 
	 EOF 
;

// Rule transition
ruletransition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getTransitionAccess().getTransitionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTransitionAccess().getTransitionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getTransitionAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(((
(
		lv_type_2_0=	'internal' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTypeInternalKeyword_2_0_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_2_0, "internal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTransitionKeyword_2_0_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTransitionAccess().getScopedRefAttrCrossReference_2_0_2_0_0(), "scoped"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getFullStopKeyword_2_0_2_1(), null); 
    }
)*(
(
		lv_name_6_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_2_0_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getParamsTransParamsParserRuleCall_2_0_4_0(), currentNode); 
	    }
		lv_params_7_0=ruletransParams		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"params",
	        		lv_params_7_0, 
	        		"transParams", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_2_0_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getTransGuardGuardParserRuleCall_2_0_6_0(), currentNode); 
	    }
		lv_transGuard_9_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_9_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getActionsActionListParserRuleCall_2_0_7_0_0(), currentNode); 
	    }
		lv_actions_11_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_11_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getSendActionsSendActionListParserRuleCall_2_0_7_1_0(), currentNode); 
	    }
		lv_sendActions_12_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_12_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTransitionAccess().getUnorderedGroup_2_0_7());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getDestinationInternalTransitionParserRuleCall_2_0_8_0(), currentNode); 
	    }
		lv_destination_13_0=ruleinternalTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_13_0, 
	        		"internalTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		lv_type_14_0=	'simple' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTypeSimpleKeyword_2_1_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_14_0, "simple", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTransitionKeyword_2_1_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTransitionAccess().getScopedRefAttrCrossReference_2_1_2_0_0(), "scoped"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getFullStopKeyword_2_1_2_1(), null); 
    }
)*(
(
		lv_name_18_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_2_1_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_18_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getParamsTransParamsParserRuleCall_2_1_4_0(), currentNode); 
	    }
		lv_params_19_0=ruletransParams		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"params",
	        		lv_params_19_0, 
	        		"transParams", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_2_1_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getTransGuardGuardParserRuleCall_2_1_6_0(), currentNode); 
	    }
		lv_transGuard_21_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_21_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getActionsActionListParserRuleCall_2_1_7_0_0(), currentNode); 
	    }
		lv_actions_23_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_23_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getSendActionsSendActionListParserRuleCall_2_1_7_1_0(), currentNode); 
	    }
		lv_sendActions_24_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_24_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTransitionAccess().getUnorderedGroup_2_1_7());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getDestinationSimpleTransitionParserRuleCall_2_1_8_0(), currentNode); 
	    }
		lv_destination_25_0=rulesimpleTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_25_0, 
	        		"simpleTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		lv_type_26_0=	'push' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTypePushKeyword_2_2_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_26_0, "push", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTransitionKeyword_2_2_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTransitionAccess().getScopedRefAttrCrossReference_2_2_2_0_0(), "scoped"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getFullStopKeyword_2_2_2_1(), null); 
    }
)*(
(
		lv_name_30_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_2_2_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_30_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getParamsTransParamsParserRuleCall_2_2_4_0(), currentNode); 
	    }
		lv_params_31_0=ruletransParams		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"params",
	        		lv_params_31_0, 
	        		"transParams", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_2_2_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getTransGuardGuardParserRuleCall_2_2_6_0(), currentNode); 
	    }
		lv_transGuard_33_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_33_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getActionsActionListParserRuleCall_2_2_7_0_0(), currentNode); 
	    }
		lv_actions_35_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_35_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getSendActionsSendActionListParserRuleCall_2_2_7_1_0(), currentNode); 
	    }
		lv_sendActions_36_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_36_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTransitionAccess().getUnorderedGroup_2_2_7());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getDestinationPushTransitionParserRuleCall_2_2_8_0(), currentNode); 
	    }
		lv_destination_37_0=rulepushTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_37_0, 
	        		"pushTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		lv_type_38_0=	'pop' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTypePopKeyword_2_3_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_38_0, "pop", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getTransitionKeyword_2_3_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTransitionAccess().getScopedRefAttrCrossReference_2_3_2_0_0(), "scoped"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getFullStopKeyword_2_3_2_1(), null); 
    }
)*(
(
		lv_name_42_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_2_3_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_42_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getParamsTransParamsParserRuleCall_2_3_4_0(), currentNode); 
	    }
		lv_params_43_0=ruletransParams		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"params",
	        		lv_params_43_0, 
	        		"transParams", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_2_3_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getTransGuardGuardParserRuleCall_2_3_6_0(), currentNode); 
	    }
		lv_transGuard_45_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_45_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getActionsActionListParserRuleCall_2_3_7_0_0(), currentNode); 
	    }
		lv_actions_47_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_47_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getSendActionsSendActionListParserRuleCall_2_3_7_1_0(), currentNode); 
	    }
		lv_sendActions_48_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_48_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTransitionAccess().getUnorderedGroup_2_3_7());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTransitionAccess().getDestinationPopTransitionParserRuleCall_2_3_8_0(), currentNode); 
	    }
		lv_destination_49_0=rulepopTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_49_0, 
	        		"popTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))	'}' 
    {
        createLeafNode(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuledefaultTransition
entryRuledefaultTransition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDefaultTransitionRule(), currentNode); }
	 iv_ruledefaultTransition=ruledefaultTransition 
	 { $current=$iv_ruledefaultTransition.current; } 
	 EOF 
;

// Rule defaultTransition
ruledefaultTransition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getDefaultTransitionAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'default' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getDefaultKeyword_1(), null); 
    }
(((
(
		lv_type_2_0=	'internal' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTypeInternalKeyword_2_0_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_2_0, "internal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTransitionKeyword_2_0_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getLeftCurlyBracketKeyword_2_0_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getTransGuardGuardParserRuleCall_2_0_3_0(), currentNode); 
	    }
		lv_transGuard_5_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_5_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getActionsActionListParserRuleCall_2_0_4_0_0(), currentNode); 
	    }
		lv_actions_7_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_7_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getSendActionsSendActionListParserRuleCall_2_0_4_1_0(), currentNode); 
	    }
		lv_sendActions_8_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_8_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_0_4());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getDestinationInternalTransitionParserRuleCall_2_0_5_0(), currentNode); 
	    }
		lv_destination_9_0=ruleinternalTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_9_0, 
	        		"internalTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		lv_type_10_0=	'simple' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTypeSimpleKeyword_2_1_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_10_0, "simple", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTransitionKeyword_2_1_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getLeftCurlyBracketKeyword_2_1_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getTransGuardGuardParserRuleCall_2_1_3_0(), currentNode); 
	    }
		lv_transGuard_13_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_13_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getActionsActionListParserRuleCall_2_1_4_0_0(), currentNode); 
	    }
		lv_actions_15_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_15_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getSendActionsSendActionListParserRuleCall_2_1_4_1_0(), currentNode); 
	    }
		lv_sendActions_16_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_16_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_1_4());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getDestinationSimpleTransitionParserRuleCall_2_1_5_0(), currentNode); 
	    }
		lv_destination_17_0=rulesimpleTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_17_0, 
	        		"simpleTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		lv_type_18_0=	'push' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTypePushKeyword_2_2_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_18_0, "push", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTransitionKeyword_2_2_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getLeftCurlyBracketKeyword_2_2_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getTransGuardGuardParserRuleCall_2_2_3_0(), currentNode); 
	    }
		lv_transGuard_21_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_21_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getActionsActionListParserRuleCall_2_2_4_0_0(), currentNode); 
	    }
		lv_actions_23_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_23_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getSendActionsSendActionListParserRuleCall_2_2_4_1_0(), currentNode); 
	    }
		lv_sendActions_24_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_24_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_2_4());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getDestinationPushTransitionParserRuleCall_2_2_5_0(), currentNode); 
	    }
		lv_destination_25_0=rulepushTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_25_0, 
	        		"pushTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		lv_type_26_0=	'pop' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTypePopKeyword_2_3_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_26_0, "pop", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'transition' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getTransitionKeyword_2_3_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getLeftCurlyBracketKeyword_2_3_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getTransGuardGuardParserRuleCall_2_3_3_0(), currentNode); 
	    }
		lv_transGuard_29_0=ruleguard		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"transGuard",
	        		lv_transGuard_29_0, 
	        		"guard", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getActionsActionListParserRuleCall_2_3_4_0_0(), currentNode); 
	    }
		lv_actions_31_0=ruleactionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"actions",
	        		lv_actions_31_0, 
	        		"actionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4(), 1);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getSendActionsSendActionListParserRuleCall_2_3_4_1_0(), currentNode); 
	    }
		lv_sendActions_32_0=rulesendActionList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sendActions",
	        		lv_sendActions_32_0, 
	        		"sendActionList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDefaultTransitionAccess().getUnorderedGroup_2_3_4());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDefaultTransitionAccess().getDestinationPopTransitionParserRuleCall_2_3_5_0(), currentNode); 
	    }
		lv_destination_33_0=rulepopTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefaultTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"destination",
	        		lv_destination_33_0, 
	        		"popTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))	'}' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getRightCurlyBracketKeyword_3(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getDefaultTransitionAccess().getSemicolonKeyword_4(), null); 
    }
)?)
;





// Entry rule entryRuleinternalTransition
entryRuleinternalTransition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInternalTransitionRule(), currentNode); }
	 iv_ruleinternalTransition=ruleinternalTransition 
	 { $current=$iv_ruleinternalTransition.current; } 
	 EOF 
;

// Rule internalTransition
ruleinternalTransition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getInternalTransitionAccess().getInternalTransitionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInternalTransitionAccess().getInternalTransitionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getInternalTransitionAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInternalTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRulesimpleTransition
entryRulesimpleTransition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSimpleTransitionRule(), currentNode); }
	 iv_rulesimpleTransition=rulesimpleTransition 
	 { $current=$iv_rulesimpleTransition.current; } 
	 EOF 
;

// Rule simpleTransition
rulesimpleTransition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getSimpleTransitionAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSimpleTransitionAccess().getNextStateNextStateParserRuleCall_1_0(), currentNode); 
	    }
		lv_nextState_1_0=rulenextState		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nextState",
	        		lv_nextState_1_0, 
	        		"nextState", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRulepushTransition
entryRulepushTransition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPushTransitionRule(), currentNode); }
	 iv_rulepushTransition=rulepushTransition 
	 { $current=$iv_rulepushTransition.current; } 
	 EOF 
;

// Rule pushTransition
rulepushTransition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getPushTransitionAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPushTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPushTransitionAccess().getNextStateNextStateParserRuleCall_1_0(), currentNode); 
	    }
		lv_nextState_1_0=rulenextState		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPushTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nextState",
	        		lv_nextState_1_0, 
	        		"nextState", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'popto' 
    {
        createLeafNode(grammarAccess.getPushTransitionAccess().getPoptoKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPushTransitionAccess().getSimpleTransitionSimpleTransitionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_simpleTransition_3_0=rulesimpleTransition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPushTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"simpleTransition",
	        		lv_simpleTransition_3_0, 
	        		"simpleTransition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRulepopTransition
entryRulepopTransition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPopTransitionRule(), currentNode); }
	 iv_rulepopTransition=rulepopTransition 
	 { $current=$iv_rulepopTransition.current; } 
	 EOF 
;

// Rule popTransition
rulepopTransition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getPopTransitionAccess().getPopTransitionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPopTransitionAccess().getPopTransitionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getPopTransitionAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPopTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	'secondary' 
    {
        createLeafNode(grammarAccess.getPopTransitionAccess().getSecondaryKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPopTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getPopTransitionAccess().getSecondaryTransitionTransitionCrossReference_2_1_0(), "secondaryTransition"); 
	}

)
)	'(' 
    {
        createLeafNode(grammarAccess.getPopTransitionAccess().getLeftParenthesisKeyword_2_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPopTransitionAccess().getParamGuardParamParserRuleCall_2_3_0_0(), currentNode); 
	    }
		lv_param_5_0=ruleguardParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPopTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"param",
	        		lv_param_5_0, 
	        		"guardParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getPopTransitionAccess().getCommaKeyword_2_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPopTransitionAccess().getParamGuardParamParserRuleCall_2_3_1_1_0(), currentNode); 
	    }
		lv_param_7_0=ruleguardParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPopTransitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"param",
	        		lv_param_7_0, 
	        		"guardParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getPopTransitionAccess().getRightParenthesisKeyword_2_4(), null); 
    }
)?	';' 
    {
        createLeafNode(grammarAccess.getPopTransitionAccess().getSemicolonKeyword_3(), null); 
    }
)
;





// Entry rule entryRulenextState
entryRulenextState returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNextStateRule(), currentNode); }
	 iv_rulenextState=rulenextState 
	 { $current=$iv_rulenextState.current; } 
	 EOF 
;

// Rule nextState
rulenextState returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getNextStateAccess().getNextStateAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getNextStateAccess().getNextStateAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_comment_1_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getNextStateAccess().getCommentINTERPRETATIONTerminalRuleCall_1_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNextStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_1_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	'->' 
    {
        createLeafNode(grammarAccess.getNextStateAccess().getHyphenMinusGreaterThanSignKeyword_2_0(), null); 
    }

    |	'next' 
    {
        createLeafNode(grammarAccess.getNextStateAccess().getNextKeyword_2_1(), null); 
    }
)((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getNextStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getNextStateAccess().getFirstStateStateCrossReference_3_0_0(), "firstState"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getNextStateAccess().getFullStopKeyword_3_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getNextStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getNextStateAccess().getScopedStateCrossReference_3_2_0_0(), "scoped"); 
	}

)
)	'.' 
    {
        createLeafNode(grammarAccess.getNextStateAccess().getFullStopKeyword_3_2_1(), null); 
    }
)*)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getNextStateRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getNextStateAccess().getNextStateStateCrossReference_4_0(), "nextState"); 
	}

)
)	';' 
    {
        createLeafNode(grammarAccess.getNextStateAccess().getSemicolonKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleguard
entryRuleguard returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGuardRule(), currentNode); }
	 iv_ruleguard=ruleguard 
	 { $current=$iv_ruleguard.current; } 
	 EOF 
;

// Rule guard
ruleguard returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getGuardAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'guard' 
    {
        createLeafNode(grammarAccess.getGuardAccess().getGuardKeyword_1(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getGuardAccess().getColonKeyword_2(), null); 
    }
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGuardAccess().getGuardActionGuardActionParserRuleCall_3_0_0_0(), currentNode); 
	    }
		lv_guardAction_3_0=ruleguardAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"guardAction",
	        		lv_guardAction_3_0, 
	        		"guardAction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
(
		lv_equiv_4_1=	'=' 
    {
        createLeafNode(grammarAccess.getGuardAccess().getEquivEqualsSignKeyword_3_0_1_0_0(), "equiv"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "equiv", lv_equiv_4_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_equiv_4_2=	'!=' 
    {
        createLeafNode(grammarAccess.getGuardAccess().getEquivExclamationMarkEqualsSignKeyword_3_0_1_0_1(), "equiv"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "equiv", lv_equiv_4_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGuardAccess().getGuardActionGuardActionParserRuleCall_3_0_2_0(), currentNode); 
	    }
		lv_guardAction_5_0=ruleguardAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"guardAction",
	        		lv_guardAction_5_0, 
	        		"guardAction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGuardAccess().getGuardActionGuardActionParserRuleCall_3_1_0_0(), currentNode); 
	    }
		lv_guardAction_6_0=ruleguardAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"guardAction",
	        		lv_guardAction_6_0, 
	        		"guardAction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
(
		lv_logicalOperator_7_1=	'&&' 
    {
        createLeafNode(grammarAccess.getGuardAccess().getLogicalOperatorAmpersandAmpersandKeyword_3_1_1_0_0_0(), "logicalOperator"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "logicalOperator", lv_logicalOperator_7_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_logicalOperator_7_2=	'||' 
    {
        createLeafNode(grammarAccess.getGuardAccess().getLogicalOperatorVerticalLineVerticalLineKeyword_3_1_1_0_0_1(), "logicalOperator"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "logicalOperator", lv_logicalOperator_7_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGuardAccess().getGuardActionGuardActionParserRuleCall_3_1_1_1_0(), currentNode); 
	    }
		lv_guardAction_8_0=ruleguardAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"guardAction",
	        		lv_guardAction_8_0, 
	        		"guardAction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*))	';' 
    {
        createLeafNode(grammarAccess.getGuardAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleguardAction
entryRuleguardAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGuardActionRule(), currentNode); }
	 iv_ruleguardAction=ruleguardAction 
	 { $current=$iv_ruleguardAction.current; } 
	 EOF 
;

// Rule guardAction
ruleguardAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_not_0_0=	'!' 
    {
        createLeafNode(grammarAccess.getGuardActionAccess().getNotExclamationMarkKeyword_0_0(), "not"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "not", lv_not_0_0, "!", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getGuardActionAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getGuardActionAccess().getLeftParenthesisKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGuardActionAccess().getParamGuardParamParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_param_3_0=ruleguardParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"param",
	        		lv_param_3_0, 
	        		"guardParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getGuardActionAccess().getCommaKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGuardActionAccess().getParamGuardParamParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_param_5_0=ruleguardParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"param",
	        		lv_param_5_0, 
	        		"guardParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getGuardActionAccess().getRightParenthesisKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleguardParam
entryRuleguardParam returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGuardParamRule(), currentNode); }
	 iv_ruleguardParam=ruleguardParam 
	 { $current=$iv_ruleguardParam.current; } 
	 EOF 
;

// Rule guardParam
ruleguardParam returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getGuardParamAccess().getParameterTransParamCrossReference_0_0(), "parameter"); 
	}

)
)
    |(
(
		lv_guardConst_1_0=RULE_STRINGLITERAL
		{
			createLeafNode(grammarAccess.getGuardParamAccess().getGuardConstSTRINGLITERALTerminalRuleCall_1_0(), "guardConst"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGuardParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"guardConst",
	        		lv_guardConst_1_0, 
	        		"STRINGLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleactionList
entryRuleactionList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActionListRule(), currentNode); }
	 iv_ruleactionList=ruleactionList 
	 { $current=$iv_ruleactionList.current; } 
	 EOF 
;

// Rule actionList
ruleactionList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getActionListAccess().getActionListAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getActionListAccess().getActionListAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'actions' 
    {
        createLeafNode(grammarAccess.getActionListAccess().getActionsKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getActionListAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getActionListAccess().getActionsActionParserRuleCall_3_0(), currentNode); 
	    }
		lv_actions_3_0=ruleaction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_3_0, 
	        		"action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getActionListAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRulesendActionList
entryRulesendActionList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSendActionListRule(), currentNode); }
	 iv_rulesendActionList=rulesendActionList 
	 { $current=$iv_rulesendActionList.current; } 
	 EOF 
;

// Rule sendActionList
rulesendActionList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSendActionListAccess().getSendActionListAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSendActionListAccess().getSendActionListAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'send' 
    {
        createLeafNode(grammarAccess.getSendActionListAccess().getSendKeyword_1(), null); 
    }
	'actions' 
    {
        createLeafNode(grammarAccess.getSendActionListAccess().getActionsKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getSendActionListAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSendActionListAccess().getActionsActionParserRuleCall_4_0(), currentNode); 
	    }
		lv_actions_4_0=ruleaction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSendActionListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_4_0, 
	        		"action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getSendActionListAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleaction
entryRuleaction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActionRule(), currentNode); }
	 iv_ruleaction=ruleaction 
	 { $current=$iv_ruleaction.current; } 
	 EOF 
;

// Rule action
ruleaction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getActionAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
(
		lv_name_1_1=RULE_ID
		{
			createLeafNode(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_1, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getNameURIParserRuleCall_1_0_1(), currentNode); 
	    }
		lv_name_1_2=ruleURI		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_2, 
	        		"URI", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)	'(' 
    {
        createLeafNode(grammarAccess.getActionAccess().getLeftParenthesisKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getParamGuardParamParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_param_3_0=ruleguardParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"param",
	        		lv_param_3_0, 
	        		"guardParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getActionAccess().getCommaKeyword_3_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getParamGuardParamParserRuleCall_3_1_1_0(), currentNode); 
	    }
		lv_param_5_0=ruleguardParam		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"param",
	        		lv_param_5_0, 
	        		"guardParam", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	')' 
    {
        createLeafNode(grammarAccess.getActionAccess().getRightParenthesisKeyword_4(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getActionAccess().getSemicolonKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleconstDef
entryRuleconstDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConstDefRule(), currentNode); }
	 iv_ruleconstDef=ruleconstDef 
	 { $current=$iv_ruleconstDef.current; } 
	 EOF 
;

// Rule constDef
ruleconstDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getConstDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstDefAccess().getConstTypeSimpleNumericTypeParserRuleCall_1_0(), currentNode); 
	    }
		lv_constType_1_0=rulesimpleNumericType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constType",
	        		lv_constType_1_0, 
	        		"simpleNumericType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getConstDefAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getConstDefAccess().getEqualsSignKeyword_3(), null); 
    }
(
(
(
		lv_constValue_4_1=RULE_NONINTNUMBER
		{
			createLeafNode(grammarAccess.getConstDefAccess().getConstValueNonIntNumberTerminalRuleCall_4_0_0(), "constValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constValue",
	        		lv_constValue_4_1, 
	        		"NonIntNumber", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_constValue_4_2=RULE_DECIMAL
		{
			createLeafNode(grammarAccess.getConstDefAccess().getConstValueDECIMALTerminalRuleCall_4_0_1(), "constValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constValue",
	        		lv_constValue_4_2, 
	        		"DECIMAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_constValue_4_3=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getConstDefAccess().getConstValueINTLITERALTerminalRuleCall_4_0_2(), "constValue"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constValue",
	        		lv_constValue_4_3, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstDefAccess().getFieldUnitsUNITEnumRuleCall_5_0(), currentNode); 
	    }
		lv_fieldUnits_5_0=ruleUNIT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fieldUnits",
	        		lv_fieldUnits_5_0, 
	        		"UNIT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getConstDefAccess().getSemicolonKeyword_6(), null); 
    }
)
;





// Entry rule entryRuledeclaredTypeSetRef
entryRuledeclaredTypeSetRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeclaredTypeSetRefRule(), currentNode); }
	 iv_ruledeclaredTypeSetRef=ruledeclaredTypeSetRef 
	 { $current=$iv_ruledeclaredTypeSetRef.current; } 
	 EOF 
;

// Rule declaredTypeSetRef
ruledeclaredTypeSetRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getDeclaredTypeSetRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'using' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetRefAccess().getUsingKeyword_1(), null); 
    }
	'typeset' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetRefAccess().getTypesetKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredTypeSetRefAccess().getImportedNamespaceDeclaredTypeSetCrossReference_3_0(), currentNode); 
	    }
		ruleURI		{ 
	        currentNode = currentNode.getParent();
	    }

)
)	'as' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetRefAccess().getAsKeyword_4(), null); 
    }
(
(
		lv_name_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDeclaredTypeSetRefAccess().getNameIDTerminalRuleCall_5_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredTypeSetRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	';' 
    {
        createLeafNode(grammarAccess.getDeclaredTypeSetRefAccess().getSemicolonKeyword_6(), null); 
    }
)
;





// Entry rule entryRuletypeDef
entryRuletypeDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeDefRule(), currentNode); }
	 iv_ruletypeDef=ruletypeDef 
	 { $current=$iv_ruletypeDef.current; } 
	 EOF 
;

// Rule typeDef
ruletypeDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getMessageDefMessageDefParserRuleCall_0_0(), currentNode); 
	    }
		lv_messageDef_0_0=rulemessageDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"messageDef",
	        		lv_messageDef_0_0, 
	        		"messageDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getArrayDefArrayDefParserRuleCall_1_0(), currentNode); 
	    }
		lv_arrayDef_1_0=rulearrayDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arrayDef",
	        		lv_arrayDef_1_0, 
	        		"arrayDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getRecordDefRecordDefParserRuleCall_2_0(), currentNode); 
	    }
		lv_recordDef_2_0=rulerecordDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"recordDef",
	        		lv_recordDef_2_0, 
	        		"recordDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getListDefListDefParserRuleCall_3_0(), currentNode); 
	    }
		lv_listDef_3_0=rulelistDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"listDef",
	        		lv_listDef_3_0, 
	        		"listDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getVariantDefVariantDefParserRuleCall_4_0(), currentNode); 
	    }
		lv_variantDef_4_0=rulevariantDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"variantDef",
	        		lv_variantDef_4_0, 
	        		"variantDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getSequenceDefSequenceDefParserRuleCall_5_0(), currentNode); 
	    }
		lv_sequenceDef_5_0=rulesequenceDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sequenceDef",
	        		lv_sequenceDef_5_0, 
	        		"sequenceDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getFixedFieldDefFixedFieldDefParserRuleCall_6_0(), currentNode); 
	    }
		lv_fixedFieldDef_6_0=rulefixedFieldDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fixedFieldDef",
	        		lv_fixedFieldDef_6_0, 
	        		"fixedFieldDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getVarFieldVarFieldParserRuleCall_7_0(), currentNode); 
	    }
		lv_varField_7_0=rulevarField		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"varField",
	        		lv_varField_7_0, 
	        		"varField", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getBitfieldDefBitfieldDefParserRuleCall_8_0(), currentNode); 
	    }
		lv_bitfieldDef_8_0=rulebitfieldDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"bitfieldDef",
	        		lv_bitfieldDef_8_0, 
	        		"bitfieldDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getFixedLenStringFixedLenStringParserRuleCall_9_0(), currentNode); 
	    }
		lv_fixedLenString_9_0=rulefixedLenString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fixedLenString",
	        		lv_fixedLenString_9_0, 
	        		"fixedLenString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getVarLenStringVarLenStringParserRuleCall_10_0(), currentNode); 
	    }
		lv_varLenString_10_0=rulevarLenString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"varLenString",
	        		lv_varLenString_10_0, 
	        		"varLenString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getVarLenFieldVarLenFieldParserRuleCall_11_0(), currentNode); 
	    }
		lv_varLenField_11_0=rulevarLenField		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"varLenField",
	        		lv_varLenField_11_0, 
	        		"varLenField", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getVarFormatFieldVarFormatFieldParserRuleCall_12_0(), currentNode); 
	    }
		lv_varFormatField_12_0=rulevarFormatField		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"varFormatField",
	        		lv_varFormatField_12_0, 
	        		"varFormatField", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getHeaderDefHeaderDefParserRuleCall_13_0(), currentNode); 
	    }
		lv_headerDef_13_0=ruleheaderDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"headerDef",
	        		lv_headerDef_13_0, 
	        		"headerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getBodyDefBodyDefParserRuleCall_14_0(), currentNode); 
	    }
		lv_bodyDef_14_0=rulebodyDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"bodyDef",
	        		lv_bodyDef_14_0, 
	        		"bodyDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeDefAccess().getFooterDefFooterDefParserRuleCall_15_0(), currentNode); 
	    }
		lv_footerDef_15_0=rulefooterDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"footerDef",
	        		lv_footerDef_15_0, 
	        		"footerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRulemessageDef
entryRulemessageDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMessageDefRule(), currentNode); }
	 iv_rulemessageDef=rulemessageDef 
	 { $current=$iv_rulemessageDef.current; } 
	 EOF 
;

// Rule messageDef
rulemessageDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_command_0_0=	'command' 
    {
        createLeafNode(grammarAccess.getMessageDefAccess().getCommandCommandKeyword_0_0(), "command"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "command", lv_command_0_0, "command", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'message' 
    {
        createLeafNode(grammarAccess.getMessageDefAccess().getMessageKeyword_1(), null); 
    }
(
(
		lv_messageID_2_0=RULE_MESSAGE_CODE
		{
			createLeafNode(grammarAccess.getMessageDefAccess().getMessageIDMESSAGE_CODETerminalRuleCall_2_0(), "messageID"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"messageID",
	        		lv_messageID_2_0, 
	        		"MESSAGE_CODE", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getMessageDefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getMessageDefAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getMessageDefAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 0);
	 				}
					(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageDefAccess().getDescrDescriptionParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_descr_6_0=ruledescription		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"descr",
	        		lv_descr_6_0, 
	        		"description", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMessageDefAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 1);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageDefAccess().getHeaderHeaderDefParserRuleCall_5_1_0_0(), currentNode); 
	    }
		lv_header_7_0=ruleheaderDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"header",
	        		lv_header_7_0, 
	        		"headerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageDefAccess().getHeaderHeaderRefParserRuleCall_5_1_1_0(), currentNode); 
	    }
		lv_header_8_0=ruleheaderRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"header",
	        		lv_header_8_0, 
	        		"headerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMessageDefAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 2);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageDefAccess().getBodyBodyDefParserRuleCall_5_2_0_0(), currentNode); 
	    }
		lv_body_9_0=rulebodyDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_9_0, 
	        		"bodyDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageDefAccess().getBodyBodyRefParserRuleCall_5_2_1_0(), currentNode); 
	    }
		lv_body_10_0=rulebodyRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_10_0, 
	        		"bodyRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMessageDefAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMessageDefAccess().getUnorderedGroup_5(), 3);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageDefAccess().getFooterFooterDefParserRuleCall_5_3_0_0(), currentNode); 
	    }
		lv_footer_11_0=rulefooterDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"footer",
	        		lv_footer_11_0, 
	        		"footerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMessageDefAccess().getFooterFooterRefParserRuleCall_5_3_1_0(), currentNode); 
	    }
		lv_footer_12_0=rulefooterRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"footer",
	        		lv_footer_12_0, 
	        		"footerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMessageDefAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getMessageDefAccess().getUnorderedGroup_5())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getMessageDefAccess().getUnorderedGroup_5());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getMessageDefAccess().getRightCurlyBracketKeyword_6(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getMessageDefAccess().getSemicolonKeyword_7(), null); 
    }
)?)
;





// Entry rule entryRuleheaderDef
entryRuleheaderDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getHeaderDefRule(), currentNode); }
	 iv_ruleheaderDef=ruleheaderDef 
	 { $current=$iv_ruleheaderDef.current; } 
	 EOF 
;

// Rule headerDef
ruleheaderDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getHeaderDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'header' 
    {
        createLeafNode(grammarAccess.getHeaderDefAccess().getHeaderKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getHeaderDefAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getHeaderDefAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getHeaderDefAccess().getRecordListSequenceVariantContainerDefParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_recordListSequenceVariant_4_0=rulecontainerDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"recordListSequenceVariant",
	        		lv_recordListSequenceVariant_4_0, 
	        		"containerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getHeaderDefAccess().getRecordListSequenceVariantContainerRefParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_recordListSequenceVariant_5_0=rulecontainerRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"recordListSequenceVariant",
	        		lv_recordListSequenceVariant_5_0, 
	        		"containerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getHeaderDefAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getHeaderDefAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRulebodyDef
entryRulebodyDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBodyDefRule(), currentNode); }
	 iv_rulebodyDef=rulebodyDef 
	 { $current=$iv_rulebodyDef.current; } 
	 EOF 
;

// Rule bodyDef
rulebodyDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getBodyDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'body' 
    {
        createLeafNode(grammarAccess.getBodyDefAccess().getBodyKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getBodyDefAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getBodyDefAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBodyDefAccess().getRecordListSequenceVariantContainerDefParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_recordListSequenceVariant_4_0=rulecontainerDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"recordListSequenceVariant",
	        		lv_recordListSequenceVariant_4_0, 
	        		"containerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBodyDefAccess().getRecordListSequenceVariantContainerRefParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_recordListSequenceVariant_5_0=rulecontainerRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"recordListSequenceVariant",
	        		lv_recordListSequenceVariant_5_0, 
	        		"containerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getBodyDefAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getBodyDefAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRulefooterDef
entryRulefooterDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFooterDefRule(), currentNode); }
	 iv_rulefooterDef=rulefooterDef 
	 { $current=$iv_rulefooterDef.current; } 
	 EOF 
;

// Rule footerDef
rulefooterDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getFooterDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'footer' 
    {
        createLeafNode(grammarAccess.getFooterDefAccess().getFooterKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFooterDefAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getFooterDefAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFooterDefAccess().getRecordListSequenceVariantContainerDefParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_recordListSequenceVariant_4_0=rulecontainerDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"recordListSequenceVariant",
	        		lv_recordListSequenceVariant_4_0, 
	        		"containerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFooterDefAccess().getRecordListSequenceVariantContainerRefParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_recordListSequenceVariant_5_0=rulecontainerRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"recordListSequenceVariant",
	        		lv_recordListSequenceVariant_5_0, 
	        		"containerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getFooterDefAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getFooterDefAccess().getSemicolonKeyword_6(), null); 
    }
)?)
;





// Entry rule entryRuleheaderRef
entryRuleheaderRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getHeaderRefRule(), currentNode); }
	 iv_ruleheaderRef=ruleheaderRef 
	 { $current=$iv_ruleheaderRef.current; } 
	 EOF 
;

// Rule headerRef
ruleheaderRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getHeaderRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'header' 
    {
        createLeafNode(grammarAccess.getHeaderRefAccess().getHeaderKeyword_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getHeaderRefAccess().getTypeRefHeaderDefCrossReference_2_0_0(), "typeRef"); 
	}

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getHeaderRefAccess().getScopedRefHeaderScopedRefParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_scopedRef_3_0=ruleheaderScopedRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedRef",
	        		lv_scopedRef_3_0, 
	        		"headerScopedRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getHeaderRefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getHeaderRefAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRulebodyRef
entryRulebodyRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBodyRefRule(), currentNode); }
	 iv_rulebodyRef=rulebodyRef 
	 { $current=$iv_rulebodyRef.current; } 
	 EOF 
;

// Rule bodyRef
rulebodyRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getBodyRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'body' 
    {
        createLeafNode(grammarAccess.getBodyRefAccess().getBodyKeyword_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBodyRefAccess().getTypeRefBodyDefCrossReference_2_0_0(), "typeRef"); 
	}

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBodyRefAccess().getScopedRefBodyScopedRefParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_scopedRef_3_0=rulebodyScopedRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedRef",
	        		lv_scopedRef_3_0, 
	        		"bodyScopedRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getBodyRefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getBodyRefAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRulefooterRef
entryRulefooterRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFooterRefRule(), currentNode); }
	 iv_rulefooterRef=rulefooterRef 
	 { $current=$iv_rulefooterRef.current; } 
	 EOF 
;

// Rule footerRef
rulefooterRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getFooterRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'footer' 
    {
        createLeafNode(grammarAccess.getFooterRefAccess().getFooterKeyword_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFooterRefAccess().getTypeRefFooterDefCrossReference_2_0_0(), "typeRef"); 
	}

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFooterRefAccess().getScopedRefFooterScopedRefParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_scopedRef_3_0=rulefooterScopedRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedRef",
	        		lv_scopedRef_3_0, 
	        		"footerScopedRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFooterRefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getFooterRefAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleheaderScopedRef
entryRuleheaderScopedRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getHeaderScopedRefRule(), currentNode); }
	 iv_ruleheaderScopedRef=ruleheaderScopedRef 
	 { $current=$iv_ruleheaderScopedRef.current; } 
	 EOF 
;

// Rule headerScopedRef
ruleheaderScopedRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getHeaderScopedRefAccess().getNameEObjectCrossReference_0_0(), "name"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getHeaderScopedRefAccess().getFullStopKeyword_1_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getHeaderScopedRefAccess().getNamesEObjectCrossReference_1_1_0(), "names"); 
	}

)
))*	'.' 
    {
        createLeafNode(grammarAccess.getHeaderScopedRefAccess().getFullStopKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getHeaderScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getHeaderScopedRefAccess().getTypeHeaderDefCrossReference_3_0(), "type"); 
	}

)
))
;





// Entry rule entryRulebodyScopedRef
entryRulebodyScopedRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBodyScopedRefRule(), currentNode); }
	 iv_rulebodyScopedRef=rulebodyScopedRef 
	 { $current=$iv_rulebodyScopedRef.current; } 
	 EOF 
;

// Rule bodyScopedRef
rulebodyScopedRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBodyScopedRefAccess().getNameEObjectCrossReference_0_0(), "name"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getBodyScopedRefAccess().getFullStopKeyword_1_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBodyScopedRefAccess().getNamesEObjectCrossReference_1_1_0(), "names"); 
	}

)
))*	'.' 
    {
        createLeafNode(grammarAccess.getBodyScopedRefAccess().getFullStopKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBodyScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBodyScopedRefAccess().getTypeBodyDefCrossReference_3_0(), "type"); 
	}

)
))
;





// Entry rule entryRulefooterScopedRef
entryRulefooterScopedRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFooterScopedRefRule(), currentNode); }
	 iv_rulefooterScopedRef=rulefooterScopedRef 
	 { $current=$iv_rulefooterScopedRef.current; } 
	 EOF 
;

// Rule footerScopedRef
rulefooterScopedRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFooterScopedRefAccess().getNameEObjectCrossReference_0_0(), "name"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getFooterScopedRefAccess().getFullStopKeyword_1_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFooterScopedRefAccess().getNamesEObjectCrossReference_1_1_0(), "names"); 
	}

)
))*	'.' 
    {
        createLeafNode(grammarAccess.getFooterScopedRefAccess().getFullStopKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFooterScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFooterScopedRefAccess().getTypeFooterDefCrossReference_3_0(), "type"); 
	}

)
))
;





// Entry rule entryRulecontainerDef
entryRulecontainerDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContainerDefRule(), currentNode); }
	 iv_rulecontainerDef=rulecontainerDef 
	 { $current=$iv_rulecontainerDef.current; } 
	 EOF 
;

// Rule containerDef
rulecontainerDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerDefAccess().getRecordDefParserRuleCall_0(), currentNode); 
    }
    this_recordDef_0=rulerecordDef
    { 
        $current = $this_recordDef_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerDefAccess().getListDefParserRuleCall_1(), currentNode); 
    }
    this_listDef_1=rulelistDef
    { 
        $current = $this_listDef_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerDefAccess().getVariantDefParserRuleCall_2(), currentNode); 
    }
    this_variantDef_2=rulevariantDef
    { 
        $current = $this_variantDef_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getContainerDefAccess().getSequenceDefParserRuleCall_3(), currentNode); 
    }
    this_sequenceDef_3=rulesequenceDef
    { 
        $current = $this_sequenceDef_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRulecontainerRef
entryRulecontainerRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContainerRefRule(), currentNode); }
	 iv_rulecontainerRef=rulecontainerRef 
	 { $current=$iv_rulecontainerRef.current; } 
	 EOF 
;

// Rule containerRef
rulecontainerRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getContainerRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getContainerRefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getContainerRefAccess().getTypeContainerDefCrossReference_2_0_0(), "type"); 
	}

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContainerRefAccess().getTypeScopedScopedTypeParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_typeScoped_3_0=rulescopedType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"typeScoped",
	        		lv_typeScoped_3_0, 
	        		"scopedType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getContainerRefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContainerRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getContainerRefAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRuledeclaredEventDef
entryRuledeclaredEventDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDeclaredEventDefRule(), currentNode); }
	 iv_ruledeclaredEventDef=ruledeclaredEventDef 
	 { $current=$iv_ruledeclaredEventDef.current; } 
	 EOF 
;

// Rule declaredEventDef
ruledeclaredEventDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getDeclaredEventDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'eventset' 
    {
        createLeafNode(grammarAccess.getDeclaredEventDefAccess().getEventsetKeyword_1(), null); 
    }
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDeclaredEventDefAccess().getTypeEventDefCrossReference_2_0_0(), "type"); 
	}

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDeclaredEventDefAccess().getScopedEventTypeScopedEventTypeParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_scopedEventType_3_0=rulescopedEventType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedEventType",
	        		lv_scopedEventType_3_0, 
	        		"scopedEventType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDeclaredEventDefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclaredEventDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getDeclaredEventDefAccess().getSemicolonKeyword_4(), null); 
    }
)?)
;





// Entry rule entryRulesimpleNumericType
entryRulesimpleNumericType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSimpleNumericTypeRule(), currentNode); }
	 iv_rulesimpleNumericType=rulesimpleNumericType 
	 { $current=$iv_rulesimpleNumericType.current; } 
	 EOF 
;

// Rule simpleNumericType
rulesimpleNumericType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
(
		lv_type_0_1=	'uint8' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeUint8Keyword_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_2=	'uint16' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeUint16Keyword_0_1(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_3=	'uint32' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeUint32Keyword_0_2(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_4=	'uint64' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeUint64Keyword_0_3(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_4, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_5=	'int8' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeInt8Keyword_0_4(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_5, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_6=	'int16' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeInt16Keyword_0_5(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_6, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_7=	'int32' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeInt32Keyword_0_6(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_7, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_8=	'int64' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeInt64Keyword_0_7(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_8, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_9=	'float' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeFloatKeyword_0_8(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_9, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_0_10=	'double' 
    {
        createLeafNode(grammarAccess.getSimpleNumericTypeAccess().getTypeDoubleKeyword_0_9(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSimpleNumericTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0_10, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)
;





// Entry rule entryRulenumericLiteral
entryRulenumericLiteral returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNumericLiteralRule(), currentNode); } 
	 iv_rulenumericLiteral=rulenumericLiteral 
	 { $current=$iv_rulenumericLiteral.current.getText(); }  
	 EOF 
;

// Rule numericLiteral
rulenumericLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
((
	kw='-' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getNumericLiteralAccess().getHyphenMinusKeyword_0(), null); 
    }
)?(    this_INTLITERAL_1=RULE_INTLITERAL    {
		$current.merge(this_INTLITERAL_1);
    }

    { 
    createLeafNode(grammarAccess.getNumericLiteralAccess().getINTLITERALTerminalRuleCall_1_0(), null); 
    }

    |    this_NonIntNumber_2=RULE_NONINTNUMBER    {
		$current.merge(this_NonIntNumber_2);
    }

    { 
    createLeafNode(grammarAccess.getNumericLiteralAccess().getNonIntNumberTerminalRuleCall_1_1(), null); 
    }
))
    ;





// Entry rule entryRulefixedLenString
entryRulefixedLenString returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFixedLenStringRule(), currentNode); }
	 iv_rulefixedLenString=rulefixedLenString 
	 { $current=$iv_rulefixedLenString.current; } 
	 EOF 
;

// Rule fixedLenString
rulefixedLenString returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getFixedLenStringAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getFixedLenStringAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'string' 
    {
        createLeafNode(grammarAccess.getFixedLenStringAccess().getStringKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFixedLenStringAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'[' 
    {
        createLeafNode(grammarAccess.getFixedLenStringAccess().getLeftSquareBracketKeyword_4(), null); 
    }
((
(
		lv_upperLim_5_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getFixedLenStringAccess().getUpperLimINTLITERALTerminalRuleCall_5_0_0(), "upperLim"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLim",
	        		lv_upperLim_5_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixedLenStringAccess().getUpperLimRefConstReferenceParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_upperLimRef_6_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimRef",
	        		lv_upperLimRef_6_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixedLenStringAccess().getUpperLimScopedScopedConstIdParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_upperLimScoped_7_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimScoped",
	        		lv_upperLimScoped_7_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	']' 
    {
        createLeafNode(grammarAccess.getFixedLenStringAccess().getRightSquareBracketKeyword_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getFixedLenStringAccess().getSemicolonKeyword_7(), null); 
    }
)
;





// Entry rule entryRulevarLenString
entryRulevarLenString returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVarLenStringRule(), currentNode); }
	 iv_rulevarLenString=rulevarLenString 
	 { $current=$iv_rulevarLenString.current; } 
	 EOF 
;

// Rule varLenString
rulevarLenString returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVarLenStringAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getVarLenStringAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'vstring' 
    {
        createLeafNode(grammarAccess.getVarLenStringAccess().getVstringKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getVarLenStringAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'[' 
    {
        createLeafNode(grammarAccess.getVarLenStringAccess().getLeftSquareBracketKeyword_4(), null); 
    }
((
(
		lv_lowerLim_5_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getVarLenStringAccess().getLowerLimINTLITERALTerminalRuleCall_5_0_0(), "lowerLim"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLim",
	        		lv_lowerLim_5_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenStringAccess().getLowerLimRefConstReferenceParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_lowerLimRef_6_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimRef",
	        		lv_lowerLimRef_6_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenStringAccess().getLowerLimScopedScopedConstIdParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_lowerLimScoped_7_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimScoped",
	        		lv_lowerLimScoped_7_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	',' 
    {
        createLeafNode(grammarAccess.getVarLenStringAccess().getCommaKeyword_6(), null); 
    }
((
(
		lv_upperLim_9_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getVarLenStringAccess().getUpperLimINTLITERALTerminalRuleCall_7_0_0(), "upperLim"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLim",
	        		lv_upperLim_9_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenStringAccess().getUpperLimRefConstReferenceParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_upperLimRef_10_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimRef",
	        		lv_upperLimRef_10_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenStringAccess().getUpperLimScopedScopedConstIdParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_upperLimScoped_11_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimScoped",
	        		lv_upperLimScoped_11_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	']' 
    {
        createLeafNode(grammarAccess.getVarLenStringAccess().getRightSquareBracketKeyword_8(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getVarLenStringAccess().getSemicolonKeyword_9(), null); 
    }
)
;





// Entry rule entryRulefixedFieldDef
entryRulefixedFieldDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFixedFieldDefRule(), currentNode); }
	 iv_rulefixedFieldDef=rulefixedFieldDef 
	 { $current=$iv_rulefixedFieldDef.current; } 
	 EOF 
;

// Rule fixedFieldDef
rulefixedFieldDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getFixedFieldDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getFixedFieldDefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'field' 
    {
        createLeafNode(grammarAccess.getFixedFieldDefAccess().getFieldKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixedFieldDefAccess().getTypeSimpleNumericTypeParserRuleCall_3_0_0(), currentNode); 
	    }
		lv_type_3_0=rulesimpleNumericType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_3_0, 
	        		"simpleNumericType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFixedFieldDefAccess().getNameIDTerminalRuleCall_3_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixedFieldDefAccess().getFieldUnitUNITEnumRuleCall_3_2_0(), currentNode); 
	    }
		lv_fieldUnit_5_0=ruleUNIT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fieldUnit",
	        		lv_fieldUnit_5_0, 
	        		"UNIT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixedFieldDefAccess().getValueRangeScaledRangeDefParserRuleCall_3_3_0_0(), currentNode); 
	    }
		lv_valueRange_6_1=rulescaledRangeDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueRange",
	        		lv_valueRange_6_1, 
	        		"scaledRangeDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixedFieldDefAccess().getValueRangeValueSetDefParserRuleCall_3_3_0_1(), currentNode); 
	    }
		lv_valueRange_6_2=rulevalueSetDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueRange",
	        		lv_valueRange_6_2, 
	        		"valueSetDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixedFieldDefAccess().getValueRangeValueRangeParserRuleCall_3_3_0_2(), currentNode); 
	    }
		lv_valueRange_6_3=rulevalueRange		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixedFieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueRange",
	        		lv_valueRange_6_3, 
	        		"valueRange", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)?)	';' 
    {
        createLeafNode(grammarAccess.getFixedFieldDefAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRulevarField
entryRulevarField returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVarFieldRule(), currentNode); }
	 iv_rulevarField=rulevarField 
	 { $current=$iv_rulevarField.current; } 
	 EOF 
;

// Rule varField
rulevarField returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVarFieldAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getVarFieldAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'variable_field' 
    {
        createLeafNode(grammarAccess.getVarFieldAccess().getVariable_fieldKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getVarFieldAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getVarFieldAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarFieldAccess().getVtagFieldTaggedUnitsEnumParserRuleCall_5_0(), currentNode); 
	    }
		lv_vtagField_5_0=ruletaggedUnitsEnum		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"vtagField",
	        		lv_vtagField_5_0, 
	        		"taggedUnitsEnum", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'}' 
    {
        createLeafNode(grammarAccess.getVarFieldAccess().getRightCurlyBracketKeyword_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getVarFieldAccess().getSemicolonKeyword_7(), null); 
    }
)
;





// Entry rule entryRulevarLenField
entryRulevarLenField returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVarLenFieldRule(), currentNode); }
	 iv_rulevarLenField=rulevarLenField 
	 { $current=$iv_rulevarLenField.current; } 
	 EOF 
;

// Rule varLenField
rulevarLenField returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVarLenFieldAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getVarLenFieldAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'vfield' 
    {
        createLeafNode(grammarAccess.getVarLenFieldAccess().getVfieldKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenFieldAccess().getFieldFormatFIELD_FORMATEnumRuleCall_3_0(), currentNode); 
	    }
		lv_fieldFormat_3_0=ruleFIELD_FORMAT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fieldFormat",
	        		lv_fieldFormat_3_0, 
	        		"FIELD_FORMAT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getVarLenFieldAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_countComment_5_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVarLenFieldAccess().getCountCommentINTERPRETATIONTerminalRuleCall_5_0(), "countComment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"countComment",
	        		lv_countComment_5_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	'[' 
    {
        createLeafNode(grammarAccess.getVarLenFieldAccess().getLeftSquareBracketKeyword_6_0(), null); 
    }
((
(
		lv_lowerLim_7_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getVarLenFieldAccess().getLowerLimINTLITERALTerminalRuleCall_6_1_0_0(), "lowerLim"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLim",
	        		lv_lowerLim_7_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenFieldAccess().getLowerLimRefConstReferenceParserRuleCall_6_1_1_0(), currentNode); 
	    }
		lv_lowerLimRef_8_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimRef",
	        		lv_lowerLimRef_8_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenFieldAccess().getLowerLimScopedScopedConstIdParserRuleCall_6_1_2_0(), currentNode); 
	    }
		lv_lowerLimScoped_9_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimScoped",
	        		lv_lowerLimScoped_9_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getVarLenFieldAccess().getCommaKeyword_6_2_0(), null); 
    }
((
(
		lv_upperLim_11_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getVarLenFieldAccess().getUpperLimINTLITERALTerminalRuleCall_6_2_1_0_0(), "upperLim"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLim",
	        		lv_upperLim_11_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenFieldAccess().getUpperLimRefConstReferenceParserRuleCall_6_2_1_1_0(), currentNode); 
	    }
		lv_upperLimRef_12_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimRef",
	        		lv_upperLimRef_12_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarLenFieldAccess().getUpperLimScopedScopedConstIdParserRuleCall_6_2_1_2_0(), currentNode); 
	    }
		lv_upperLimScoped_13_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarLenFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimScoped",
	        		lv_upperLimScoped_13_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))?	']' 
    {
        createLeafNode(grammarAccess.getVarLenFieldAccess().getRightSquareBracketKeyword_6_3(), null); 
    }
)?	';' 
    {
        createLeafNode(grammarAccess.getVarLenFieldAccess().getSemicolonKeyword_7(), null); 
    }
)
;





// Entry rule entryRuletaggedUnitsEnum
entryRuletaggedUnitsEnum returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTaggedUnitsEnumRule(), currentNode); }
	 iv_ruletaggedUnitsEnum=ruletaggedUnitsEnum 
	 { $current=$iv_ruletaggedUnitsEnum.current; } 
	 EOF 
;

// Rule taggedUnitsEnum
ruletaggedUnitsEnum returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'tag' 
    {
        createLeafNode(grammarAccess.getTaggedUnitsEnumAccess().getTagKeyword_0(), null); 
    }
((
(
		lv_const_tag_1_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getTaggedUnitsEnumAccess().getConst_tagINTLITERALTerminalRuleCall_1_0_0(), "const_tag"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"const_tag",
	        		lv_const_tag_1_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedUnitsEnumAccess().getTagConstReferenceParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_tag_2_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tag",
	        		lv_tag_2_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedUnitsEnumAccess().getScopedTagScopedConstIdParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_scopedTag_3_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedTag",
	        		lv_scopedTag_3_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	':' 
    {
        createLeafNode(grammarAccess.getTaggedUnitsEnumAccess().getColonKeyword_2(), null); 
    }
(
(
		lv_name_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTaggedUnitsEnumAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedUnitsEnumAccess().getTypeSimpleNumericTypeParserRuleCall_4_0(), currentNode); 
	    }
		lv_type_6_0=rulesimpleNumericType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_6_0, 
	        		"simpleNumericType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedUnitsEnumAccess().getFieldUnitUNITEnumRuleCall_5_0(), currentNode); 
	    }
		lv_fieldUnit_7_0=ruleUNIT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fieldUnit",
	        		lv_fieldUnit_7_0, 
	        		"UNIT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedUnitsEnumAccess().getValueSetDefValueSetDefParserRuleCall_6_0_0(), currentNode); 
	    }
		lv_valueSetDef_8_0=rulevalueSetDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueSetDef",
	        		lv_valueSetDef_8_0, 
	        		"valueSetDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedUnitsEnumAccess().getScaledRangeDefScaledRangeDefParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_scaledRangeDef_9_0=rulescaledRangeDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedUnitsEnumRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scaledRangeDef",
	        		lv_scaledRangeDef_9_0, 
	        		"scaledRangeDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	';' 
    {
        createLeafNode(grammarAccess.getTaggedUnitsEnumAccess().getSemicolonKeyword_7(), null); 
    }
)
;





// Entry rule entryRulevarFormatField
entryRulevarFormatField returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVarFormatFieldRule(), currentNode); }
	 iv_rulevarFormatField=rulevarFormatField 
	 { $current=$iv_rulevarFormatField.current; } 
	 EOF 
;

// Rule varFormatField
rulevarFormatField returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVarFormatFieldAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'variable_format_field' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getVariable_format_fieldKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getVarFormatFieldAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
((
(
		lv_countComment_5_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVarFormatFieldAccess().getCountCommentINTERPRETATIONTerminalRuleCall_5_0_0(), "countComment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"countComment",
	        		lv_countComment_5_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
(
		lv_units_6_1=	'uint8' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getUnitsUint8Keyword_5_1_0_0(), "units"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "units", lv_units_6_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_units_6_2=	'uint16' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getUnitsUint16Keyword_5_1_0_1(), "units"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "units", lv_units_6_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_units_6_3=	'uint32' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getUnitsUint32Keyword_5_1_0_2(), "units"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "units", lv_units_6_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)	'tag' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getTagKeyword_5_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarFormatFieldAccess().getCountRangeValueRangeParserRuleCall_5_3_0(), currentNode); 
	    }
		lv_countRange_8_0=rulevalueRange		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"countRange",
	        		lv_countRange_8_0, 
	        		"valueRange", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getSemicolonKeyword_5_4(), null); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarFormatFieldAccess().getFormatFieldFormatEnumDefParserRuleCall_6_0(), currentNode); 
	    }
		lv_formatField_10_0=ruleformatEnumDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarFormatFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"formatField",
	        		lv_formatField_10_0, 
	        		"formatEnumDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'}' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getRightCurlyBracketKeyword_7(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getVarFormatFieldAccess().getSemicolonKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleformatEnumDef
entryRuleformatEnumDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFormatEnumDefRule(), currentNode); }
	 iv_ruleformatEnumDef=ruleformatEnumDef 
	 { $current=$iv_ruleformatEnumDef.current; } 
	 EOF 
;

// Rule formatEnumDef
ruleformatEnumDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'tag' 
    {
        createLeafNode(grammarAccess.getFormatEnumDefAccess().getTagKeyword_0(), null); 
    }
((
(
		lv_index_1_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getFormatEnumDefAccess().getIndexINTLITERALTerminalRuleCall_1_0_0(), "index"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormatEnumDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"index",
	        		lv_index_1_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFormatEnumDefAccess().getConstRefConstReferenceParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_constRef_2_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormatEnumDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constRef",
	        		lv_constRef_2_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFormatEnumDefAccess().getConstScopedRefScopedConstIdParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_constScopedRef_3_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormatEnumDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"constScopedRef",
	        		lv_constScopedRef_3_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	':' 
    {
        createLeafNode(grammarAccess.getFormatEnumDefAccess().getColonKeyword_2(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFormatEnumDefAccess().getFieldFormatFIELD_FORMATEnumRuleCall_3_0_0(), currentNode); 
	    }
		lv_fieldFormat_5_0=ruleFIELD_FORMAT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormatEnumDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fieldFormat",
	        		lv_fieldFormat_5_0, 
	        		"FIELD_FORMAT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		lv_fieldFormatStr_6_0=RULE_STRINGLITERAL
		{
			createLeafNode(grammarAccess.getFormatEnumDefAccess().getFieldFormatStrSTRINGLITERALTerminalRuleCall_3_1_0(), "fieldFormatStr"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormatEnumDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fieldFormatStr",
	        		lv_fieldFormatStr_6_0, 
	        		"STRINGLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))	';' 
    {
        createLeafNode(grammarAccess.getFormatEnumDefAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRulevalueSetDef
entryRulevalueSetDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueSetDefRule(), currentNode); }
	 iv_rulevalueSetDef=rulevalueSetDef 
	 { $current=$iv_rulevalueSetDef.current; } 
	 EOF 
;

// Rule valueSetDef
rulevalueSetDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getValueSetDefAccess().getValueSetDefAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getValueSetDefAccess().getValueSetDefAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'{' 
    {
        createLeafNode(grammarAccess.getValueSetDefAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
((
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueSetDefAccess().getValueValueSpecParserRuleCall_2_0_0_0(), currentNode); 
	    }
		lv_value_2_1=rulevalueSpec		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueSetDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"value",
	        		lv_value_2_1, 
	        		"valueSpec", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueSetDefAccess().getValueValueRangeParserRuleCall_2_0_0_1(), currentNode); 
	    }
		lv_value_2_2=rulevalueRange		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueSetDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"value",
	        		lv_value_2_2, 
	        		"valueRange", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)	';' 
    {
        createLeafNode(grammarAccess.getValueSetDefAccess().getSemicolonKeyword_2_1(), null); 
    }
)+	'}' 
    {
        createLeafNode(grammarAccess.getValueSetDefAccess().getRightCurlyBracketKeyword_3(), null); 
    }
(
(
		lv_offset_5_0=	'offset' 
    {
        createLeafNode(grammarAccess.getValueSetDefAccess().getOffsetOffsetKeyword_4_0(), "offset"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueSetDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "offset", lv_offset_5_0, "offset", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRulebitfieldDef
entryRulebitfieldDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBitfieldDefRule(), currentNode); }
	 iv_rulebitfieldDef=rulebitfieldDef 
	 { $current=$iv_rulebitfieldDef.current; } 
	 EOF 
;

// Rule bitfieldDef
rulebitfieldDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getBitfieldDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'bit_field' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getBit_fieldKeyword_2(), null); 
    }
(
(
(
		lv_type_3_1=	'uint8' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getTypeUint8Keyword_3_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_3_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_3_2=	'uint16' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getTypeUint16Keyword_3_0_1(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_3_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_3_3=	'uint32' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getTypeUint32Keyword_3_0_2(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_3_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_type_3_4=	'uint64' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getTypeUint64Keyword_3_0_3(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_3_4, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getBitfieldDefAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBitfieldDefAccess().getSubFieldSubFieldParserRuleCall_6_0(), currentNode); 
	    }
		lv_subField_6_0=rulesubField		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBitfieldDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"subField",
	        		lv_subField_6_0, 
	        		"subField", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getRightCurlyBracketKeyword_7(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getBitfieldDefAccess().getSemicolonKeyword_8(), null); 
    }
)
;





// Entry rule entryRulevalueRange
entryRulevalueRange returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueRangeRule(), currentNode); }
	 iv_rulevalueRange=rulevalueRange 
	 { $current=$iv_rulevalueRange.current; } 
	 EOF 
;

// Rule valueRange
rulevalueRange returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getValueRangeAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
(
		lv_lowerLimit_type_1_1=	'(' 
    {
        createLeafNode(grammarAccess.getValueRangeAccess().getLowerLimit_typeLeftParenthesisKeyword_1_0_0(), "lowerLimit_type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "lowerLimit_type", lv_lowerLimit_type_1_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_lowerLimit_type_1_2=	'[' 
    {
        createLeafNode(grammarAccess.getValueRangeAccess().getLowerLimit_typeLeftSquareBracketKeyword_1_0_1(), "lowerLimit_type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "lowerLimit_type", lv_lowerLimit_type_1_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueRangeAccess().getLowerLimNumericLiteralParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_lowerLim_2_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLim",
	        		lv_lowerLim_2_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueRangeAccess().getLowerLimRefConstReferenceParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_lowerLimRef_3_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimRef",
	        		lv_lowerLimRef_3_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueRangeAccess().getLowerLimScopedScopedConstIdParserRuleCall_2_2_0(), currentNode); 
	    }
		lv_lowerLimScoped_4_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimScoped",
	        		lv_lowerLimScoped_4_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	',' 
    {
        createLeafNode(grammarAccess.getValueRangeAccess().getCommaKeyword_3(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueRangeAccess().getUpperLimNumericLiteralParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_upperLim_6_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLim",
	        		lv_upperLim_6_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueRangeAccess().getUpperLimRefConstReferenceParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_upperLimRef_7_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimRef",
	        		lv_upperLimRef_7_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getValueRangeAccess().getUpperLimScopedScopedConstIdParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_upperLimScoped_8_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimScoped",
	        		lv_upperLimScoped_8_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
(
		lv_upperLimit_type_9_1=	')' 
    {
        createLeafNode(grammarAccess.getValueRangeAccess().getUpperLimit_typeRightParenthesisKeyword_5_0_0(), "upperLimit_type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "upperLimit_type", lv_upperLimit_type_9_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_upperLimit_type_9_2=	']' 
    {
        createLeafNode(grammarAccess.getValueRangeAccess().getUpperLimit_typeRightSquareBracketKeyword_5_0_1(), "upperLimit_type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueRangeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "upperLimit_type", lv_upperLimit_type_9_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
))
;





// Entry rule entryRulevalueSpec
entryRulevalueSpec returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueSpecRule(), currentNode); }
	 iv_rulevalueSpec=rulevalueSpec 
	 { $current=$iv_rulevalueSpec.current; } 
	 EOF 
;

// Rule valueSpec
rulevalueSpec returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getValueSpecAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueSpecRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_name_1_0=RULE_STRINGLITERAL
		{
			createLeafNode(grammarAccess.getValueSpecAccess().getNameSTRINGLITERALTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueSpecRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRINGLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getValueSpecAccess().getEqualsSignKeyword_2(), null); 
    }
(
(
		lv_value_3_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getValueSpecAccess().getValueINTLITERALTerminalRuleCall_3_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getValueSpecRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_3_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRulescaledRangeDef
entryRulescaledRangeDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScaledRangeDefRule(), currentNode); }
	 iv_rulescaledRangeDef=rulescaledRangeDef 
	 { $current=$iv_rulescaledRangeDef.current; } 
	 EOF 
;

// Rule scaledRangeDef
rulescaledRangeDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_interp_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getScaledRangeDefAccess().getInterpINTERPRETATIONTerminalRuleCall_0_0(), "interp"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"interp",
	        		lv_interp_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'<' 
    {
        createLeafNode(grammarAccess.getScaledRangeDefAccess().getLessThanSignKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScaledRangeDefAccess().getLowerLimNumericLiteralParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_lowerLim_2_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLim",
	        		lv_lowerLim_2_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScaledRangeDefAccess().getLowerLimRefConstReferenceParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_lowerLimRef_3_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimRef",
	        		lv_lowerLimRef_3_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScaledRangeDefAccess().getLowerLimScopedScopedConstIdParserRuleCall_2_2_0(), currentNode); 
	    }
		lv_lowerLimScoped_4_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerLimScoped",
	        		lv_lowerLimScoped_4_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	',' 
    {
        createLeafNode(grammarAccess.getScaledRangeDefAccess().getCommaKeyword_3(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScaledRangeDefAccess().getUpperLimNumericLiteralParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_upperLim_6_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLim",
	        		lv_upperLim_6_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScaledRangeDefAccess().getUpperLimRefConstReferenceParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_upperLimRef_7_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimRef",
	        		lv_upperLimRef_7_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScaledRangeDefAccess().getUpperLimScopedScopedConstIdParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_upperLimScoped_8_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperLimScoped",
	        		lv_upperLimScoped_8_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	'>' 
    {
        createLeafNode(grammarAccess.getScaledRangeDefAccess().getGreaterThanSignKeyword_5(), null); 
    }
(
(
(
		lv_function_10_1=	'floor' 
    {
        createLeafNode(grammarAccess.getScaledRangeDefAccess().getFunctionFloorKeyword_6_0_0(), "function"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "function", lv_function_10_1, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_function_10_2=	'ceiling' 
    {
        createLeafNode(grammarAccess.getScaledRangeDefAccess().getFunctionCeilingKeyword_6_0_1(), "function"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "function", lv_function_10_2, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

    |		lv_function_10_3=	'round' 
    {
        createLeafNode(grammarAccess.getScaledRangeDefAccess().getFunctionRoundKeyword_6_0_2(), "function"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScaledRangeDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "function", lv_function_10_3, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)

)
))
;





// Entry rule entryRulesubField
entryRulesubField returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSubFieldRule(), currentNode); }
	 iv_rulesubField=rulesubField 
	 { $current=$iv_rulesubField.current; } 
	 EOF 
;

// Rule subField
rulesubField returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getSubFieldAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSubFieldAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'[' 
    {
        createLeafNode(grammarAccess.getSubFieldAccess().getLeftSquareBracketKeyword_2(), null); 
    }
(
(
		lv_fromIndex_3_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getSubFieldAccess().getFromIndexINTLITERALTerminalRuleCall_3_0(), "fromIndex"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fromIndex",
	        		lv_fromIndex_3_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getSubFieldAccess().getColonKeyword_4(), null); 
    }
(
(
		lv_toIndex_5_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getSubFieldAccess().getToIndexINTLITERALTerminalRuleCall_5_0(), "toIndex"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"toIndex",
	        		lv_toIndex_5_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getSubFieldAccess().getRightSquareBracketKeyword_6(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubFieldAccess().getValueSetValueSetDefParserRuleCall_7_0(), currentNode); 
	    }
		lv_valueSet_7_0=rulevalueSetDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubFieldRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"valueSet",
	        		lv_valueSet_7_0, 
	        		"valueSetDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getSubFieldAccess().getSemicolonKeyword_8(), null); 
    }
)
;





// Entry rule entryRulelistDef
entryRulelistDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getListDefRule(), currentNode); }
	 iv_rulelistDef=rulelistDef 
	 { $current=$iv_rulelistDef.current; } 
	 EOF 
;

// Rule listDef
rulelistDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getListDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'list' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getListKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getListDefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_countComment_4_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getListDefAccess().getCountCommentINTERPRETATIONTerminalRuleCall_4_0(), "countComment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"countComment",
	        		lv_countComment_4_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'[' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getLeftSquareBracketKeyword_5(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getMinCountNumericLiteralParserRuleCall_6_0_0(), currentNode); 
	    }
		lv_minCount_6_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minCount",
	        		lv_minCount_6_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getMinCountRefConstReferenceParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_minCountRef_7_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minCountRef",
	        		lv_minCountRef_7_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getMinCountScopedScopedConstIdParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_minCountScoped_8_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minCountScoped",
	        		lv_minCountScoped_8_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	',' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getCommaKeyword_7(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getMaxCountNumericLiteralParserRuleCall_8_0_0(), currentNode); 
	    }
		lv_maxCount_10_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"maxCount",
	        		lv_maxCount_10_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getMaxCountRefConstReferenceParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_maxCountRef_11_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"maxCountRef",
	        		lv_maxCountRef_11_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getMaxCountScopedScopedConstIdParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_maxCountScoped_12_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"maxCountScoped",
	        		lv_maxCountScoped_12_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	']' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getRightSquareBracketKeyword_9(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getLeftCurlyBracketKeyword_10(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getContainerRefContainerRefParserRuleCall_11_0_0(), currentNode); 
	    }
		lv_containerRef_15_0=rulecontainerRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"containerRef",
	        		lv_containerRef_15_0, 
	        		"containerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListDefAccess().getContainerDefContainerDefParserRuleCall_11_1_0(), currentNode); 
	    }
		lv_containerDef_16_0=rulecontainerDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"containerDef",
	        		lv_containerDef_16_0, 
	        		"containerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	'}' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getRightCurlyBracketKeyword_12(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getListDefAccess().getSemicolonKeyword_13(), null); 
    }
)?)
;





// Entry rule entryRulevariantDef
entryRulevariantDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVariantDefRule(), currentNode); }
	 iv_rulevariantDef=rulevariantDef 
	 { $current=$iv_rulevariantDef.current; } 
	 EOF 
;

// Rule variantDef
rulevariantDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVariantDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'variant' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getVariantKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getVariantDefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_vtagComment_4_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getVariantDefAccess().getVtagCommentINTERPRETATIONTerminalRuleCall_4_0(), "vtagComment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"vtagComment",
	        		lv_vtagComment_4_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'[' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getLeftSquareBracketKeyword_5(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariantDefAccess().getMinCountNumericLiteralParserRuleCall_6_0_0(), currentNode); 
	    }
		lv_minCount_6_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minCount",
	        		lv_minCount_6_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariantDefAccess().getMinCountRefConstReferenceParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_minCountRef_7_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minCountRef",
	        		lv_minCountRef_7_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariantDefAccess().getMinCountScopedScopedConstIdParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_minCountScoped_8_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minCountScoped",
	        		lv_minCountScoped_8_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	',' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getCommaKeyword_7(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariantDefAccess().getMaxCountNumericLiteralParserRuleCall_8_0_0(), currentNode); 
	    }
		lv_maxCount_10_0=rulenumericLiteral		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"maxCount",
	        		lv_maxCount_10_0, 
	        		"numericLiteral", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariantDefAccess().getMaxCountRefConstReferenceParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_maxCountRef_11_0=ruleconstReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"maxCountRef",
	        		lv_maxCountRef_11_0, 
	        		"constReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariantDefAccess().getMaxCountScopedScopedConstIdParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_maxCountScoped_12_0=rulescopedConstId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"maxCountScoped",
	        		lv_maxCountScoped_12_0, 
	        		"scopedConstId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))	']' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getRightSquareBracketKeyword_9(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getLeftCurlyBracketKeyword_10(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVariantDefAccess().getItemListTaggedItemDefParserRuleCall_11_0(), currentNode); 
	    }
		lv_itemList_15_0=ruletaggedItemDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVariantDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"itemList",
	        		lv_itemList_15_0, 
	        		"taggedItemDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getRightCurlyBracketKeyword_12(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getVariantDefAccess().getSemicolonKeyword_13(), null); 
    }
)
;





// Entry rule entryRuletaggedItemDef
entryRuletaggedItemDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTaggedItemDefRule(), currentNode); }
	 iv_ruletaggedItemDef=ruletaggedItemDef 
	 { $current=$iv_ruletaggedItemDef.current; } 
	 EOF 
;

// Rule taggedItemDef
ruletaggedItemDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'vtag' 
    {
        createLeafNode(grammarAccess.getTaggedItemDefAccess().getVtagKeyword_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getTaggedItemDefAccess().getColonKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedItemDefAccess().getContainerDefContainerDefParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_containerDef_2_0=rulecontainerDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedItemDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"containerDef",
	        		lv_containerDef_2_0, 
	        		"containerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTaggedItemDefAccess().getContainerRefContainerRefParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_containerRef_3_0=rulecontainerRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTaggedItemDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"containerRef",
	        		lv_containerRef_3_0, 
	        		"containerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRulesequenceDef
entryRulesequenceDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSequenceDefRule(), currentNode); }
	 iv_rulesequenceDef=rulesequenceDef 
	 { $current=$iv_rulesequenceDef.current; } 
	 EOF 
;

// Rule sequenceDef
rulesequenceDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getSequenceDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSequenceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getSequenceDefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSequenceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'sequence' 
    {
        createLeafNode(grammarAccess.getSequenceDefAccess().getSequenceKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSequenceDefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSequenceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getSequenceDefAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSequenceDefAccess().getContainerTypeListContainerRefParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_containerTypeList_5_1=rulecontainerRef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSequenceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"containerTypeList",
	        		lv_containerTypeList_5_1, 
	        		"containerRef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getSequenceDefAccess().getContainerTypeListContainerDefParserRuleCall_5_0_1(), currentNode); 
	    }
		lv_containerTypeList_5_2=rulecontainerDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSequenceDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"containerTypeList",
	        		lv_containerTypeList_5_2, 
	        		"containerDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)+	'}' 
    {
        createLeafNode(grammarAccess.getSequenceDefAccess().getRightCurlyBracketKeyword_6(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getSequenceDefAccess().getSemicolonKeyword_7(), null); 
    }
)?)
;





// Entry rule entryRulerecordDef
entryRulerecordDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRecordDefRule(), currentNode); }
	 iv_rulerecordDef=rulerecordDef 
	 { $current=$iv_rulerecordDef.current; } 
	 EOF 
;

// Rule recordDef
rulerecordDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getRecordDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getRecordDefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'record' 
    {
        createLeafNode(grammarAccess.getRecordDefAccess().getRecordKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRecordDefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getRecordDefAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getArrayDefArrayDefParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_arrayDef_5_0=rulearrayDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"arrayDef",
	        		lv_arrayDef_5_0, 
	        		"arrayDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getFieldDefFixedFieldDefParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_fieldDef_6_0=rulefixedFieldDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"fieldDef",
	        		lv_fieldDef_6_0, 
	        		"fixedFieldDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getVariableFieldDefVarFieldParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_variableFieldDef_7_0=rulevarField		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"variableFieldDef",
	        		lv_variableFieldDef_7_0, 
	        		"varField", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getBitfieldDefBitfieldDefParserRuleCall_5_3_0(), currentNode); 
	    }
		lv_bitfieldDef_8_0=rulebitfieldDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"bitfieldDef",
	        		lv_bitfieldDef_8_0, 
	        		"bitfieldDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getFixedLengthStringDefFixedLenStringParserRuleCall_5_4_0(), currentNode); 
	    }
		lv_fixedLengthStringDef_9_0=rulefixedLenString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"fixedLengthStringDef",
	        		lv_fixedLengthStringDef_9_0, 
	        		"fixedLenString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getVariableLengthStringDefVarLenStringParserRuleCall_5_5_0(), currentNode); 
	    }
		lv_variableLengthStringDef_10_0=rulevarLenString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"variableLengthStringDef",
	        		lv_variableLengthStringDef_10_0, 
	        		"varLenString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getVariableLengthFieldDefVarLenFieldParserRuleCall_5_6_0(), currentNode); 
	    }
		lv_variableLengthFieldDef_11_0=rulevarLenField		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"variableLengthFieldDef",
	        		lv_variableLengthFieldDef_11_0, 
	        		"varLenField", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getVarFormatFieldVarFormatFieldParserRuleCall_5_7_0(), currentNode); 
	    }
		lv_varFormatField_12_0=rulevarFormatField		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"varFormatField",
	        		lv_varFormatField_12_0, 
	        		"varFormatField", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getTypeReferenceTypeReferenceParserRuleCall_5_8_0(), currentNode); 
	    }
		lv_typeReference_13_0=ruletypeReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"typeReference",
	        		lv_typeReference_13_0, 
	        		"typeReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRecordDefAccess().getScopedRefScopedTypeIdParserRuleCall_5_9_0(), currentNode); 
	    }
		lv_scopedRef_14_0=rulescopedTypeId		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRecordDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"scopedRef",
	        		lv_scopedRef_14_0, 
	        		"scopedTypeId", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))+	'}' 
    {
        createLeafNode(grammarAccess.getRecordDefAccess().getRightCurlyBracketKeyword_6(), null); 
    }
(	';' 
    {
        createLeafNode(grammarAccess.getRecordDefAccess().getSemicolonKeyword_7(), null); 
    }
)?)
;





// Entry rule entryRuleconstReference
entryRuleconstReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConstReferenceRule(), currentNode); }
	 iv_ruleconstReference=ruleconstReference 
	 { $current=$iv_ruleconstReference.current; } 
	 EOF 
;

// Rule constReference
ruleconstReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getConstReferenceAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConstReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getConstReferenceAccess().getConstValConstDefCrossReference_1_0(), "constVal"); 
	}

)
))
;





// Entry rule entryRuletypeReference
entryRuletypeReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeReferenceRule(), currentNode); }
	 iv_ruletypeReference=ruletypeReference 
	 { $current=$iv_ruletypeReference.current; } 
	 EOF 
;

// Rule typeReference
ruletypeReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getTypeReferenceAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getTypeReferenceAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTypeReferenceAccess().getTypeEObjectCrossReference_2_0(), "type"); 
	}

)
)(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTypeReferenceAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getTypeReferenceAccess().getSemicolonKeyword_4(), null); 
    }
)
;





// Entry rule entryRulearrayDef
entryRulearrayDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArrayDefRule(), currentNode); }
	 iv_rulearrayDef=rulearrayDef 
	 { $current=$iv_rulearrayDef.current; } 
	 EOF 
;

// Rule arrayDef
rulearrayDef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getArrayDefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArrayDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getArrayDefAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArrayDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getArrayDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getArrayDefAccess().getTypeRefEObjectCrossReference_2_0_0(), "typeRef"); 
	}

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getArrayDefAccess().getScopedTypeScopedTypeParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_scopedType_3_0=rulescopedType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArrayDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedType",
	        		lv_scopedType_3_0, 
	        		"scopedType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getArrayDefAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArrayDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'[' 
    {
        createLeafNode(grammarAccess.getArrayDefAccess().getLeftSquareBracketKeyword_4(), null); 
    }
(
(
		lv_arraySize_6_0=RULE_INTLITERAL
		{
			createLeafNode(grammarAccess.getArrayDefAccess().getArraySizeINTLITERALTerminalRuleCall_5_0(), "arraySize"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArrayDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"arraySize",
	        		lv_arraySize_6_0, 
	        		"INTLITERAL", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getArrayDefAccess().getRightSquareBracketKeyword_6(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getArrayDefAccess().getSemicolonKeyword_7(), null); 
    }
)
;





// Entry rule entryRulemessageScopedRef
entryRulemessageScopedRef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMessageScopedRefRule(), currentNode); }
	 iv_rulemessageScopedRef=rulemessageScopedRef 
	 { $current=$iv_rulemessageScopedRef.current; } 
	 EOF 
;

// Rule messageScopedRef
rulemessageScopedRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getMessageScopedRefAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'message' 
    {
        createLeafNode(grammarAccess.getMessageScopedRefAccess().getMessageKeyword_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMessageScopedRefAccess().getScopeEObjectCrossReference_2_0(), "scope"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getMessageScopedRefAccess().getFullStopKeyword_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMessageScopedRefAccess().getScopesEObjectCrossReference_3_1_0(), "scopes"); 
	}

)
))*	'.' 
    {
        createLeafNode(grammarAccess.getMessageScopedRefAccess().getFullStopKeyword_4(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMessageScopedRefAccess().getRefMessageDefCrossReference_5_0(), "ref"); 
	}

)
)(
(
		lv_name_7_0=RULE_ID
		{
			createLeafNode(grammarAccess.getMessageScopedRefAccess().getNameIDTerminalRuleCall_6_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMessageScopedRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_7_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getMessageScopedRefAccess().getSemicolonKeyword_7(), null); 
    }
)
;





// Entry rule entryRulescopedType
entryRulescopedType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScopedTypeRule(), currentNode); }
	 iv_rulescopedType=rulescopedType 
	 { $current=$iv_rulescopedType.current; } 
	 EOF 
;

// Rule scopedType
rulescopedType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedTypeAccess().getNameEObjectCrossReference_0_0(), "name"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getScopedTypeAccess().getFullStopKeyword_1_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedTypeAccess().getNamesEObjectCrossReference_1_1_0(), "names"); 
	}

)
))*	'.' 
    {
        createLeafNode(grammarAccess.getScopedTypeAccess().getFullStopKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedTypeAccess().getTypeEObjectCrossReference_3_0(), "type"); 
	}

)
))
;





// Entry rule entryRulescopedEventType
entryRulescopedEventType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScopedEventTypeRule(), currentNode); }
	 iv_rulescopedEventType=rulescopedEventType 
	 { $current=$iv_rulescopedEventType.current; } 
	 EOF 
;

// Rule scopedEventType
rulescopedEventType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedEventTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedEventTypeAccess().getNameEObjectCrossReference_0_0(), "name"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getScopedEventTypeAccess().getFullStopKeyword_1_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedEventTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedEventTypeAccess().getNamesEObjectCrossReference_1_1_0(), "names"); 
	}

)
))*	'.' 
    {
        createLeafNode(grammarAccess.getScopedEventTypeAccess().getFullStopKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedEventTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedEventTypeAccess().getTypeEObjectCrossReference_3_0(), "type"); 
	}

)
))
;





// Entry rule entryRulescopedTypeId
entryRulescopedTypeId returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScopedTypeIdRule(), currentNode); }
	 iv_rulescopedTypeId=rulescopedTypeId 
	 { $current=$iv_rulescopedTypeId.current; } 
	 EOF 
;

// Rule scopedTypeId
rulescopedTypeId returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_comment_0_0=RULE_INTERPRETATION
		{
			createLeafNode(grammarAccess.getScopedTypeIdAccess().getCommentINTERPRETATIONTerminalRuleCall_0_0(), "comment"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedTypeIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_0_0, 
	        		"INTERPRETATION", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_optional_1_0=	'optional' 
    {
        createLeafNode(grammarAccess.getScopedTypeIdAccess().getOptionalOptionalKeyword_1_0(), "optional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedTypeIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "optional", lv_optional_1_0, "optional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getScopedTypeIdAccess().getRefScopedTypeParserRuleCall_2_0(), currentNode); 
	    }
		lv_ref_2_0=rulescopedType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedTypeIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"ref",
	        		lv_ref_2_0, 
	        		"scopedType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		lv_scopedName_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getScopedTypeIdAccess().getScopedNameIDTerminalRuleCall_3_0_0(), "scopedName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedTypeIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"scopedName",
	        		lv_scopedName_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getScopedTypeIdAccess().getSemicolonKeyword_3_1(), null); 
    }
))
;





// Entry rule entryRulescopedConstId
entryRulescopedConstId returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getScopedConstIdRule(), currentNode); }
	 iv_rulescopedConstId=rulescopedConstId 
	 { $current=$iv_rulescopedConstId.current; } 
	 EOF 
;

// Rule scopedConstId
rulescopedConstId returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedConstIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedConstIdAccess().getNameEObjectCrossReference_0_0(), "name"); 
	}

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getScopedConstIdAccess().getFullStopKeyword_1_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedConstIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedConstIdAccess().getNamesEObjectCrossReference_1_1_0(), "names"); 
	}

)
))*	'.' 
    {
        createLeafNode(grammarAccess.getScopedConstIdAccess().getFullStopKeyword_2(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getScopedConstIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getScopedConstIdAccess().getTypeConstDefCrossReference_3_0(), "type"); 
	}

)
))
;





// Entry rule entryRuleURI
entryRuleURI returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getURIRule(), currentNode); } 
	 iv_ruleURI=ruleURI 
	 { $current=$iv_ruleURI.current.getText(); }  
	 EOF 
;

// Rule URI
ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getURIAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getURIAccess().getFullStopKeyword_1_0(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getURIAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)+)
    ;





// Rule FIELD_FORMAT
ruleFIELD_FORMAT returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'AU' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getAUEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getAUEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'BMP' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getBMPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getBMPEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'JPEG' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getJPEGEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getJPEGEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'MJPEG' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getMJPEGEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getMJPEGEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'MPEG-1' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getMPEG1EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getMPEG1EnumLiteralDeclaration_4(), null); 
    }
)
    |(	'MPEG-2' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getMPEG2EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getMPEG2EnumLiteralDeclaration_5(), null); 
    }
)
    |(	'MP2' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getMP2EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getMP2EnumLiteralDeclaration_6(), null); 
    }
)
    |(	'MP3' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getMP3EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getMP3EnumLiteralDeclaration_7(), null); 
    }
)
    |(	'MP4' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getMP4EnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getMP4EnumLiteralDeclaration_8(), null); 
    }
)
    |(	'RAW' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getRAWEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getRAWEnumLiteralDeclaration_9(), null); 
    }
)
    |(	'WAV' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getWAVEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getWAVEnumLiteralDeclaration_10(), null); 
    }
)
    |(	'JAUS_MESSAGE' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getJAUS_MESSAGEEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getJAUS_MESSAGEEnumLiteralDeclaration_11(), null); 
    }
)
    |(	'XML' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getXMLEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getXMLEnumLiteralDeclaration_12(), null); 
    }
)
    |(	'RNC' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getRNCEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getRNCEnumLiteralDeclaration_13(), null); 
    }
)
    |(	'RNG' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getRNGEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getRNGEnumLiteralDeclaration_14(), null); 
    }
)
    |(	'XSD' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getXSDEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getXSDEnumLiteralDeclaration_15(), null); 
    }
)
    |(	'User_defined' 
	{
        $current = grammarAccess.getFIELD_FORMATAccess().getUSER_DEFINEDEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getFIELD_FORMATAccess().getUSER_DEFINEDEnumLiteralDeclaration_16(), null); 
    }
));



// Rule UNIT
ruleUNIT returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'meter' 
	{
        $current = grammarAccess.getUNITAccess().getMETEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getMETEREnumLiteralDeclaration_0(), null); 
    }
)
    |(	'kilogram' 
	{
        $current = grammarAccess.getUNITAccess().getKGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getKGEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'second' 
	{
        $current = grammarAccess.getUNITAccess().getSECEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getSECEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'ampere' 
	{
        $current = grammarAccess.getUNITAccess().getAMPEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getAMPEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'kelvin' 
	{
        $current = grammarAccess.getUNITAccess().getKELVINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getKELVINEnumLiteralDeclaration_4(), null); 
    }
)
    |(	'mole' 
	{
        $current = grammarAccess.getUNITAccess().getMOLEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getMOLEEnumLiteralDeclaration_5(), null); 
    }
)
    |(	'candela' 
	{
        $current = grammarAccess.getUNITAccess().getCANDELAEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCANDELAEnumLiteralDeclaration_6(), null); 
    }
)
    |(	'one' 
	{
        $current = grammarAccess.getUNITAccess().getONEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getONEEnumLiteralDeclaration_7(), null); 
    }
)
    |(	'square_meter' 
	{
        $current = grammarAccess.getUNITAccess().getSQR_METEREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getSQR_METEREnumLiteralDeclaration_8(), null); 
    }
)
    |(	'cubic_meter' 
	{
        $current = grammarAccess.getUNITAccess().getCUBIC_METEREnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCUBIC_METEREnumLiteralDeclaration_9(), null); 
    }
)
    |(	'meter_per_second' 
	{
        $current = grammarAccess.getUNITAccess().getMETER_PER_SECEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getMETER_PER_SECEnumLiteralDeclaration_10(), null); 
    }
)
    |(	'meter_per_second_squared' 
	{
        $current = grammarAccess.getUNITAccess().getMETER_PER_SEC_SQREnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getMETER_PER_SEC_SQREnumLiteralDeclaration_11(), null); 
    }
)
    |(	'reciprocal_meter' 
	{
        $current = grammarAccess.getUNITAccess().getRECIPROCAL_METEREnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getRECIPROCAL_METEREnumLiteralDeclaration_12(), null); 
    }
)
    |(	'kilogram_per_cubic_meter' 
	{
        $current = grammarAccess.getUNITAccess().getKG_PER_CUBIC_METEREnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getKG_PER_CUBIC_METEREnumLiteralDeclaration_13(), null); 
    }
)
    |(	'cubic_meter_per_kilogram' 
	{
        $current = grammarAccess.getUNITAccess().getCUBICMETERPERKGEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCUBICMETERPERKGEnumLiteralDeclaration_14(), null); 
    }
)
    |(	'ampere_per_square_meter' 
	{
        $current = grammarAccess.getUNITAccess().getAMPPERSQRMETEREnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getAMPPERSQRMETEREnumLiteralDeclaration_15(), null); 
    }
)
    |(	'ampere_per_meter' 
	{
        $current = grammarAccess.getUNITAccess().getAMP_PER_METEREnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getAMP_PER_METEREnumLiteralDeclaration_16(), null); 
    }
)
    |(	'mole_per_cubic_meter' 
	{
        $current = grammarAccess.getUNITAccess().getMOLE_PER_CUBIC_METEREnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getMOLE_PER_CUBIC_METEREnumLiteralDeclaration_17(), null); 
    }
)
    |(	'candela_per_square_meter' 
	{
        $current = grammarAccess.getUNITAccess().getCANDELA_PER_SQUARE_METEREnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCANDELA_PER_SQUARE_METEREnumLiteralDeclaration_18(), null); 
    }
)
    |(	'radian' 
	{
        $current = grammarAccess.getUNITAccess().getRADIANEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getRADIANEnumLiteralDeclaration_19(), null); 
    }
)
    |(	'steradian' 
	{
        $current = grammarAccess.getUNITAccess().getSTE_RADEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getSTE_RADEnumLiteralDeclaration_20(), null); 
    }
)
    |(	'hertz' 
	{
        $current = grammarAccess.getUNITAccess().getHRZEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getHRZEnumLiteralDeclaration_21(), null); 
    }
)
    |(	'newton' 
	{
        $current = grammarAccess.getUNITAccess().getNEWTONEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getNEWTONEnumLiteralDeclaration_22(), null); 
    }
)
    |(	'pascal' 
	{
        $current = grammarAccess.getUNITAccess().getPASCALEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getPASCALEnumLiteralDeclaration_23(), null); 
    }
)
    |(	'joule' 
	{
        $current = grammarAccess.getUNITAccess().getJOULEEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getJOULEEnumLiteralDeclaration_24(), null); 
    }
)
    |(	'watt' 
	{
        $current = grammarAccess.getUNITAccess().getWATTEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getWATTEnumLiteralDeclaration_25(), null); 
    }
)
    |(	'coulomb' 
	{
        $current = grammarAccess.getUNITAccess().getCOULOMBEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCOULOMBEnumLiteralDeclaration_26(), null); 
    }
)
    |(	'volt' 
	{
        $current = grammarAccess.getUNITAccess().getVOLTEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getVOLTEnumLiteralDeclaration_27(), null); 
    }
)
    |(	'farad' 
	{
        $current = grammarAccess.getUNITAccess().getFARADEnumLiteralDeclaration_28().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getFARADEnumLiteralDeclaration_28(), null); 
    }
)
    |(	'ohm' 
	{
        $current = grammarAccess.getUNITAccess().getOHMEnumLiteralDeclaration_29().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getOHMEnumLiteralDeclaration_29(), null); 
    }
)
    |(	'siemens' 
	{
        $current = grammarAccess.getUNITAccess().getSIEMENSEnumLiteralDeclaration_30().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getSIEMENSEnumLiteralDeclaration_30(), null); 
    }
)
    |(	'weber' 
	{
        $current = grammarAccess.getUNITAccess().getWEBEREnumLiteralDeclaration_31().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getWEBEREnumLiteralDeclaration_31(), null); 
    }
)
    |(	'tesla' 
	{
        $current = grammarAccess.getUNITAccess().getTESLAEnumLiteralDeclaration_32().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getTESLAEnumLiteralDeclaration_32(), null); 
    }
)
    |(	'henry' 
	{
        $current = grammarAccess.getUNITAccess().getHENRYEnumLiteralDeclaration_33().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getHENRYEnumLiteralDeclaration_33(), null); 
    }
)
    |(	'degree_Celsius' 
	{
        $current = grammarAccess.getUNITAccess().getCELSIUSEnumLiteralDeclaration_34().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCELSIUSEnumLiteralDeclaration_34(), null); 
    }
)
    |(	'lumen' 
	{
        $current = grammarAccess.getUNITAccess().getLUMENEnumLiteralDeclaration_35().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getLUMENEnumLiteralDeclaration_35(), null); 
    }
)
    |(	'lux' 
	{
        $current = grammarAccess.getUNITAccess().getLUXEnumLiteralDeclaration_36().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getLUXEnumLiteralDeclaration_36(), null); 
    }
)
    |(	'becquerel' 
	{
        $current = grammarAccess.getUNITAccess().getBECQUERELEnumLiteralDeclaration_37().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getBECQUERELEnumLiteralDeclaration_37(), null); 
    }
)
    |(	'sievert' 
	{
        $current = grammarAccess.getUNITAccess().getSIEVERTEnumLiteralDeclaration_38().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getSIEVERTEnumLiteralDeclaration_38(), null); 
    }
)
    |(	'katal' 
	{
        $current = grammarAccess.getUNITAccess().getKATALEnumLiteralDeclaration_39().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getKATALEnumLiteralDeclaration_39(), null); 
    }
)
    |(	'pascal_second' 
	{
        $current = grammarAccess.getUNITAccess().getPASCAL_SECEnumLiteralDeclaration_40().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getPASCAL_SECEnumLiteralDeclaration_40(), null); 
    }
)
    |(	'newton_meter' 
	{
        $current = grammarAccess.getUNITAccess().getNEWTON_METEREnumLiteralDeclaration_41().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getNEWTON_METEREnumLiteralDeclaration_41(), null); 
    }
)
    |(	'newton_per_meter' 
	{
        $current = grammarAccess.getUNITAccess().getNEWTON_PER_METEREnumLiteralDeclaration_42().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getNEWTON_PER_METEREnumLiteralDeclaration_42(), null); 
    }
)
    |(	'radian_per_second' 
	{
        $current = grammarAccess.getUNITAccess().getRAD_PER_SECEnumLiteralDeclaration_43().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getRAD_PER_SECEnumLiteralDeclaration_43(), null); 
    }
)
    |(	'radian_per_second_squared' 
	{
        $current = grammarAccess.getUNITAccess().getRAD_PER_SEC_SQREnumLiteralDeclaration_44().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getRAD_PER_SEC_SQREnumLiteralDeclaration_44(), null); 
    }
)
    |(	'watt_per_square_meter' 
	{
        $current = grammarAccess.getUNITAccess().getWATT_PER_SQR_METEREnumLiteralDeclaration_45().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getWATT_PER_SQR_METEREnumLiteralDeclaration_45(), null); 
    }
)
    |(	'joule_per_kelvin' 
	{
        $current = grammarAccess.getUNITAccess().getJOULE_PER_KELVINEnumLiteralDeclaration_46().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getJOULE_PER_KELVINEnumLiteralDeclaration_46(), null); 
    }
)
    |(	'joule_per_kilogram' 
	{
        $current = grammarAccess.getUNITAccess().getJOULE_PER_KGEnumLiteralDeclaration_47().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getJOULE_PER_KGEnumLiteralDeclaration_47(), null); 
    }
)
    |(	'watt_per_meter_kelvin' 
	{
        $current = grammarAccess.getUNITAccess().getWATT_PER_METER_KELVINEnumLiteralDeclaration_48().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getWATT_PER_METER_KELVINEnumLiteralDeclaration_48(), null); 
    }
)
    |(	'joule_per_cubic_meter' 
	{
        $current = grammarAccess.getUNITAccess().getJOULES_PER_CUBIC_METEREnumLiteralDeclaration_49().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getJOULES_PER_CUBIC_METEREnumLiteralDeclaration_49(), null); 
    }
)
    |(	'volt_per_meter' 
	{
        $current = grammarAccess.getUNITAccess().getVOLT_PER_METEREnumLiteralDeclaration_50().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getVOLT_PER_METEREnumLiteralDeclaration_50(), null); 
    }
)
    |(	'coulomb_per_cubic_meter' 
	{
        $current = grammarAccess.getUNITAccess().getCOULOMB_PER_CUBIC_METEREnumLiteralDeclaration_51().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCOULOMB_PER_CUBIC_METEREnumLiteralDeclaration_51(), null); 
    }
)
    |(	'coulomb_per_square_meter' 
	{
        $current = grammarAccess.getUNITAccess().getCOULOMB_PER_SQR_METEREnumLiteralDeclaration_52().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCOULOMB_PER_SQR_METEREnumLiteralDeclaration_52(), null); 
    }
)
    |(	'farad_per_meter' 
	{
        $current = grammarAccess.getUNITAccess().getFARAD_PER_METEREnumLiteralDeclaration_53().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getFARAD_PER_METEREnumLiteralDeclaration_53(), null); 
    }
)
    |(	'henry_per_meter' 
	{
        $current = grammarAccess.getUNITAccess().getHENRY_PER_METEREnumLiteralDeclaration_54().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getHENRY_PER_METEREnumLiteralDeclaration_54(), null); 
    }
)
    |(	'joule_per_mole' 
	{
        $current = grammarAccess.getUNITAccess().getJOULE_PER_MOLEEnumLiteralDeclaration_55().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getJOULE_PER_MOLEEnumLiteralDeclaration_55(), null); 
    }
)
    |(	'joule_per_mole_kelvin' 
	{
        $current = grammarAccess.getUNITAccess().getJOULE_PER_MOLE_KELVINEnumLiteralDeclaration_56().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getJOULE_PER_MOLE_KELVINEnumLiteralDeclaration_56(), null); 
    }
)
    |(	'coulomb_per_kilogram' 
	{
        $current = grammarAccess.getUNITAccess().getCOULOMB_PER_KGEnumLiteralDeclaration_57().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCOULOMB_PER_KGEnumLiteralDeclaration_57(), null); 
    }
)
    |(	'gray_per_second' 
	{
        $current = grammarAccess.getUNITAccess().getGRAY_PER_SECEnumLiteralDeclaration_58().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getGRAY_PER_SECEnumLiteralDeclaration_58(), null); 
    }
)
    |(	'watt_per_square_meter_steradian' 
	{
        $current = grammarAccess.getUNITAccess().getWATT_PER_SQR_METER_STERADEnumLiteralDeclaration_59().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getWATT_PER_SQR_METER_STERADEnumLiteralDeclaration_59(), null); 
    }
)
    |(	'katal_per_cubic_meter' 
	{
        $current = grammarAccess.getUNITAccess().getKATAL_PER_CUBIC_METEREnumLiteralDeclaration_60().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getKATAL_PER_CUBIC_METEREnumLiteralDeclaration_60(), null); 
    }
)
    |(	'minute' 
	{
        $current = grammarAccess.getUNITAccess().getMINEnumLiteralDeclaration_61().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getMINEnumLiteralDeclaration_61(), null); 
    }
)
    |(	'hour' 
	{
        $current = grammarAccess.getUNITAccess().getHOUREnumLiteralDeclaration_62().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getHOUREnumLiteralDeclaration_62(), null); 
    }
)
    |(	'day' 
	{
        $current = grammarAccess.getUNITAccess().getDAYEnumLiteralDeclaration_63().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getDAYEnumLiteralDeclaration_63(), null); 
    }
)
    |(	'degree' 
	{
        $current = grammarAccess.getUNITAccess().getDEGREEEnumLiteralDeclaration_64().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getDEGREEEnumLiteralDeclaration_64(), null); 
    }
)
    |(	'liter' 
	{
        $current = grammarAccess.getUNITAccess().getLTREnumLiteralDeclaration_65().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getLTREnumLiteralDeclaration_65(), null); 
    }
)
    |(	'metric_ton' 
	{
        $current = grammarAccess.getUNITAccess().getMTONEnumLiteralDeclaration_66().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getMTONEnumLiteralDeclaration_66(), null); 
    }
)
    |(	'neper' 
	{
        $current = grammarAccess.getUNITAccess().getNEPEREnumLiteralDeclaration_67().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getNEPEREnumLiteralDeclaration_67(), null); 
    }
)
    |(	'bel' 
	{
        $current = grammarAccess.getUNITAccess().getBELEnumLiteralDeclaration_68().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getBELEnumLiteralDeclaration_68(), null); 
    }
)
    |(	'nautical_mile' 
	{
        $current = grammarAccess.getUNITAccess().getNMILEEnumLiteralDeclaration_69().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getNMILEEnumLiteralDeclaration_69(), null); 
    }
)
    |(	'knot' 
	{
        $current = grammarAccess.getUNITAccess().getKNOTEnumLiteralDeclaration_70().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getKNOTEnumLiteralDeclaration_70(), null); 
    }
)
    |(	'are' 
	{
        $current = grammarAccess.getUNITAccess().getAREEnumLiteralDeclaration_71().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getAREEnumLiteralDeclaration_71(), null); 
    }
)
    |(	'hectare' 
	{
        $current = grammarAccess.getUNITAccess().getHECTAREEnumLiteralDeclaration_72().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getHECTAREEnumLiteralDeclaration_72(), null); 
    }
)
    |(	'bar' 
	{
        $current = grammarAccess.getUNITAccess().getBAREnumLiteralDeclaration_73().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getBAREnumLiteralDeclaration_73(), null); 
    }
)
    |(	'angstrom' 
	{
        $current = grammarAccess.getUNITAccess().getANGSROMEnumLiteralDeclaration_74().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getANGSROMEnumLiteralDeclaration_74(), null); 
    }
)
    |(	'barn' 
	{
        $current = grammarAccess.getUNITAccess().getBARNEnumLiteralDeclaration_75().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getBARNEnumLiteralDeclaration_75(), null); 
    }
)
    |(	'curie' 
	{
        $current = grammarAccess.getUNITAccess().getCURIEEnumLiteralDeclaration_76().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getCURIEEnumLiteralDeclaration_76(), null); 
    }
)
    |(	'roentgen' 
	{
        $current = grammarAccess.getUNITAccess().getROENTGENEnumLiteralDeclaration_77().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getROENTGENEnumLiteralDeclaration_77(), null); 
    }
)
    |(	'rad' 
	{
        $current = grammarAccess.getUNITAccess().getRADEnumLiteralDeclaration_78().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getRADEnumLiteralDeclaration_78(), null); 
    }
)
    |(	'rem' 
	{
        $current = grammarAccess.getUNITAccess().getREMEnumLiteralDeclaration_79().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getUNITAccess().getREMEnumLiteralDeclaration_79(), null); 
    }
));



RULE_VERSION : RULE_DECIMAL ('.' RULE_INT)+;

RULE_DECIMAL : (RULE_INT '.' RULE_INT|'.' RULE_INT);

RULE_MESSAGE_CODE : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F');

RULE_INTLITERAL : ('0'|'1'..'9' ('0'..'9')*);

RULE_NONINTNUMBER : '-'? RULE_DECIMAL (('e'|'E') ('+'|'-')? ('0'..'9')+)?;

RULE_ESC : '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\'|'0'..'3' '0'..'7' '0'..'7'|'0'..'7' '0'..'7'|'0'..'7');

RULE_STRINGLITERAL : ('"' (RULE_ESC|~(('\\'|'"')))* '"'|'\'' (RULE_ESC|~(('\\'|'\'')))* '\'');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INTERPRETATION : '##' ( options {greedy=false;} : . )*'##';

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


