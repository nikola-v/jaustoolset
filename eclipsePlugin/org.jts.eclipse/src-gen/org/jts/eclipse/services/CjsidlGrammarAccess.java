/*
* generated by Xtext
*/

package org.jts.eclipse.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class CjsidlGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class JausElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jaus");
		private final Assignment cSetAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cSetAlternatives_0 = (Alternatives)cSetAssignment.eContents().get(0);
		private final RuleCall cSetServiceDefParserRuleCall_0_0 = (RuleCall)cSetAlternatives_0.eContents().get(0);
		private final RuleCall cSetDeclaredTypeSetParserRuleCall_0_1 = (RuleCall)cSetAlternatives_0.eContents().get(1);
		private final RuleCall cSetDeclaredConstSetParserRuleCall_0_2 = (RuleCall)cSetAlternatives_0.eContents().get(2);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//jaus:
		//	set=(serviceDef | declaredTypeSet | declaredConstSet);
		public ParserRule getRule() { return rule; }

		//set=(serviceDef | declaredTypeSet | declaredConstSet)
		public Assignment getSetAssignment() { return cSetAssignment; }

		//serviceDef | declaredTypeSet | declaredConstSet
		public Alternatives getSetAlternatives_0() { return cSetAlternatives_0; }

		//serviceDef
		public RuleCall getSetServiceDefParserRuleCall_0_0() { return cSetServiceDefParserRuleCall_0_0; }

		//declaredTypeSet
		public RuleCall getSetDeclaredTypeSetParserRuleCall_0_1() { return cSetDeclaredTypeSetParserRuleCall_0_1; }

		//declaredConstSet
		public RuleCall getSetDeclaredConstSetParserRuleCall_0_2() { return cSetDeclaredConstSetParserRuleCall_0_2; }
	}

	public class ServiceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "serviceDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cServiceNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cServiceNameIDTerminalRuleCall_1_0 = (RuleCall)cServiceNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameURIParserRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cVersionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cServiceVersionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Alternatives cServiceVersionAlternatives_9_0 = (Alternatives)cServiceVersionAssignment_9.eContents().get(0);
		private final RuleCall cServiceVersionDECIMALTerminalRuleCall_9_0_0 = (RuleCall)cServiceVersionAlternatives_9_0.eContents().get(0);
		private final RuleCall cServiceVersionVERSIONTerminalRuleCall_9_0_1 = (RuleCall)cServiceVersionAlternatives_9_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cDescrAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cDescrDescriptionParserRuleCall_12_0 = (RuleCall)cDescrAssignment_12.eContents().get(0);
		private final Assignment cAssumptAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAssumptAssumptionsParserRuleCall_13_0 = (RuleCall)cAssumptAssignment_13.eContents().get(0);
		private final Assignment cRefsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cRefsReferencesParserRuleCall_14_0 = (RuleCall)cRefsAssignment_14.eContents().get(0);
		private final Assignment cConstSetAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cConstSetDeclaredConstSetParserRuleCall_15_0 = (RuleCall)cConstSetAssignment_15.eContents().get(0);
		private final Assignment cTypeSetAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cTypeSetDeclaredTypeSetParserRuleCall_16_0 = (RuleCall)cTypeSetAssignment_16.eContents().get(0);
		private final Assignment cMessageSetAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cMessageSetMessageSetParserRuleCall_17_0 = (RuleCall)cMessageSetAssignment_17.eContents().get(0);
		private final Assignment cInternalEventSetAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cInternalEventSetInternalEventSetParserRuleCall_18_0 = (RuleCall)cInternalEventSetAssignment_18.eContents().get(0);
		private final Assignment cProtocolBehaviorAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cProtocolBehaviorProtocolBehaviorParserRuleCall_19_0 = (RuleCall)cProtocolBehaviorAssignment_19.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cSemicolonKeyword_21 = (Keyword)cGroup.eContents().get(21);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//serviceDef: // URI must be stored in the variable 'name' for imports to work correctly.
		//
		//	"service" serviceName=ID "(" "id" "=" name=URI "," "version" "=" serviceVersion=(DECIMAL | VERSION) ")" "{"
		//	descr=description assumpt=assumptions refs=references? constSet=declaredConstSet? typeSet=declaredTypeSet?
		//	messageSet=messageSet internalEventSet=internalEventSet protocolBehavior=protocolBehavior "}" ";"?;
		public ParserRule getRule() { return rule; }

		//// URI must be stored in the variable 'name' for imports to work correctly.
		//
		//"service" serviceName=ID "(" "id" "=" name=URI "," "version" "=" serviceVersion=(DECIMAL | VERSION) ")" "{"
		//descr=description assumpt=assumptions refs=references? constSet=declaredConstSet? typeSet=declaredTypeSet?
		//messageSet=messageSet internalEventSet=internalEventSet protocolBehavior=protocolBehavior "}" ";"?
		public Group getGroup() { return cGroup; }

		//// URI must be stored in the variable 'name' for imports to work correctly.
		//
		//"service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//serviceName=ID
		public Assignment getServiceNameAssignment_1() { return cServiceNameAssignment_1; }

		//ID
		public RuleCall getServiceNameIDTerminalRuleCall_1_0() { return cServiceNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//"id"
		public Keyword getIdKeyword_3() { return cIdKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//name=URI
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//URI
		public RuleCall getNameURIParserRuleCall_5_0() { return cNameURIParserRuleCall_5_0; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//"version"
		public Keyword getVersionKeyword_7() { return cVersionKeyword_7; }

		//"="
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }

		//serviceVersion=(DECIMAL | VERSION)
		public Assignment getServiceVersionAssignment_9() { return cServiceVersionAssignment_9; }

		//DECIMAL | VERSION
		public Alternatives getServiceVersionAlternatives_9_0() { return cServiceVersionAlternatives_9_0; }

		//DECIMAL
		public RuleCall getServiceVersionDECIMALTerminalRuleCall_9_0_0() { return cServiceVersionDECIMALTerminalRuleCall_9_0_0; }

		//VERSION
		public RuleCall getServiceVersionVERSIONTerminalRuleCall_9_0_1() { return cServiceVersionVERSIONTerminalRuleCall_9_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }

		//descr=description
		public Assignment getDescrAssignment_12() { return cDescrAssignment_12; }

		//description
		public RuleCall getDescrDescriptionParserRuleCall_12_0() { return cDescrDescriptionParserRuleCall_12_0; }

		//assumpt=assumptions
		public Assignment getAssumptAssignment_13() { return cAssumptAssignment_13; }

		//assumptions
		public RuleCall getAssumptAssumptionsParserRuleCall_13_0() { return cAssumptAssumptionsParserRuleCall_13_0; }

		//refs=references?
		public Assignment getRefsAssignment_14() { return cRefsAssignment_14; }

		//references
		public RuleCall getRefsReferencesParserRuleCall_14_0() { return cRefsReferencesParserRuleCall_14_0; }

		//constSet=declaredConstSet?
		public Assignment getConstSetAssignment_15() { return cConstSetAssignment_15; }

		//declaredConstSet
		public RuleCall getConstSetDeclaredConstSetParserRuleCall_15_0() { return cConstSetDeclaredConstSetParserRuleCall_15_0; }

		//typeSet=declaredTypeSet?
		public Assignment getTypeSetAssignment_16() { return cTypeSetAssignment_16; }

		//declaredTypeSet
		public RuleCall getTypeSetDeclaredTypeSetParserRuleCall_16_0() { return cTypeSetDeclaredTypeSetParserRuleCall_16_0; }

		//messageSet=messageSet
		public Assignment getMessageSetAssignment_17() { return cMessageSetAssignment_17; }

		//messageSet
		public RuleCall getMessageSetMessageSetParserRuleCall_17_0() { return cMessageSetMessageSetParserRuleCall_17_0; }

		//internalEventSet=internalEventSet
		public Assignment getInternalEventSetAssignment_18() { return cInternalEventSetAssignment_18; }

		//internalEventSet
		public RuleCall getInternalEventSetInternalEventSetParserRuleCall_18_0() { return cInternalEventSetInternalEventSetParserRuleCall_18_0; }

		//protocolBehavior=protocolBehavior
		public Assignment getProtocolBehaviorAssignment_19() { return cProtocolBehaviorAssignment_19; }

		//protocolBehavior
		public RuleCall getProtocolBehaviorProtocolBehaviorParserRuleCall_19_0() { return cProtocolBehaviorProtocolBehaviorParserRuleCall_19_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }

		//";"?
		public Keyword getSemicolonKeyword_21() { return cSemicolonKeyword_21; }
	}

	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "description");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cContentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cContentSTRINGLITERALTerminalRuleCall_1_0 = (RuleCall)cContentAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		////
		//
		//description:
		//	"description" content=STRINGLITERAL ";";
		public ParserRule getRule() { return rule; }

		//"description" content=STRINGLITERAL ";"
		public Group getGroup() { return cGroup; }

		//"description"
		public Keyword getDescriptionKeyword_0() { return cDescriptionKeyword_0; }

		//content=STRINGLITERAL
		public Assignment getContentAssignment_1() { return cContentAssignment_1; }

		//STRINGLITERAL
		public RuleCall getContentSTRINGLITERALTerminalRuleCall_1_0() { return cContentSTRINGLITERALTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class AssumptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assumptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssumptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cSTRINGLITERALTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//assumptions returns ecore::EString:
		//	"assumptions" STRINGLITERAL ";";
		public ParserRule getRule() { return rule; }

		//"assumptions" STRINGLITERAL ";"
		public Group getGroup() { return cGroup; }

		//"assumptions"
		public Keyword getAssumptionsKeyword_0() { return cAssumptionsKeyword_0; }

		//STRINGLITERAL
		public RuleCall getSTRINGLITERALTerminalRuleCall_1() { return cSTRINGLITERALTerminalRuleCall_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class ReferencesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "references");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferencesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cReferencesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInherits_fromKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRefInheritAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRefInheritRefAttrParserRuleCall_3_1_0 = (RuleCall)cRefInheritAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cClient_ofKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRefClientAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRefClientRefAttrParserRuleCall_4_1_0 = (RuleCall)cRefClientAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// TODO: build this out....
		//
		//references:
		//	{references} "references" "{" ("inherits_from" refInherit=refAttr ";")? ("client_of" refClient+=refAttr ";")* "}"
		//	";"?;
		public ParserRule getRule() { return rule; }

		//{references} "references" "{" ("inherits_from" refInherit=refAttr ";")? ("client_of" refClient+=refAttr ";")* "}" ";"?
		public Group getGroup() { return cGroup; }

		//{references}
		public Action getReferencesAction_0() { return cReferencesAction_0; }

		//"references"
		public Keyword getReferencesKeyword_1() { return cReferencesKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("inherits_from" refInherit=refAttr ";")?
		public Group getGroup_3() { return cGroup_3; }

		//"inherits_from"
		public Keyword getInherits_fromKeyword_3_0() { return cInherits_fromKeyword_3_0; }

		//refInherit=refAttr
		public Assignment getRefInheritAssignment_3_1() { return cRefInheritAssignment_3_1; }

		//refAttr
		public RuleCall getRefInheritRefAttrParserRuleCall_3_1_0() { return cRefInheritRefAttrParserRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3_2() { return cSemicolonKeyword_3_2; }

		//("client_of" refClient+=refAttr ";")*
		public Group getGroup_4() { return cGroup_4; }

		//"client_of"
		public Keyword getClient_ofKeyword_4_0() { return cClient_ofKeyword_4_0; }

		//refClient+=refAttr
		public Assignment getRefClientAssignment_4_1() { return cRefClientAssignment_4_1; }

		//refAttr
		public RuleCall getRefClientRefAttrParserRuleCall_4_1_0() { return cRefClientRefAttrParserRuleCall_4_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4_2() { return cSemicolonKeyword_4_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class RefAttrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "refAttr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cImportedNamespaceServiceDefCrossReference_2_0 = (CrossReference)cImportedNamespaceAssignment_2.eContents().get(0);
		private final RuleCall cImportedNamespaceServiceDefURIParserRuleCall_2_0_1 = (RuleCall)cImportedNamespaceServiceDefCrossReference_2_0.eContents().get(1);
		private final Keyword cAsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//refAttr:
		//	comment=INTERPRETATION? "import" importedNamespace=[serviceDef|URI] "as" name=ID;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "import" importedNamespace=[serviceDef|URI] "as" name=ID
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"import"
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }

		//importedNamespace=[serviceDef|URI]
		public Assignment getImportedNamespaceAssignment_2() { return cImportedNamespaceAssignment_2; }

		//[serviceDef|URI]
		public CrossReference getImportedNamespaceServiceDefCrossReference_2_0() { return cImportedNamespaceServiceDefCrossReference_2_0; }

		//URI
		public RuleCall getImportedNamespaceServiceDefURIParserRuleCall_2_0_1() { return cImportedNamespaceServiceDefURIParserRuleCall_2_0_1; }

		//"as"
		public Keyword getAsKeyword_3() { return cAsKeyword_3; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
	}

	public class DeclaredConstSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "declaredConstSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cConstantsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cConstNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cConstNameIDTerminalRuleCall_0_1_0 = (RuleCall)cConstNameAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cIdKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cNameAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cNameURIParserRuleCall_1_3_0 = (RuleCall)cNameAssignment_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cVersionKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Keyword cEqualsSignKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Assignment cConstSetVersionAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final Alternatives cConstSetVersionAlternatives_1_7_0 = (Alternatives)cConstSetVersionAssignment_1_7.eContents().get(0);
		private final RuleCall cConstSetVersionDECIMALTerminalRuleCall_1_7_0_0 = (RuleCall)cConstSetVersionAlternatives_1_7_0.eContents().get(0);
		private final RuleCall cConstSetVersionVERSIONTerminalRuleCall_1_7_0_1 = (RuleCall)cConstSetVersionAlternatives_1_7_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_8 = (Keyword)cGroup_1.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDeclaredConstSetRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_3_0 = (RuleCall)cDeclaredConstSetRefAssignment_3.eContents().get(0);
		private final Assignment cConstDefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConstDefConstDefParserRuleCall_4_0 = (RuleCall)cConstDefAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//declaredConstSet:
		//	("constants" constName=ID) //'constants' (name=ID | constSetURI=URI '.' ID 'version' '=' version=VERSION )
		//
		//	("(" "id" "=" name=URI "," "version" "=" constSetVersion=(DECIMAL | VERSION) ")")? "{"
		//	declaredConstSetRef+=declaredConstSetRef* constDef+=constDef* "}" ";"?;
		public ParserRule getRule() { return rule; }

		//("constants" constName=ID) //'constants' (name=ID | constSetURI=URI '.' ID 'version' '=' version=VERSION )
		//
		//("(" "id" "=" name=URI "," "version" "=" constSetVersion=(DECIMAL | VERSION) ")")? "{"
		//declaredConstSetRef+=declaredConstSetRef* constDef+=constDef* "}" ";"?
		public Group getGroup() { return cGroup; }

		//"constants" constName=ID
		public Group getGroup_0() { return cGroup_0; }

		//"constants"
		public Keyword getConstantsKeyword_0_0() { return cConstantsKeyword_0_0; }

		//constName=ID
		public Assignment getConstNameAssignment_0_1() { return cConstNameAssignment_0_1; }

		//ID
		public RuleCall getConstNameIDTerminalRuleCall_0_1_0() { return cConstNameIDTerminalRuleCall_0_1_0; }

		//("(" "id" "=" name=URI "," "version" "=" constSetVersion=(DECIMAL | VERSION) ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//"id"
		public Keyword getIdKeyword_1_1() { return cIdKeyword_1_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_2() { return cEqualsSignKeyword_1_2; }

		//name=URI
		public Assignment getNameAssignment_1_3() { return cNameAssignment_1_3; }

		//URI
		public RuleCall getNameURIParserRuleCall_1_3_0() { return cNameURIParserRuleCall_1_3_0; }

		//","
		public Keyword getCommaKeyword_1_4() { return cCommaKeyword_1_4; }

		//"version"
		public Keyword getVersionKeyword_1_5() { return cVersionKeyword_1_5; }

		//"="
		public Keyword getEqualsSignKeyword_1_6() { return cEqualsSignKeyword_1_6; }

		//constSetVersion=(DECIMAL | VERSION)
		public Assignment getConstSetVersionAssignment_1_7() { return cConstSetVersionAssignment_1_7; }

		//DECIMAL | VERSION
		public Alternatives getConstSetVersionAlternatives_1_7_0() { return cConstSetVersionAlternatives_1_7_0; }

		//DECIMAL
		public RuleCall getConstSetVersionDECIMALTerminalRuleCall_1_7_0_0() { return cConstSetVersionDECIMALTerminalRuleCall_1_7_0_0; }

		//VERSION
		public RuleCall getConstSetVersionVERSIONTerminalRuleCall_1_7_0_1() { return cConstSetVersionVERSIONTerminalRuleCall_1_7_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_1_8() { return cRightParenthesisKeyword_1_8; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//declaredConstSetRef+=declaredConstSetRef*
		public Assignment getDeclaredConstSetRefAssignment_3() { return cDeclaredConstSetRefAssignment_3; }

		//declaredConstSetRef
		public RuleCall getDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_3_0() { return cDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_3_0; }

		//constDef+=constDef*
		public Assignment getConstDefAssignment_4() { return cConstDefAssignment_4; }

		//constDef
		public RuleCall getConstDefConstDefParserRuleCall_4_0() { return cConstDefConstDefParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class DeclaredConstSetRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "declaredConstSetRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cUsingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cConstantsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportedNamespaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cImportedNamespaceDeclaredConstSetCrossReference_3_0 = (CrossReference)cImportedNamespaceAssignment_3.eContents().get(0);
		private final RuleCall cImportedNamespaceDeclaredConstSetURIParserRuleCall_3_0_1 = (RuleCall)cImportedNamespaceDeclaredConstSetCrossReference_3_0.eContents().get(1);
		private final Keyword cAsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		/////////////////////////////////////////////////////////////////////////////////
		//
		//declaredConstSetRef:
		//	comment=INTERPRETATION? "using" "constants" importedNamespace=[declaredConstSet|URI] "as" name=ID ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "using" "constants" importedNamespace=[declaredConstSet|URI] "as" name=ID ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"using"
		public Keyword getUsingKeyword_1() { return cUsingKeyword_1; }

		//"constants"
		public Keyword getConstantsKeyword_2() { return cConstantsKeyword_2; }

		//importedNamespace=[declaredConstSet|URI]
		public Assignment getImportedNamespaceAssignment_3() { return cImportedNamespaceAssignment_3; }

		//[declaredConstSet|URI]
		public CrossReference getImportedNamespaceDeclaredConstSetCrossReference_3_0() { return cImportedNamespaceDeclaredConstSetCrossReference_3_0; }

		//URI
		public RuleCall getImportedNamespaceDeclaredConstSetURIParserRuleCall_3_0_1() { return cImportedNamespaceDeclaredConstSetURIParserRuleCall_3_0_1; }

		//"as"
		public Keyword getAsKeyword_4() { return cAsKeyword_4; }

		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class DeclaredTypeSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "declaredTypeSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypesetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeNameIDTerminalRuleCall_1_0 = (RuleCall)cTypeNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cIdKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cNameAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cNameURIParserRuleCall_2_3_0 = (RuleCall)cNameAssignment_2_3.eContents().get(0);
		private final Keyword cCommaKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cVersionKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Keyword cEqualsSignKeyword_2_6 = (Keyword)cGroup_2.eContents().get(6);
		private final Assignment cVersionAssignment_2_7 = (Assignment)cGroup_2.eContents().get(7);
		private final Alternatives cVersionAlternatives_2_7_0 = (Alternatives)cVersionAssignment_2_7.eContents().get(0);
		private final RuleCall cVersionDECIMALTerminalRuleCall_2_7_0_0 = (RuleCall)cVersionAlternatives_2_7_0.eContents().get(0);
		private final RuleCall cVersionVERSIONTerminalRuleCall_2_7_0_1 = (RuleCall)cVersionAlternatives_2_7_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_8 = (Keyword)cGroup_2.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDeclaredConstSetRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_4_0 = (RuleCall)cDeclaredConstSetRefAssignment_4.eContents().get(0);
		private final Assignment cDeclaredTypeSetRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDeclaredTypeSetRefDeclaredTypeSetRefParserRuleCall_5_0 = (RuleCall)cDeclaredTypeSetRefAssignment_5.eContents().get(0);
		private final Assignment cTypeDefAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeDefTypeDefParserRuleCall_6_0 = (RuleCall)cTypeDefAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cTypeRefAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cTypeRefTypeReferenceParserRuleCall_7_0_0 = (RuleCall)cTypeRefAssignment_7_0.eContents().get(0);
		private final Assignment cScopedRefAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cScopedRefScopedTypeIdParserRuleCall_7_1_0 = (RuleCall)cScopedRefAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//declaredTypeSet: //(name=ID | typeURI=URI '.' ID 'version' '=' version=VERSION )
		//
		//	"typeset" typeName=ID ("(" "id" "=" name=URI "," "version" "=" version=(DECIMAL | VERSION) ")")? "{"
		//	declaredConstSetRef+=declaredConstSetRef* declaredTypeSetRef+=declaredTypeSetRef* typeDef+=typeDef*
		//	(typeRef+=typeReference | scopedRef+=scopedTypeId)* "}" ";"?;
		public ParserRule getRule() { return rule; }

		////(name=ID | typeURI=URI '.' ID 'version' '=' version=VERSION )
		//
		//"typeset" typeName=ID ("(" "id" "=" name=URI "," "version" "=" version=(DECIMAL | VERSION) ")")? "{"
		//declaredConstSetRef+=declaredConstSetRef* declaredTypeSetRef+=declaredTypeSetRef* typeDef+=typeDef*
		//(typeRef+=typeReference | scopedRef+=scopedTypeId)* "}" ";"?
		public Group getGroup() { return cGroup; }

		////(name=ID | typeURI=URI '.' ID 'version' '=' version=VERSION )
		//
		//"typeset"
		public Keyword getTypesetKeyword_0() { return cTypesetKeyword_0; }

		//typeName=ID
		public Assignment getTypeNameAssignment_1() { return cTypeNameAssignment_1; }

		//ID
		public RuleCall getTypeNameIDTerminalRuleCall_1_0() { return cTypeNameIDTerminalRuleCall_1_0; }

		//("(" "id" "=" name=URI "," "version" "=" version=(DECIMAL | VERSION) ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//"id"
		public Keyword getIdKeyword_2_1() { return cIdKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//name=URI
		public Assignment getNameAssignment_2_3() { return cNameAssignment_2_3; }

		//URI
		public RuleCall getNameURIParserRuleCall_2_3_0() { return cNameURIParserRuleCall_2_3_0; }

		//","
		public Keyword getCommaKeyword_2_4() { return cCommaKeyword_2_4; }

		//"version"
		public Keyword getVersionKeyword_2_5() { return cVersionKeyword_2_5; }

		//"="
		public Keyword getEqualsSignKeyword_2_6() { return cEqualsSignKeyword_2_6; }

		//version=(DECIMAL | VERSION)
		public Assignment getVersionAssignment_2_7() { return cVersionAssignment_2_7; }

		//DECIMAL | VERSION
		public Alternatives getVersionAlternatives_2_7_0() { return cVersionAlternatives_2_7_0; }

		//DECIMAL
		public RuleCall getVersionDECIMALTerminalRuleCall_2_7_0_0() { return cVersionDECIMALTerminalRuleCall_2_7_0_0; }

		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_2_7_0_1() { return cVersionVERSIONTerminalRuleCall_2_7_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2_8() { return cRightParenthesisKeyword_2_8; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//declaredConstSetRef+=declaredConstSetRef*
		public Assignment getDeclaredConstSetRefAssignment_4() { return cDeclaredConstSetRefAssignment_4; }

		//declaredConstSetRef
		public RuleCall getDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_4_0() { return cDeclaredConstSetRefDeclaredConstSetRefParserRuleCall_4_0; }

		//declaredTypeSetRef+=declaredTypeSetRef*
		public Assignment getDeclaredTypeSetRefAssignment_5() { return cDeclaredTypeSetRefAssignment_5; }

		//declaredTypeSetRef
		public RuleCall getDeclaredTypeSetRefDeclaredTypeSetRefParserRuleCall_5_0() { return cDeclaredTypeSetRefDeclaredTypeSetRefParserRuleCall_5_0; }

		//typeDef+=typeDef*
		public Assignment getTypeDefAssignment_6() { return cTypeDefAssignment_6; }

		//typeDef
		public RuleCall getTypeDefTypeDefParserRuleCall_6_0() { return cTypeDefTypeDefParserRuleCall_6_0; }

		//(typeRef+=typeReference | scopedRef+=scopedTypeId)*
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//typeRef+=typeReference
		public Assignment getTypeRefAssignment_7_0() { return cTypeRefAssignment_7_0; }

		//typeReference
		public RuleCall getTypeRefTypeReferenceParserRuleCall_7_0_0() { return cTypeRefTypeReferenceParserRuleCall_7_0_0; }

		//scopedRef+=scopedTypeId
		public Assignment getScopedRefAssignment_7_1() { return cScopedRefAssignment_7_1; }

		//scopedTypeId
		public RuleCall getScopedRefScopedTypeIdParserRuleCall_7_1_0() { return cScopedRefScopedTypeIdParserRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//";"?
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}

	public class MessageSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "messageSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cMessagesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInputCommentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInputCommentINTERPRETATIONTerminalRuleCall_3_0 = (RuleCall)cInputCommentAssignment_3.eContents().get(0);
		private final Keyword cInputKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cInputSetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInputSetMessagesParserRuleCall_6_0 = (RuleCall)cInputSetAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOutputCommentAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOutputCommentINTERPRETATIONTerminalRuleCall_8_0 = (RuleCall)cOutputCommentAssignment_8.eContents().get(0);
		private final Keyword cOutputKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cOutputSetAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOutputSetMessagesParserRuleCall_11_0 = (RuleCall)cOutputSetAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//messageSet:
		//	comment=INTERPRETATION? "messages" "{" inputComment=INTERPRETATION? "input" "{" inputSet=messages "}"
		//	outputComment=INTERPRETATION? "output" "{" outputSet=messages "}" "}";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "messages" "{" inputComment=INTERPRETATION? "input" "{" inputSet=messages "}"
		//outputComment=INTERPRETATION? "output" "{" outputSet=messages "}" "}"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"messages"
		public Keyword getMessagesKeyword_1() { return cMessagesKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//inputComment=INTERPRETATION?
		public Assignment getInputCommentAssignment_3() { return cInputCommentAssignment_3; }

		//INTERPRETATION
		public RuleCall getInputCommentINTERPRETATIONTerminalRuleCall_3_0() { return cInputCommentINTERPRETATIONTerminalRuleCall_3_0; }

		//"input"
		public Keyword getInputKeyword_4() { return cInputKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//inputSet=messages
		public Assignment getInputSetAssignment_6() { return cInputSetAssignment_6; }

		//messages
		public RuleCall getInputSetMessagesParserRuleCall_6_0() { return cInputSetMessagesParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//outputComment=INTERPRETATION?
		public Assignment getOutputCommentAssignment_8() { return cOutputCommentAssignment_8; }

		//INTERPRETATION
		public RuleCall getOutputCommentINTERPRETATIONTerminalRuleCall_8_0() { return cOutputCommentINTERPRETATIONTerminalRuleCall_8_0; }

		//"output"
		public Keyword getOutputKeyword_9() { return cOutputKeyword_9; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }

		//outputSet=messages
		public Assignment getOutputSetAssignment_11() { return cOutputSetAssignment_11; }

		//messages
		public RuleCall getOutputSetMessagesParserRuleCall_11_0() { return cOutputSetMessagesParserRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class MessagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "messages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMessagesAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cMessageDefsAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cMessageDefsMessageDefParserRuleCall_1_0_0 = (RuleCall)cMessageDefsAssignment_1_0.eContents().get(0);
		private final Assignment cTypeRefsAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cTypeRefsMessageRefParserRuleCall_1_1_0 = (RuleCall)cTypeRefsAssignment_1_1.eContents().get(0);
		private final Assignment cScopedRefsAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cScopedRefsMessageScopedRefParserRuleCall_1_2_0 = (RuleCall)cScopedRefsAssignment_1_2.eContents().get(0);
		
		//messages:
		//	{messages} (messageDefs+=messageDef | typeRefs+=messageRef | scopedRefs+=messageScopedRef)*;
		public ParserRule getRule() { return rule; }

		//{messages} (messageDefs+=messageDef | typeRefs+=messageRef | scopedRefs+=messageScopedRef)*
		public Group getGroup() { return cGroup; }

		//{messages}
		public Action getMessagesAction_0() { return cMessagesAction_0; }

		//(messageDefs+=messageDef | typeRefs+=messageRef | scopedRefs+=messageScopedRef)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//messageDefs+=messageDef
		public Assignment getMessageDefsAssignment_1_0() { return cMessageDefsAssignment_1_0; }

		//messageDef
		public RuleCall getMessageDefsMessageDefParserRuleCall_1_0_0() { return cMessageDefsMessageDefParserRuleCall_1_0_0; }

		//typeRefs+=messageRef
		public Assignment getTypeRefsAssignment_1_1() { return cTypeRefsAssignment_1_1; }

		//messageRef
		public RuleCall getTypeRefsMessageRefParserRuleCall_1_1_0() { return cTypeRefsMessageRefParserRuleCall_1_1_0; }

		//scopedRefs+=messageScopedRef
		public Assignment getScopedRefsAssignment_1_2() { return cScopedRefsAssignment_1_2; }

		//messageScopedRef
		public RuleCall getScopedRefsMessageScopedRefParserRuleCall_1_2_0() { return cScopedRefsMessageScopedRefParserRuleCall_1_2_0; }
	}

	public class InternalEventSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "internalEventSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInternalEventSetAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Keyword cEventsetKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDefsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cDefsAlternatives_4_0 = (Alternatives)cDefsAssignment_4.eContents().get(0);
		private final RuleCall cDefsDeclaredEventDefParserRuleCall_4_0_0 = (RuleCall)cDefsAlternatives_4_0.eContents().get(0);
		private final RuleCall cDefsEventDefParserRuleCall_4_0_1 = (RuleCall)cDefsAlternatives_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//internalEventSet:
		//	{internalEventSet} comment=INTERPRETATION? "eventset" "{" defs+=(declaredEventDef | eventDef)* "}" ";"?;
		public ParserRule getRule() { return rule; }

		//{internalEventSet} comment=INTERPRETATION? "eventset" "{" defs+=(declaredEventDef | eventDef)* "}" ";"?
		public Group getGroup() { return cGroup; }

		//{internalEventSet}
		public Action getInternalEventSetAction_0() { return cInternalEventSetAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//"eventset"
		public Keyword getEventsetKeyword_2() { return cEventsetKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//defs+=(declaredEventDef | eventDef)*
		public Assignment getDefsAssignment_4() { return cDefsAssignment_4; }

		//declaredEventDef | eventDef
		public Alternatives getDefsAlternatives_4_0() { return cDefsAlternatives_4_0; }

		//declaredEventDef
		public RuleCall getDefsDeclaredEventDefParserRuleCall_4_0_0() { return cDefsDeclaredEventDefParserRuleCall_4_0_0; }

		//eventDef
		public RuleCall getDefsEventDefParserRuleCall_4_0_1() { return cDefsEventDefParserRuleCall_4_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class EventDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eventDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cDescrAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cDescrDescriptionParserRuleCall_3_0_0 = (RuleCall)cDescrAssignment_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cUnorderedGroup_3.eContents().get(1);
		private final Assignment cHeaderAssignment_3_1_0 = (Assignment)cAlternatives_3_1.eContents().get(0);
		private final RuleCall cHeaderHeaderDefParserRuleCall_3_1_0_0 = (RuleCall)cHeaderAssignment_3_1_0.eContents().get(0);
		private final Assignment cHeaderAssignment_3_1_1 = (Assignment)cAlternatives_3_1.eContents().get(1);
		private final RuleCall cHeaderHeaderRefParserRuleCall_3_1_1_0 = (RuleCall)cHeaderAssignment_3_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3_2 = (Alternatives)cUnorderedGroup_3.eContents().get(2);
		private final Assignment cBodyAssignment_3_2_0 = (Assignment)cAlternatives_3_2.eContents().get(0);
		private final RuleCall cBodyBodyDefParserRuleCall_3_2_0_0 = (RuleCall)cBodyAssignment_3_2_0.eContents().get(0);
		private final Assignment cBodyAssignment_3_2_1 = (Assignment)cAlternatives_3_2.eContents().get(1);
		private final RuleCall cBodyBodyRefParserRuleCall_3_2_1_0 = (RuleCall)cBodyAssignment_3_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3_3 = (Alternatives)cUnorderedGroup_3.eContents().get(3);
		private final Assignment cFooterAssignment_3_3_0 = (Assignment)cAlternatives_3_3.eContents().get(0);
		private final RuleCall cFooterFooterDefParserRuleCall_3_3_0_0 = (RuleCall)cFooterAssignment_3_3_0.eContents().get(0);
		private final Assignment cFooterAssignment_3_3_1 = (Assignment)cAlternatives_3_3.eContents().get(1);
		private final RuleCall cFooterFooterRefParserRuleCall_3_3_1_0 = (RuleCall)cFooterAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//eventDef:
		//	"event" name=ID "{" (descr= // description is not optional for message_def in JSIDL 1.0
		//
		//	description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
		//	footer=footerRef)?) "}" ";"?;
		public ParserRule getRule() { return rule; }

		//"event" name=ID "{" (descr= // description is not optional for message_def in JSIDL 1.0
		//
		//description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
		//footer=footerRef)?) "}" ";"?
		public Group getGroup() { return cGroup; }

		//"event"
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//descr= // description is not optional for message_def in JSIDL 1.0
		//
		//description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
		//footer=footerRef)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//descr= // description is not optional for message_def in JSIDL 1.0
		//
		//description
		public Assignment getDescrAssignment_3_0() { return cDescrAssignment_3_0; }

		//// description is not optional for message_def in JSIDL 1.0
		//
		//description
		public RuleCall getDescrDescriptionParserRuleCall_3_0_0() { return cDescrDescriptionParserRuleCall_3_0_0; }

		//(header=headerDef | header=headerRef)?
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//header=headerDef
		public Assignment getHeaderAssignment_3_1_0() { return cHeaderAssignment_3_1_0; }

		//headerDef
		public RuleCall getHeaderHeaderDefParserRuleCall_3_1_0_0() { return cHeaderHeaderDefParserRuleCall_3_1_0_0; }

		//header=headerRef
		public Assignment getHeaderAssignment_3_1_1() { return cHeaderAssignment_3_1_1; }

		//headerRef
		public RuleCall getHeaderHeaderRefParserRuleCall_3_1_1_0() { return cHeaderHeaderRefParserRuleCall_3_1_1_0; }

		//body=bodyDef | body=bodyRef
		public Alternatives getAlternatives_3_2() { return cAlternatives_3_2; }

		//body=bodyDef
		public Assignment getBodyAssignment_3_2_0() { return cBodyAssignment_3_2_0; }

		//bodyDef
		public RuleCall getBodyBodyDefParserRuleCall_3_2_0_0() { return cBodyBodyDefParserRuleCall_3_2_0_0; }

		//body=bodyRef
		public Assignment getBodyAssignment_3_2_1() { return cBodyAssignment_3_2_1; }

		//bodyRef
		public RuleCall getBodyBodyRefParserRuleCall_3_2_1_0() { return cBodyBodyRefParserRuleCall_3_2_1_0; }

		//(footer=footerDef | footer=footerRef)?
		public Alternatives getAlternatives_3_3() { return cAlternatives_3_3; }

		//footer=footerDef
		public Assignment getFooterAssignment_3_3_0() { return cFooterAssignment_3_3_0; }

		//footerDef
		public RuleCall getFooterFooterDefParserRuleCall_3_3_0_0() { return cFooterFooterDefParserRuleCall_3_3_0_0; }

		//footer=footerRef
		public Assignment getFooterAssignment_3_3_1() { return cFooterAssignment_3_3_1; }

		//footerRef
		public RuleCall getFooterFooterRefParserRuleCall_3_3_1_0() { return cFooterFooterRefParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//";"?
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class MessageRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "messageRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cMessageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRefMessageDefCrossReference_2_0 = (CrossReference)cRefAssignment_2.eContents().get(0);
		private final RuleCall cRefMessageDefIDTerminalRuleCall_2_0_1 = (RuleCall)cRefMessageDefCrossReference_2_0.eContents().get(1);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//messageRef:
		//	comment=INTERPRETATION? "message" ref=[messageDef] name=ID ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "message" ref=[messageDef] name=ID ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"message"
		public Keyword getMessageKeyword_1() { return cMessageKeyword_1; }

		//ref=[messageDef]
		public Assignment getRefAssignment_2() { return cRefAssignment_2; }

		//[messageDef]
		public CrossReference getRefMessageDefCrossReference_2_0() { return cRefMessageDefCrossReference_2_0; }

		//ID
		public RuleCall getRefMessageDefIDTerminalRuleCall_2_0_1() { return cRefMessageDefIDTerminalRuleCall_2_0_1; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ProtocolBehaviorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "protocolBehavior");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cStatelessAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cStatelessStatelessKeyword_1_0 = (Keyword)cStatelessAssignment_1.eContents().get(0);
		private final Keyword cProtocolKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStateMachineAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStateMachineStateMachineParserRuleCall_4_0 = (RuleCall)cStateMachineAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//protocolBehavior:
		//	comment=INTERPRETATION? stateless="stateless"? "protocol" "{" stateMachine+=stateMachine+ "}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? stateless="stateless"? "protocol" "{" stateMachine+=stateMachine+ "}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//stateless="stateless"?
		public Assignment getStatelessAssignment_1() { return cStatelessAssignment_1; }

		//"stateless"
		public Keyword getStatelessStatelessKeyword_1_0() { return cStatelessStatelessKeyword_1_0; }

		//"protocol"
		public Keyword getProtocolKeyword_2() { return cProtocolKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//stateMachine+=stateMachine+
		public Assignment getStateMachineAssignment_4() { return cStateMachineAssignment_4; }

		//stateMachine
		public RuleCall getStateMachineStateMachineParserRuleCall_4_0() { return cStateMachineStateMachineParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class StartStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "startState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cStartKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cScopedAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cScopedStateCrossReference_2_0_0 = (CrossReference)cScopedAssignment_2_0.eContents().get(0);
		private final RuleCall cScopedStateIDTerminalRuleCall_2_0_0_1 = (RuleCall)cScopedStateCrossReference_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cStateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cStateStateCrossReference_3_0 = (CrossReference)cStateAssignment_3.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_3_0_1 = (RuleCall)cStateStateCrossReference_3_0.eContents().get(1);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// Later plug in isomorphic SMC grammar here.
		//
		//startState:
		//	comment=INTERPRETATION? "start" (scoped+=[state] ".")* state=[state];
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "start" (scoped+=[state] ".")* state=[state]
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"start"
		public Keyword getStartKeyword_1() { return cStartKeyword_1; }

		//(scoped+=[state] ".")*
		public Group getGroup_2() { return cGroup_2; }

		//scoped+=[state]
		public Assignment getScopedAssignment_2_0() { return cScopedAssignment_2_0; }

		//[state]
		public CrossReference getScopedStateCrossReference_2_0_0() { return cScopedStateCrossReference_2_0_0; }

		//ID
		public RuleCall getScopedStateIDTerminalRuleCall_2_0_0_1() { return cScopedStateIDTerminalRuleCall_2_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_2_1() { return cFullStopKeyword_2_1; }

		//state=[state]
		public Assignment getStateAssignment_3() { return cStateAssignment_3; }

		//[state]
		public CrossReference getStateStateCrossReference_3_0() { return cStateStateCrossReference_3_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_3_0_1() { return cStateStateIDTerminalRuleCall_3_0_1; }
	}

	public class StateMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "stateMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cState_machineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cScopedAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cScopedRefAttrCrossReference_2_0_0 = (CrossReference)cScopedAssignment_2_0.eContents().get(0);
		private final RuleCall cScopedRefAttrIDTerminalRuleCall_2_0_0_1 = (RuleCall)cScopedRefAttrCrossReference_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStartStateAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStartStateStartStateParserRuleCall_5_0 = (RuleCall)cStartStateAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cDefaultStateAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cDefaultStateDefaultStateParserRuleCall_8_0_0 = (RuleCall)cDefaultStateAssignment_8_0.eContents().get(0);
		private final Assignment cStatesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cStatesStateParserRuleCall_8_1_0 = (RuleCall)cStatesAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//stateMachine:
		//	comment=INTERPRETATION? "state_machine" (scoped+=[refAttr] ".")* name=ID "(" startState=startState ")" "{"
		//	(defaultState=defaultState? states+=state+) "}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "state_machine" (scoped+=[refAttr] ".")* name=ID "(" startState=startState ")" "{"
		//(defaultState=defaultState? states+=state+) "}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"state_machine"
		public Keyword getState_machineKeyword_1() { return cState_machineKeyword_1; }

		//(scoped+=[refAttr] ".")*
		public Group getGroup_2() { return cGroup_2; }

		//scoped+=[refAttr]
		public Assignment getScopedAssignment_2_0() { return cScopedAssignment_2_0; }

		//[refAttr]
		public CrossReference getScopedRefAttrCrossReference_2_0_0() { return cScopedRefAttrCrossReference_2_0_0; }

		//ID
		public RuleCall getScopedRefAttrIDTerminalRuleCall_2_0_0_1() { return cScopedRefAttrIDTerminalRuleCall_2_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_2_1() { return cFullStopKeyword_2_1; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//startState=startState
		public Assignment getStartStateAssignment_5() { return cStartStateAssignment_5; }

		//startState
		public RuleCall getStartStateStartStateParserRuleCall_5_0() { return cStartStateStartStateParserRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//defaultState=defaultState? states+=state+
		public Group getGroup_8() { return cGroup_8; }

		//defaultState=defaultState?
		public Assignment getDefaultStateAssignment_8_0() { return cDefaultStateAssignment_8_0; }

		//defaultState
		public RuleCall getDefaultStateDefaultStateParserRuleCall_8_0_0() { return cDefaultStateDefaultStateParserRuleCall_8_0_0; }

		//states+=state+
		public Assignment getStatesAssignment_8_1() { return cStatesAssignment_8_1; }

		//state
		public RuleCall getStatesStateParserRuleCall_8_1_0() { return cStatesStateParserRuleCall_8_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }

		//";"?
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "state");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Assignment cInitialAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cInitialInitialKeyword_2_0 = (Keyword)cInitialAssignment_2.eContents().get(0);
		private final Keyword cStateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cEntryActionAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cEntryActionEntryParserRuleCall_6_0_0 = (RuleCall)cEntryActionAssignment_6_0.eContents().get(0);
		private final Assignment cExitActionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cExitActionExitParserRuleCall_6_1_0 = (RuleCall)cExitActionAssignment_6_1.eContents().get(0);
		private final Assignment cTransitionsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cTransitionsTransitionParserRuleCall_6_2_0 = (RuleCall)cTransitionsAssignment_6_2.eContents().get(0);
		private final Assignment cDefaultTransitionAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cDefaultTransitionDefaultTransitionParserRuleCall_6_3_0 = (RuleCall)cDefaultTransitionAssignment_6_3.eContents().get(0);
		private final Assignment cDefaultStateAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final RuleCall cDefaultStateDefaultStateParserRuleCall_6_4_0 = (RuleCall)cDefaultStateAssignment_6_4.eContents().get(0);
		private final Assignment cSubStateAssignment_6_5 = (Assignment)cGroup_6.eContents().get(5);
		private final RuleCall cSubStateStateParserRuleCall_6_5_0 = (RuleCall)cSubStateAssignment_6_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//state:
		//	{state} comment=INTERPRETATION? initial="initial"? "state" name=ID "{" (entryAction=entry? exitAction=exit?
		//	transitions+=transition* defaultTransition+=defaultTransition* defaultState=defaultState? subState+=state*) // substates
		//
		//	"}" ";"?;
		public ParserRule getRule() { return rule; }

		//{state} comment=INTERPRETATION? initial="initial"? "state" name=ID "{" (entryAction=entry? exitAction=exit?
		//transitions+=transition* defaultTransition+=defaultTransition* defaultState=defaultState? subState+=state*) // substates
		//
		//"}" ";"?
		public Group getGroup() { return cGroup; }

		//{state}
		public Action getStateAction_0() { return cStateAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//initial="initial"?
		public Assignment getInitialAssignment_2() { return cInitialAssignment_2; }

		//"initial"
		public Keyword getInitialInitialKeyword_2_0() { return cInitialInitialKeyword_2_0; }

		//"state"
		public Keyword getStateKeyword_3() { return cStateKeyword_3; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//entryAction=entry? exitAction=exit? transitions+=transition* defaultTransition+=defaultTransition*
		//defaultState=defaultState? subState+=state*
		public Group getGroup_6() { return cGroup_6; }

		//entryAction=entry?
		public Assignment getEntryActionAssignment_6_0() { return cEntryActionAssignment_6_0; }

		//entry
		public RuleCall getEntryActionEntryParserRuleCall_6_0_0() { return cEntryActionEntryParserRuleCall_6_0_0; }

		//exitAction=exit?
		public Assignment getExitActionAssignment_6_1() { return cExitActionAssignment_6_1; }

		//exit
		public RuleCall getExitActionExitParserRuleCall_6_1_0() { return cExitActionExitParserRuleCall_6_1_0; }

		//transitions+=transition*
		public Assignment getTransitionsAssignment_6_2() { return cTransitionsAssignment_6_2; }

		//transition
		public RuleCall getTransitionsTransitionParserRuleCall_6_2_0() { return cTransitionsTransitionParserRuleCall_6_2_0; }

		//defaultTransition+=defaultTransition*
		public Assignment getDefaultTransitionAssignment_6_3() { return cDefaultTransitionAssignment_6_3; }

		//defaultTransition
		public RuleCall getDefaultTransitionDefaultTransitionParserRuleCall_6_3_0() { return cDefaultTransitionDefaultTransitionParserRuleCall_6_3_0; }

		//defaultState=defaultState?
		public Assignment getDefaultStateAssignment_6_4() { return cDefaultStateAssignment_6_4; }

		//defaultState
		public RuleCall getDefaultStateDefaultStateParserRuleCall_6_4_0() { return cDefaultStateDefaultStateParserRuleCall_6_4_0; }

		//subState+=state*
		public Assignment getSubStateAssignment_6_5() { return cSubStateAssignment_6_5; }

		//state
		public RuleCall getSubStateStateParserRuleCall_6_5_0() { return cSubStateStateParserRuleCall_6_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//";"?
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class DefaultStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "defaultState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDefaultStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Keyword cStateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cTransitionAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cTransitionTransitionParserRuleCall_5_0_0 = (RuleCall)cTransitionAssignment_5_0.eContents().get(0);
		private final Assignment cDefaultTransitionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDefaultTransitionDefaultTransitionParserRuleCall_5_1_0 = (RuleCall)cDefaultTransitionAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////
		//
		//// TODO: formerly: 	'state' 'Default' attrs=Attrs '{'
		//
		//defaultState:
		//	{defaultState} comment=INTERPRETATION? "state" "default" "{" (transition+=transition*
		//	defaultTransition+=defaultTransition*) "}" ";"?;
		public ParserRule getRule() { return rule; }

		//{defaultState} comment=INTERPRETATION? "state" "default" "{" (transition+=transition*
		//defaultTransition+=defaultTransition*) "}" ";"?
		public Group getGroup() { return cGroup; }

		//{defaultState}
		public Action getDefaultStateAction_0() { return cDefaultStateAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//"state"
		public Keyword getStateKeyword_2() { return cStateKeyword_2; }

		//"default"
		public Keyword getDefaultKeyword_3() { return cDefaultKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//transition+=transition* defaultTransition+=defaultTransition*
		public Group getGroup_5() { return cGroup_5; }

		//transition+=transition*
		public Assignment getTransitionAssignment_5_0() { return cTransitionAssignment_5_0; }

		//transition
		public RuleCall getTransitionTransitionParserRuleCall_5_0_0() { return cTransitionTransitionParserRuleCall_5_0_0; }

		//defaultTransition+=defaultTransition*
		public Assignment getDefaultTransitionAssignment_5_1() { return cDefaultTransitionAssignment_5_1; }

		//defaultTransition
		public RuleCall getDefaultTransitionDefaultTransitionParserRuleCall_5_1_0() { return cDefaultTransitionDefaultTransitionParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//";"?
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class EntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "entry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntryAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Keyword cEntryKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Assignment cActionsAssignment_4_0 = (Assignment)cUnorderedGroup_4.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_4_0_0 = (RuleCall)cActionsAssignment_4_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_4_1 = (Assignment)cUnorderedGroup_4.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_4_1_0 = (RuleCall)cSendActionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// SMC: entry : 'Entry' '{' action* '}';
		//
		//entry:
		//	{entry} comment=INTERPRETATION? "entry" "{" (actions=actionList & sendActions=sendActionList?) "}" ";"?;
		public ParserRule getRule() { return rule; }

		//{entry} comment=INTERPRETATION? "entry" "{" (actions=actionList & sendActions=sendActionList?) "}" ";"?
		public Group getGroup() { return cGroup; }

		//{entry}
		public Action getEntryAction_0() { return cEntryAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//"entry"
		public Keyword getEntryKeyword_2() { return cEntryKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//actions=actionList & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//actions=actionList
		public Assignment getActionsAssignment_4_0() { return cActionsAssignment_4_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_4_0_0() { return cActionsActionListParserRuleCall_4_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_4_1() { return cSendActionsAssignment_4_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_4_1_0() { return cSendActionsSendActionListParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ExitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "exit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExitAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Keyword cExitKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Assignment cActionsAssignment_4_0 = (Assignment)cUnorderedGroup_4.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_4_0_0 = (RuleCall)cActionsAssignment_4_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_4_1 = (Assignment)cUnorderedGroup_4.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_4_1_0 = (RuleCall)cSendActionsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// SMC: exit : 'Exit' '{' action* '}';
		//
		//exit:
		//	{exit} comment=INTERPRETATION? "exit" "{" (actions=actionList & sendActions=sendActionList?) "}" ";"?;
		public ParserRule getRule() { return rule; }

		//{exit} comment=INTERPRETATION? "exit" "{" (actions=actionList & sendActions=sendActionList?) "}" ";"?
		public Group getGroup() { return cGroup; }

		//{exit}
		public Action getExitAction_0() { return cExitAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//"exit"
		public Keyword getExitKeyword_2() { return cExitKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//actions=actionList & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//actions=actionList
		public Assignment getActionsAssignment_4_0() { return cActionsAssignment_4_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_4_0_0() { return cActionsActionListParserRuleCall_4_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_4_1() { return cSendActionsAssignment_4_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_4_1_0() { return cSendActionsSendActionListParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class TransParamsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "transParams");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransParamsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cParamsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cParamsTransParamParserRuleCall_2_0_0 = (RuleCall)cParamsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cParamsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cParamsTransParamParserRuleCall_2_1_1_0 = (RuleCall)cParamsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// SMC: transition : WORD transition_args? guard? next_state '{' action* '}';
		//
		//// SMC: transition_args : '(' parameters ')';
		//
		//transParams:
		//	{transParams} "(" (params+=transParam ("," params+=transParam)*)? ")";
		public ParserRule getRule() { return rule; }

		//{transParams} "(" (params+=transParam ("," params+=transParam)*)? ")"
		public Group getGroup() { return cGroup; }

		//{transParams}
		public Action getTransParamsAction_0() { return cTransParamsAction_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//(params+=transParam ("," params+=transParam)*)?
		public Group getGroup_2() { return cGroup_2; }

		//params+=transParam
		public Assignment getParamsAssignment_2_0() { return cParamsAssignment_2_0; }

		//transParam
		public RuleCall getParamsTransParamParserRuleCall_2_0_0() { return cParamsTransParamParserRuleCall_2_0_0; }

		//("," params+=transParam)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//params+=transParam
		public Assignment getParamsAssignment_2_1_1() { return cParamsAssignment_2_1_1; }

		//transParam
		public RuleCall getParamsTransParamParserRuleCall_2_1_1_0() { return cParamsTransParamParserRuleCall_2_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class TransParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "transParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final CrossReference cTypeEObjectCrossReference_1_0_0 = (CrossReference)cTypeAssignment_1_0.eContents().get(0);
		private final RuleCall cTypeEObjectIDTerminalRuleCall_1_0_0_1 = (RuleCall)cTypeEObjectCrossReference_1_0_0.eContents().get(1);
		private final Assignment cScopedEventTypeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cScopedEventTypeScopedEventTypeParserRuleCall_1_1_0 = (RuleCall)cScopedEventTypeAssignment_1_1.eContents().get(0);
		private final Assignment cUnsignedTypeAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final Alternatives cUnsignedTypeAlternatives_1_2_0 = (Alternatives)cUnsignedTypeAssignment_1_2.eContents().get(0);
		private final Keyword cUnsignedTypeUint8Keyword_1_2_0_0 = (Keyword)cUnsignedTypeAlternatives_1_2_0.eContents().get(0);
		private final Keyword cUnsignedTypeUint16Keyword_1_2_0_1 = (Keyword)cUnsignedTypeAlternatives_1_2_0.eContents().get(1);
		private final Keyword cUnsignedTypeUint32Keyword_1_2_0_2 = (Keyword)cUnsignedTypeAlternatives_1_2_0.eContents().get(2);
		private final Keyword cUnsignedTypeUint64Keyword_1_2_0_3 = (Keyword)cUnsignedTypeAlternatives_1_2_0.eContents().get(3);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//transParam:
		//	comment=INTERPRETATION? (type=[ecore::EObject] | scopedEventType=scopedEventType | unsignedType=("uint8" | "uint16" |
		//	"uint32" | "uint64")) name=ID;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? (type=[ecore::EObject] | scopedEventType=scopedEventType | unsignedType=("uint8" | "uint16" |
		//"uint32" | "uint64")) name=ID
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//type=[ecore::EObject] | scopedEventType=scopedEventType | unsignedType=("uint8" | "uint16" | "uint32" | "uint64")
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//type=[ecore::EObject]
		public Assignment getTypeAssignment_1_0() { return cTypeAssignment_1_0; }

		//[ecore::EObject]
		public CrossReference getTypeEObjectCrossReference_1_0_0() { return cTypeEObjectCrossReference_1_0_0; }

		//ID
		public RuleCall getTypeEObjectIDTerminalRuleCall_1_0_0_1() { return cTypeEObjectIDTerminalRuleCall_1_0_0_1; }

		//scopedEventType=scopedEventType
		public Assignment getScopedEventTypeAssignment_1_1() { return cScopedEventTypeAssignment_1_1; }

		//scopedEventType
		public RuleCall getScopedEventTypeScopedEventTypeParserRuleCall_1_1_0() { return cScopedEventTypeScopedEventTypeParserRuleCall_1_1_0; }

		//unsignedType=("uint8" | "uint16" | "uint32" | "uint64")
		public Assignment getUnsignedTypeAssignment_1_2() { return cUnsignedTypeAssignment_1_2; }

		//"uint8" | "uint16" | "uint32" | "uint64"
		public Alternatives getUnsignedTypeAlternatives_1_2_0() { return cUnsignedTypeAlternatives_1_2_0; }

		//"uint8"
		public Keyword getUnsignedTypeUint8Keyword_1_2_0_0() { return cUnsignedTypeUint8Keyword_1_2_0_0; }

		//"uint16"
		public Keyword getUnsignedTypeUint16Keyword_1_2_0_1() { return cUnsignedTypeUint16Keyword_1_2_0_1; }

		//"uint32"
		public Keyword getUnsignedTypeUint32Keyword_1_2_0_2() { return cUnsignedTypeUint32Keyword_1_2_0_2; }

		//"uint64"
		public Keyword getUnsignedTypeUint64Keyword_1_2_0_3() { return cUnsignedTypeUint64Keyword_1_2_0_3; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Keyword cTypeInternalKeyword_2_0_0_0 = (Keyword)cTypeAssignment_2_0_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final Assignment cScopedAssignment_2_0_2_0 = (Assignment)cGroup_2_0_2.eContents().get(0);
		private final CrossReference cScopedRefAttrCrossReference_2_0_2_0_0 = (CrossReference)cScopedAssignment_2_0_2_0.eContents().get(0);
		private final RuleCall cScopedRefAttrIDTerminalRuleCall_2_0_2_0_0_1 = (RuleCall)cScopedRefAttrCrossReference_2_0_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_0_2_1 = (Keyword)cGroup_2_0_2.eContents().get(1);
		private final Assignment cNameAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_2_0_3_0 = (RuleCall)cNameAssignment_2_0_3.eContents().get(0);
		private final Assignment cParamsAssignment_2_0_4 = (Assignment)cGroup_2_0.eContents().get(4);
		private final RuleCall cParamsTransParamsParserRuleCall_2_0_4_0 = (RuleCall)cParamsAssignment_2_0_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_0_5 = (Keyword)cGroup_2_0.eContents().get(5);
		private final Assignment cTransGuardAssignment_2_0_6 = (Assignment)cGroup_2_0.eContents().get(6);
		private final RuleCall cTransGuardGuardParserRuleCall_2_0_6_0 = (RuleCall)cTransGuardAssignment_2_0_6.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_0_7 = (UnorderedGroup)cGroup_2_0.eContents().get(7);
		private final Assignment cActionsAssignment_2_0_7_0 = (Assignment)cUnorderedGroup_2_0_7.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_0_7_0_0 = (RuleCall)cActionsAssignment_2_0_7_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_0_7_1 = (Assignment)cUnorderedGroup_2_0_7.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_0_7_1_0 = (RuleCall)cSendActionsAssignment_2_0_7_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_0_8 = (Assignment)cGroup_2_0.eContents().get(8);
		private final RuleCall cDestinationInternalTransitionParserRuleCall_2_0_8_0 = (RuleCall)cDestinationAssignment_2_0_8.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cTypeAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final Keyword cTypeSimpleKeyword_2_1_0_0 = (Keyword)cTypeAssignment_2_1_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Assignment cScopedAssignment_2_1_2_0 = (Assignment)cGroup_2_1_2.eContents().get(0);
		private final CrossReference cScopedRefAttrCrossReference_2_1_2_0_0 = (CrossReference)cScopedAssignment_2_1_2_0.eContents().get(0);
		private final RuleCall cScopedRefAttrIDTerminalRuleCall_2_1_2_0_0_1 = (RuleCall)cScopedRefAttrCrossReference_2_1_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1_2_1 = (Keyword)cGroup_2_1_2.eContents().get(1);
		private final Assignment cNameAssignment_2_1_3 = (Assignment)cGroup_2_1.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_2_1_3_0 = (RuleCall)cNameAssignment_2_1_3.eContents().get(0);
		private final Assignment cParamsAssignment_2_1_4 = (Assignment)cGroup_2_1.eContents().get(4);
		private final RuleCall cParamsTransParamsParserRuleCall_2_1_4_0 = (RuleCall)cParamsAssignment_2_1_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1_5 = (Keyword)cGroup_2_1.eContents().get(5);
		private final Assignment cTransGuardAssignment_2_1_6 = (Assignment)cGroup_2_1.eContents().get(6);
		private final RuleCall cTransGuardGuardParserRuleCall_2_1_6_0 = (RuleCall)cTransGuardAssignment_2_1_6.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1_7 = (UnorderedGroup)cGroup_2_1.eContents().get(7);
		private final Assignment cActionsAssignment_2_1_7_0 = (Assignment)cUnorderedGroup_2_1_7.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_1_7_0_0 = (RuleCall)cActionsAssignment_2_1_7_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_1_7_1 = (Assignment)cUnorderedGroup_2_1_7.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_1_7_1_0 = (RuleCall)cSendActionsAssignment_2_1_7_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_1_8 = (Assignment)cGroup_2_1.eContents().get(8);
		private final RuleCall cDestinationSimpleTransitionParserRuleCall_2_1_8_0 = (RuleCall)cDestinationAssignment_2_1_8.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Assignment cTypeAssignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final Keyword cTypePushKeyword_2_2_0_0 = (Keyword)cTypeAssignment_2_2_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Group cGroup_2_2_2 = (Group)cGroup_2_2.eContents().get(2);
		private final Assignment cScopedAssignment_2_2_2_0 = (Assignment)cGroup_2_2_2.eContents().get(0);
		private final CrossReference cScopedRefAttrCrossReference_2_2_2_0_0 = (CrossReference)cScopedAssignment_2_2_2_0.eContents().get(0);
		private final RuleCall cScopedRefAttrIDTerminalRuleCall_2_2_2_0_0_1 = (RuleCall)cScopedRefAttrCrossReference_2_2_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_2_2_1 = (Keyword)cGroup_2_2_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2_3 = (Assignment)cGroup_2_2.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_2_2_3_0 = (RuleCall)cNameAssignment_2_2_3.eContents().get(0);
		private final Assignment cParamsAssignment_2_2_4 = (Assignment)cGroup_2_2.eContents().get(4);
		private final RuleCall cParamsTransParamsParserRuleCall_2_2_4_0 = (RuleCall)cParamsAssignment_2_2_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_2_5 = (Keyword)cGroup_2_2.eContents().get(5);
		private final Assignment cTransGuardAssignment_2_2_6 = (Assignment)cGroup_2_2.eContents().get(6);
		private final RuleCall cTransGuardGuardParserRuleCall_2_2_6_0 = (RuleCall)cTransGuardAssignment_2_2_6.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_2_7 = (UnorderedGroup)cGroup_2_2.eContents().get(7);
		private final Assignment cActionsAssignment_2_2_7_0 = (Assignment)cUnorderedGroup_2_2_7.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_2_7_0_0 = (RuleCall)cActionsAssignment_2_2_7_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_2_7_1 = (Assignment)cUnorderedGroup_2_2_7.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_2_7_1_0 = (RuleCall)cSendActionsAssignment_2_2_7_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_2_8 = (Assignment)cGroup_2_2.eContents().get(8);
		private final RuleCall cDestinationPushTransitionParserRuleCall_2_2_8_0 = (RuleCall)cDestinationAssignment_2_2_8.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Assignment cTypeAssignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final Keyword cTypePopKeyword_2_3_0_0 = (Keyword)cTypeAssignment_2_3_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_3_1 = (Keyword)cGroup_2_3.eContents().get(1);
		private final Group cGroup_2_3_2 = (Group)cGroup_2_3.eContents().get(2);
		private final Assignment cScopedAssignment_2_3_2_0 = (Assignment)cGroup_2_3_2.eContents().get(0);
		private final CrossReference cScopedRefAttrCrossReference_2_3_2_0_0 = (CrossReference)cScopedAssignment_2_3_2_0.eContents().get(0);
		private final RuleCall cScopedRefAttrIDTerminalRuleCall_2_3_2_0_0_1 = (RuleCall)cScopedRefAttrCrossReference_2_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_3_2_1 = (Keyword)cGroup_2_3_2.eContents().get(1);
		private final Assignment cNameAssignment_2_3_3 = (Assignment)cGroup_2_3.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_2_3_3_0 = (RuleCall)cNameAssignment_2_3_3.eContents().get(0);
		private final Assignment cParamsAssignment_2_3_4 = (Assignment)cGroup_2_3.eContents().get(4);
		private final RuleCall cParamsTransParamsParserRuleCall_2_3_4_0 = (RuleCall)cParamsAssignment_2_3_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_3_5 = (Keyword)cGroup_2_3.eContents().get(5);
		private final Assignment cTransGuardAssignment_2_3_6 = (Assignment)cGroup_2_3.eContents().get(6);
		private final RuleCall cTransGuardGuardParserRuleCall_2_3_6_0 = (RuleCall)cTransGuardAssignment_2_3_6.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_3_7 = (UnorderedGroup)cGroup_2_3.eContents().get(7);
		private final Assignment cActionsAssignment_2_3_7_0 = (Assignment)cUnorderedGroup_2_3_7.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_3_7_0_0 = (RuleCall)cActionsAssignment_2_3_7_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_3_7_1 = (Assignment)cUnorderedGroup_2_3_7.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_3_7_1_0 = (RuleCall)cSendActionsAssignment_2_3_7_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_3_8 = (Assignment)cGroup_2_3.eContents().get(8);
		private final RuleCall cDestinationPopTransitionParserRuleCall_2_3_8_0 = (RuleCall)cDestinationAssignment_2_3_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//transition:
		//	{transition} comment=INTERPRETATION? (type="internal" "transition" (scoped+=[refAttr] ".")* name=ID
		//	params=transParams? "{" transGuard=guard? (actions=actionList? & sendActions=sendActionList?)
		//	destination=internalTransition | type="simple" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{"
		//	transGuard=guard? (actions=actionList? & sendActions=sendActionList?) destination=simpleTransition | type="push"
		//	"transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard? (actions=actionList? &
		//	sendActions=sendActionList?) destination=pushTransition | type="pop" "transition" (scoped+=[refAttr] ".")* name=ID
		//	params=transParams? "{" transGuard=guard? (actions=actionList? & sendActions=sendActionList?)
		//	destination=popTransition) "}";
		public ParserRule getRule() { return rule; }

		//{transition} comment=INTERPRETATION? (type="internal" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams?
		//"{" transGuard=guard? (actions=actionList? & sendActions=sendActionList?) destination=internalTransition |
		//type="simple" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard?
		//(actions=actionList? & sendActions=sendActionList?) destination=simpleTransition | type="push" "transition"
		//(scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard? (actions=actionList? &
		//sendActions=sendActionList?) destination=pushTransition | type="pop" "transition" (scoped+=[refAttr] ".")* name=ID
		//params=transParams? "{" transGuard=guard? (actions=actionList? & sendActions=sendActionList?)
		//destination=popTransition) "}"
		public Group getGroup() { return cGroup; }

		//{transition}
		public Action getTransitionAction_0() { return cTransitionAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//type="internal" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard?
		//(actions=actionList? & sendActions=sendActionList?) destination=internalTransition | type="simple" "transition"
		//(scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard? (actions=actionList? &
		//sendActions=sendActionList?) destination=simpleTransition | type="push" "transition" (scoped+=[refAttr] ".")* name=ID
		//params=transParams? "{" transGuard=guard? (actions=actionList? & sendActions=sendActionList?)
		//destination=pushTransition | type="pop" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{"
		//transGuard=guard? (actions=actionList? & sendActions=sendActionList?) destination=popTransition
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//type="internal" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard?
		//(actions=actionList? & sendActions=sendActionList?) destination=internalTransition
		public Group getGroup_2_0() { return cGroup_2_0; }

		//type="internal"
		public Assignment getTypeAssignment_2_0_0() { return cTypeAssignment_2_0_0; }

		//"internal"
		public Keyword getTypeInternalKeyword_2_0_0_0() { return cTypeInternalKeyword_2_0_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_0_1() { return cTransitionKeyword_2_0_1; }

		//(scoped+=[refAttr] ".")*
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }

		//scoped+=[refAttr]
		public Assignment getScopedAssignment_2_0_2_0() { return cScopedAssignment_2_0_2_0; }

		//[refAttr]
		public CrossReference getScopedRefAttrCrossReference_2_0_2_0_0() { return cScopedRefAttrCrossReference_2_0_2_0_0; }

		//ID
		public RuleCall getScopedRefAttrIDTerminalRuleCall_2_0_2_0_0_1() { return cScopedRefAttrIDTerminalRuleCall_2_0_2_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_2_0_2_1() { return cFullStopKeyword_2_0_2_1; }

		//name=ID
		public Assignment getNameAssignment_2_0_3() { return cNameAssignment_2_0_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0_3_0() { return cNameIDTerminalRuleCall_2_0_3_0; }

		//params=transParams?
		public Assignment getParamsAssignment_2_0_4() { return cParamsAssignment_2_0_4; }

		//transParams
		public RuleCall getParamsTransParamsParserRuleCall_2_0_4_0() { return cParamsTransParamsParserRuleCall_2_0_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0_5() { return cLeftCurlyBracketKeyword_2_0_5; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_0_6() { return cTransGuardAssignment_2_0_6; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_0_6_0() { return cTransGuardGuardParserRuleCall_2_0_6_0; }

		//actions=actionList? & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_0_7() { return cUnorderedGroup_2_0_7; }

		//actions=actionList?
		public Assignment getActionsAssignment_2_0_7_0() { return cActionsAssignment_2_0_7_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_0_7_0_0() { return cActionsActionListParserRuleCall_2_0_7_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_0_7_1() { return cSendActionsAssignment_2_0_7_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_0_7_1_0() { return cSendActionsSendActionListParserRuleCall_2_0_7_1_0; }

		//destination=internalTransition
		public Assignment getDestinationAssignment_2_0_8() { return cDestinationAssignment_2_0_8; }

		//internalTransition
		public RuleCall getDestinationInternalTransitionParserRuleCall_2_0_8_0() { return cDestinationInternalTransitionParserRuleCall_2_0_8_0; }

		//type="simple" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard?
		//(actions=actionList? & sendActions=sendActionList?) destination=simpleTransition
		public Group getGroup_2_1() { return cGroup_2_1; }

		//type="simple"
		public Assignment getTypeAssignment_2_1_0() { return cTypeAssignment_2_1_0; }

		//"simple"
		public Keyword getTypeSimpleKeyword_2_1_0_0() { return cTypeSimpleKeyword_2_1_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_1_1() { return cTransitionKeyword_2_1_1; }

		//(scoped+=[refAttr] ".")*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//scoped+=[refAttr]
		public Assignment getScopedAssignment_2_1_2_0() { return cScopedAssignment_2_1_2_0; }

		//[refAttr]
		public CrossReference getScopedRefAttrCrossReference_2_1_2_0_0() { return cScopedRefAttrCrossReference_2_1_2_0_0; }

		//ID
		public RuleCall getScopedRefAttrIDTerminalRuleCall_2_1_2_0_0_1() { return cScopedRefAttrIDTerminalRuleCall_2_1_2_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_2_1_2_1() { return cFullStopKeyword_2_1_2_1; }

		//name=ID
		public Assignment getNameAssignment_2_1_3() { return cNameAssignment_2_1_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_3_0() { return cNameIDTerminalRuleCall_2_1_3_0; }

		//params=transParams?
		public Assignment getParamsAssignment_2_1_4() { return cParamsAssignment_2_1_4; }

		//transParams
		public RuleCall getParamsTransParamsParserRuleCall_2_1_4_0() { return cParamsTransParamsParserRuleCall_2_1_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1_5() { return cLeftCurlyBracketKeyword_2_1_5; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_1_6() { return cTransGuardAssignment_2_1_6; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_1_6_0() { return cTransGuardGuardParserRuleCall_2_1_6_0; }

		//actions=actionList? & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_1_7() { return cUnorderedGroup_2_1_7; }

		//actions=actionList?
		public Assignment getActionsAssignment_2_1_7_0() { return cActionsAssignment_2_1_7_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_1_7_0_0() { return cActionsActionListParserRuleCall_2_1_7_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_1_7_1() { return cSendActionsAssignment_2_1_7_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_1_7_1_0() { return cSendActionsSendActionListParserRuleCall_2_1_7_1_0; }

		//destination=simpleTransition
		public Assignment getDestinationAssignment_2_1_8() { return cDestinationAssignment_2_1_8; }

		//simpleTransition
		public RuleCall getDestinationSimpleTransitionParserRuleCall_2_1_8_0() { return cDestinationSimpleTransitionParserRuleCall_2_1_8_0; }

		//type="push" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard? (actions=actionList?
		//& sendActions=sendActionList?) destination=pushTransition
		public Group getGroup_2_2() { return cGroup_2_2; }

		//type="push"
		public Assignment getTypeAssignment_2_2_0() { return cTypeAssignment_2_2_0; }

		//"push"
		public Keyword getTypePushKeyword_2_2_0_0() { return cTypePushKeyword_2_2_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_2_1() { return cTransitionKeyword_2_2_1; }

		//(scoped+=[refAttr] ".")*
		public Group getGroup_2_2_2() { return cGroup_2_2_2; }

		//scoped+=[refAttr]
		public Assignment getScopedAssignment_2_2_2_0() { return cScopedAssignment_2_2_2_0; }

		//[refAttr]
		public CrossReference getScopedRefAttrCrossReference_2_2_2_0_0() { return cScopedRefAttrCrossReference_2_2_2_0_0; }

		//ID
		public RuleCall getScopedRefAttrIDTerminalRuleCall_2_2_2_0_0_1() { return cScopedRefAttrIDTerminalRuleCall_2_2_2_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_2_2_2_1() { return cFullStopKeyword_2_2_2_1; }

		//name=ID
		public Assignment getNameAssignment_2_2_3() { return cNameAssignment_2_2_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_3_0() { return cNameIDTerminalRuleCall_2_2_3_0; }

		//params=transParams?
		public Assignment getParamsAssignment_2_2_4() { return cParamsAssignment_2_2_4; }

		//transParams
		public RuleCall getParamsTransParamsParserRuleCall_2_2_4_0() { return cParamsTransParamsParserRuleCall_2_2_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2_5() { return cLeftCurlyBracketKeyword_2_2_5; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_2_6() { return cTransGuardAssignment_2_2_6; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_2_6_0() { return cTransGuardGuardParserRuleCall_2_2_6_0; }

		//actions=actionList? & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_2_7() { return cUnorderedGroup_2_2_7; }

		//actions=actionList?
		public Assignment getActionsAssignment_2_2_7_0() { return cActionsAssignment_2_2_7_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_2_7_0_0() { return cActionsActionListParserRuleCall_2_2_7_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_2_7_1() { return cSendActionsAssignment_2_2_7_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_2_7_1_0() { return cSendActionsSendActionListParserRuleCall_2_2_7_1_0; }

		//destination=pushTransition
		public Assignment getDestinationAssignment_2_2_8() { return cDestinationAssignment_2_2_8; }

		//pushTransition
		public RuleCall getDestinationPushTransitionParserRuleCall_2_2_8_0() { return cDestinationPushTransitionParserRuleCall_2_2_8_0; }

		//type="pop" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard? (actions=actionList?
		//& sendActions=sendActionList?) destination=popTransition
		public Group getGroup_2_3() { return cGroup_2_3; }

		//type="pop"
		public Assignment getTypeAssignment_2_3_0() { return cTypeAssignment_2_3_0; }

		//"pop"
		public Keyword getTypePopKeyword_2_3_0_0() { return cTypePopKeyword_2_3_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_3_1() { return cTransitionKeyword_2_3_1; }

		//(scoped+=[refAttr] ".")*
		public Group getGroup_2_3_2() { return cGroup_2_3_2; }

		//scoped+=[refAttr]
		public Assignment getScopedAssignment_2_3_2_0() { return cScopedAssignment_2_3_2_0; }

		//[refAttr]
		public CrossReference getScopedRefAttrCrossReference_2_3_2_0_0() { return cScopedRefAttrCrossReference_2_3_2_0_0; }

		//ID
		public RuleCall getScopedRefAttrIDTerminalRuleCall_2_3_2_0_0_1() { return cScopedRefAttrIDTerminalRuleCall_2_3_2_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_2_3_2_1() { return cFullStopKeyword_2_3_2_1; }

		//name=ID
		public Assignment getNameAssignment_2_3_3() { return cNameAssignment_2_3_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_3_3_0() { return cNameIDTerminalRuleCall_2_3_3_0; }

		//params=transParams?
		public Assignment getParamsAssignment_2_3_4() { return cParamsAssignment_2_3_4; }

		//transParams
		public RuleCall getParamsTransParamsParserRuleCall_2_3_4_0() { return cParamsTransParamsParserRuleCall_2_3_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_3_5() { return cLeftCurlyBracketKeyword_2_3_5; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_3_6() { return cTransGuardAssignment_2_3_6; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_3_6_0() { return cTransGuardGuardParserRuleCall_2_3_6_0; }

		//actions=actionList? & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_3_7() { return cUnorderedGroup_2_3_7; }

		//actions=actionList?
		public Assignment getActionsAssignment_2_3_7_0() { return cActionsAssignment_2_3_7_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_3_7_0_0() { return cActionsActionListParserRuleCall_2_3_7_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_3_7_1() { return cSendActionsAssignment_2_3_7_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_3_7_1_0() { return cSendActionsSendActionListParserRuleCall_2_3_7_1_0; }

		//destination=popTransition
		public Assignment getDestinationAssignment_2_3_8() { return cDestinationAssignment_2_3_8; }

		//popTransition
		public RuleCall getDestinationPopTransitionParserRuleCall_2_3_8_0() { return cDestinationPopTransitionParserRuleCall_2_3_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class DefaultTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "defaultTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cDefaultKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Keyword cTypeInternalKeyword_2_0_0_0 = (Keyword)cTypeAssignment_2_0_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Assignment cTransGuardAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cTransGuardGuardParserRuleCall_2_0_3_0 = (RuleCall)cTransGuardAssignment_2_0_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_0_4 = (UnorderedGroup)cGroup_2_0.eContents().get(4);
		private final Assignment cActionsAssignment_2_0_4_0 = (Assignment)cUnorderedGroup_2_0_4.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_0_4_0_0 = (RuleCall)cActionsAssignment_2_0_4_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_0_4_1 = (Assignment)cUnorderedGroup_2_0_4.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_0_4_1_0 = (RuleCall)cSendActionsAssignment_2_0_4_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_0_5 = (Assignment)cGroup_2_0.eContents().get(5);
		private final RuleCall cDestinationInternalTransitionParserRuleCall_2_0_5_0 = (RuleCall)cDestinationAssignment_2_0_5.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cTypeAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final Keyword cTypeSimpleKeyword_2_1_0_0 = (Keyword)cTypeAssignment_2_1_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Assignment cTransGuardAssignment_2_1_3 = (Assignment)cGroup_2_1.eContents().get(3);
		private final RuleCall cTransGuardGuardParserRuleCall_2_1_3_0 = (RuleCall)cTransGuardAssignment_2_1_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1_4 = (UnorderedGroup)cGroup_2_1.eContents().get(4);
		private final Assignment cActionsAssignment_2_1_4_0 = (Assignment)cUnorderedGroup_2_1_4.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_1_4_0_0 = (RuleCall)cActionsAssignment_2_1_4_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_1_4_1 = (Assignment)cUnorderedGroup_2_1_4.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_1_4_1_0 = (RuleCall)cSendActionsAssignment_2_1_4_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_1_5 = (Assignment)cGroup_2_1.eContents().get(5);
		private final RuleCall cDestinationSimpleTransitionParserRuleCall_2_1_5_0 = (RuleCall)cDestinationAssignment_2_1_5.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Assignment cTypeAssignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final Keyword cTypePushKeyword_2_2_0_0 = (Keyword)cTypeAssignment_2_2_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Assignment cTransGuardAssignment_2_2_3 = (Assignment)cGroup_2_2.eContents().get(3);
		private final RuleCall cTransGuardGuardParserRuleCall_2_2_3_0 = (RuleCall)cTransGuardAssignment_2_2_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_2_4 = (UnorderedGroup)cGroup_2_2.eContents().get(4);
		private final Assignment cActionsAssignment_2_2_4_0 = (Assignment)cUnorderedGroup_2_2_4.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_2_4_0_0 = (RuleCall)cActionsAssignment_2_2_4_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_2_4_1 = (Assignment)cUnorderedGroup_2_2_4.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_2_4_1_0 = (RuleCall)cSendActionsAssignment_2_2_4_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_2_5 = (Assignment)cGroup_2_2.eContents().get(5);
		private final RuleCall cDestinationPushTransitionParserRuleCall_2_2_5_0 = (RuleCall)cDestinationAssignment_2_2_5.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Assignment cTypeAssignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final Keyword cTypePopKeyword_2_3_0_0 = (Keyword)cTypeAssignment_2_3_0.eContents().get(0);
		private final Keyword cTransitionKeyword_2_3_1 = (Keyword)cGroup_2_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		private final Assignment cTransGuardAssignment_2_3_3 = (Assignment)cGroup_2_3.eContents().get(3);
		private final RuleCall cTransGuardGuardParserRuleCall_2_3_3_0 = (RuleCall)cTransGuardAssignment_2_3_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_3_4 = (UnorderedGroup)cGroup_2_3.eContents().get(4);
		private final Assignment cActionsAssignment_2_3_4_0 = (Assignment)cUnorderedGroup_2_3_4.eContents().get(0);
		private final RuleCall cActionsActionListParserRuleCall_2_3_4_0_0 = (RuleCall)cActionsAssignment_2_3_4_0.eContents().get(0);
		private final Assignment cSendActionsAssignment_2_3_4_1 = (Assignment)cUnorderedGroup_2_3_4.eContents().get(1);
		private final RuleCall cSendActionsSendActionListParserRuleCall_2_3_4_1_0 = (RuleCall)cSendActionsAssignment_2_3_4_1.eContents().get(0);
		private final Assignment cDestinationAssignment_2_3_5 = (Assignment)cGroup_2_3.eContents().get(5);
		private final RuleCall cDestinationPopTransitionParserRuleCall_2_3_5_0 = (RuleCall)cDestinationAssignment_2_3_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//defaultTransition:
		//	comment=INTERPRETATION? "default" (type="internal" "transition" "{" transGuard=guard? (actions=actionList &
		//	sendActions=sendActionList?) destination=internalTransition | type="simple" "transition" "{" transGuard=guard?
		//	(actions=actionList & sendActions=sendActionList?) destination=simpleTransition | type="push" "transition" "{"
		//	transGuard=guard? (actions=actionList & sendActions=sendActionList?) destination=pushTransition | type="pop"
		//	"transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?) destination=popTransition) "}"
		//	";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "default" (type="internal" "transition" "{" transGuard=guard? (actions=actionList &
		//sendActions=sendActionList?) destination=internalTransition | type="simple" "transition" "{" transGuard=guard?
		//(actions=actionList & sendActions=sendActionList?) destination=simpleTransition | type="push" "transition" "{"
		//transGuard=guard? (actions=actionList & sendActions=sendActionList?) destination=pushTransition | type="pop"
		//"transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?) destination=popTransition) "}"
		//";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"default"
		public Keyword getDefaultKeyword_1() { return cDefaultKeyword_1; }

		//type="internal" "transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?)
		//destination=internalTransition | type="simple" "transition" "{" transGuard=guard? (actions=actionList &
		//sendActions=sendActionList?) destination=simpleTransition | type="push" "transition" "{" transGuard=guard?
		//(actions=actionList & sendActions=sendActionList?) destination=pushTransition | type="pop" "transition" "{"
		//transGuard=guard? (actions=actionList & sendActions=sendActionList?) destination=popTransition
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//type="internal" "transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?)
		//destination=internalTransition
		public Group getGroup_2_0() { return cGroup_2_0; }

		//type="internal"
		public Assignment getTypeAssignment_2_0_0() { return cTypeAssignment_2_0_0; }

		//"internal"
		public Keyword getTypeInternalKeyword_2_0_0_0() { return cTypeInternalKeyword_2_0_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_0_1() { return cTransitionKeyword_2_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0_2() { return cLeftCurlyBracketKeyword_2_0_2; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_0_3() { return cTransGuardAssignment_2_0_3; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_0_3_0() { return cTransGuardGuardParserRuleCall_2_0_3_0; }

		//actions=actionList & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_0_4() { return cUnorderedGroup_2_0_4; }

		//actions=actionList
		public Assignment getActionsAssignment_2_0_4_0() { return cActionsAssignment_2_0_4_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_0_4_0_0() { return cActionsActionListParserRuleCall_2_0_4_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_0_4_1() { return cSendActionsAssignment_2_0_4_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_0_4_1_0() { return cSendActionsSendActionListParserRuleCall_2_0_4_1_0; }

		//destination=internalTransition
		public Assignment getDestinationAssignment_2_0_5() { return cDestinationAssignment_2_0_5; }

		//internalTransition
		public RuleCall getDestinationInternalTransitionParserRuleCall_2_0_5_0() { return cDestinationInternalTransitionParserRuleCall_2_0_5_0; }

		//type="simple" "transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?)
		//destination=simpleTransition
		public Group getGroup_2_1() { return cGroup_2_1; }

		//type="simple"
		public Assignment getTypeAssignment_2_1_0() { return cTypeAssignment_2_1_0; }

		//"simple"
		public Keyword getTypeSimpleKeyword_2_1_0_0() { return cTypeSimpleKeyword_2_1_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_1_1() { return cTransitionKeyword_2_1_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1_2() { return cLeftCurlyBracketKeyword_2_1_2; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_1_3() { return cTransGuardAssignment_2_1_3; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_1_3_0() { return cTransGuardGuardParserRuleCall_2_1_3_0; }

		//actions=actionList & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_1_4() { return cUnorderedGroup_2_1_4; }

		//actions=actionList
		public Assignment getActionsAssignment_2_1_4_0() { return cActionsAssignment_2_1_4_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_1_4_0_0() { return cActionsActionListParserRuleCall_2_1_4_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_1_4_1() { return cSendActionsAssignment_2_1_4_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_1_4_1_0() { return cSendActionsSendActionListParserRuleCall_2_1_4_1_0; }

		//destination=simpleTransition
		public Assignment getDestinationAssignment_2_1_5() { return cDestinationAssignment_2_1_5; }

		//simpleTransition
		public RuleCall getDestinationSimpleTransitionParserRuleCall_2_1_5_0() { return cDestinationSimpleTransitionParserRuleCall_2_1_5_0; }

		//type="push" "transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?)
		//destination=pushTransition
		public Group getGroup_2_2() { return cGroup_2_2; }

		//type="push"
		public Assignment getTypeAssignment_2_2_0() { return cTypeAssignment_2_2_0; }

		//"push"
		public Keyword getTypePushKeyword_2_2_0_0() { return cTypePushKeyword_2_2_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_2_1() { return cTransitionKeyword_2_2_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2_2() { return cLeftCurlyBracketKeyword_2_2_2; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_2_3() { return cTransGuardAssignment_2_2_3; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_2_3_0() { return cTransGuardGuardParserRuleCall_2_2_3_0; }

		//actions=actionList & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_2_4() { return cUnorderedGroup_2_2_4; }

		//actions=actionList
		public Assignment getActionsAssignment_2_2_4_0() { return cActionsAssignment_2_2_4_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_2_4_0_0() { return cActionsActionListParserRuleCall_2_2_4_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_2_4_1() { return cSendActionsAssignment_2_2_4_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_2_4_1_0() { return cSendActionsSendActionListParserRuleCall_2_2_4_1_0; }

		//destination=pushTransition
		public Assignment getDestinationAssignment_2_2_5() { return cDestinationAssignment_2_2_5; }

		//pushTransition
		public RuleCall getDestinationPushTransitionParserRuleCall_2_2_5_0() { return cDestinationPushTransitionParserRuleCall_2_2_5_0; }

		//type="pop" "transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?)
		//destination=popTransition
		public Group getGroup_2_3() { return cGroup_2_3; }

		//type="pop"
		public Assignment getTypeAssignment_2_3_0() { return cTypeAssignment_2_3_0; }

		//"pop"
		public Keyword getTypePopKeyword_2_3_0_0() { return cTypePopKeyword_2_3_0_0; }

		//"transition"
		public Keyword getTransitionKeyword_2_3_1() { return cTransitionKeyword_2_3_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_3_2() { return cLeftCurlyBracketKeyword_2_3_2; }

		//transGuard=guard?
		public Assignment getTransGuardAssignment_2_3_3() { return cTransGuardAssignment_2_3_3; }

		//guard
		public RuleCall getTransGuardGuardParserRuleCall_2_3_3_0() { return cTransGuardGuardParserRuleCall_2_3_3_0; }

		//actions=actionList & sendActions=sendActionList?
		public UnorderedGroup getUnorderedGroup_2_3_4() { return cUnorderedGroup_2_3_4; }

		//actions=actionList
		public Assignment getActionsAssignment_2_3_4_0() { return cActionsAssignment_2_3_4_0; }

		//actionList
		public RuleCall getActionsActionListParserRuleCall_2_3_4_0_0() { return cActionsActionListParserRuleCall_2_3_4_0_0; }

		//sendActions=sendActionList?
		public Assignment getSendActionsAssignment_2_3_4_1() { return cSendActionsAssignment_2_3_4_1; }

		//sendActionList
		public RuleCall getSendActionsSendActionListParserRuleCall_2_3_4_1_0() { return cSendActionsSendActionListParserRuleCall_2_3_4_1_0; }

		//destination=popTransition
		public Assignment getDestinationAssignment_2_3_5() { return cDestinationAssignment_2_3_5; }

		//popTransition
		public RuleCall getDestinationPopTransitionParserRuleCall_2_3_5_0() { return cDestinationPopTransitionParserRuleCall_2_3_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }

		//";"?
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class InternalTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "internalTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInternalTransitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		
		//internalTransition:
		//	{internalTransition} comment=INTERPRETATION?;
		public ParserRule getRule() { return rule; }

		//{internalTransition} comment=INTERPRETATION?
		public Group getGroup() { return cGroup; }

		//{internalTransition}
		public Action getInternalTransitionAction_0() { return cInternalTransitionAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }
	}

	public class SimpleTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simpleTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cNextStateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNextStateNextStateParserRuleCall_1_0 = (RuleCall)cNextStateAssignment_1.eContents().get(0);
		
		//simpleTransition:
		//	comment=INTERPRETATION? nextState=nextState;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? nextState=nextState
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//nextState=nextState
		public Assignment getNextStateAssignment_1() { return cNextStateAssignment_1; }

		//nextState
		public RuleCall getNextStateNextStateParserRuleCall_1_0() { return cNextStateNextStateParserRuleCall_1_0; }
	}

	public class PushTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "pushTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cNextStateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNextStateNextStateParserRuleCall_1_0 = (RuleCall)cNextStateAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPoptoKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSimpleTransitionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSimpleTransitionSimpleTransitionParserRuleCall_2_1_0 = (RuleCall)cSimpleTransitionAssignment_2_1.eContents().get(0);
		
		//pushTransition:
		//	comment=INTERPRETATION? nextState=nextState ("popto" simpleTransition=simpleTransition)?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? nextState=nextState ("popto" simpleTransition=simpleTransition)?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//nextState=nextState
		public Assignment getNextStateAssignment_1() { return cNextStateAssignment_1; }

		//nextState
		public RuleCall getNextStateNextStateParserRuleCall_1_0() { return cNextStateNextStateParserRuleCall_1_0; }

		//("popto" simpleTransition=simpleTransition)?
		public Group getGroup_2() { return cGroup_2; }

		//"popto"
		public Keyword getPoptoKeyword_2_0() { return cPoptoKeyword_2_0; }

		//simpleTransition=simpleTransition
		public Assignment getSimpleTransitionAssignment_2_1() { return cSimpleTransitionAssignment_2_1; }

		//simpleTransition
		public RuleCall getSimpleTransitionSimpleTransitionParserRuleCall_2_1_0() { return cSimpleTransitionSimpleTransitionParserRuleCall_2_1_0; }
	}

	public class PopTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "popTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPopTransitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSecondaryKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSecondaryTransitionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSecondaryTransitionTransitionCrossReference_2_1_0 = (CrossReference)cSecondaryTransitionAssignment_2_1.eContents().get(0);
		private final RuleCall cSecondaryTransitionTransitionIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSecondaryTransitionTransitionCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Assignment cParamAssignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final RuleCall cParamGuardParamParserRuleCall_2_3_0_0 = (RuleCall)cParamAssignment_2_3_0.eContents().get(0);
		private final Group cGroup_2_3_1 = (Group)cGroup_2_3.eContents().get(1);
		private final Keyword cCommaKeyword_2_3_1_0 = (Keyword)cGroup_2_3_1.eContents().get(0);
		private final Assignment cParamAssignment_2_3_1_1 = (Assignment)cGroup_2_3_1.eContents().get(1);
		private final RuleCall cParamGuardParamParserRuleCall_2_3_1_1_0 = (RuleCall)cParamAssignment_2_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//popTransition:
		//	{popTransition} comment=INTERPRETATION? ("secondary" secondaryTransition=[transition] "(" (param+=guardParam (","
		//	param+=guardParam)*)? ")")? ";";
		public ParserRule getRule() { return rule; }

		//{popTransition} comment=INTERPRETATION? ("secondary" secondaryTransition=[transition] "(" (param+=guardParam (","
		//param+=guardParam)*)? ")")? ";"
		public Group getGroup() { return cGroup; }

		//{popTransition}
		public Action getPopTransitionAction_0() { return cPopTransitionAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//("secondary" secondaryTransition=[transition] "(" (param+=guardParam ("," param+=guardParam)*)? ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"secondary"
		public Keyword getSecondaryKeyword_2_0() { return cSecondaryKeyword_2_0; }

		//secondaryTransition=[transition]
		public Assignment getSecondaryTransitionAssignment_2_1() { return cSecondaryTransitionAssignment_2_1; }

		//[transition]
		public CrossReference getSecondaryTransitionTransitionCrossReference_2_1_0() { return cSecondaryTransitionTransitionCrossReference_2_1_0; }

		//ID
		public RuleCall getSecondaryTransitionTransitionIDTerminalRuleCall_2_1_0_1() { return cSecondaryTransitionTransitionIDTerminalRuleCall_2_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2() { return cLeftParenthesisKeyword_2_2; }

		//(param+=guardParam ("," param+=guardParam)*)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//param+=guardParam
		public Assignment getParamAssignment_2_3_0() { return cParamAssignment_2_3_0; }

		//guardParam
		public RuleCall getParamGuardParamParserRuleCall_2_3_0_0() { return cParamGuardParamParserRuleCall_2_3_0_0; }

		//("," param+=guardParam)*
		public Group getGroup_2_3_1() { return cGroup_2_3_1; }

		//","
		public Keyword getCommaKeyword_2_3_1_0() { return cCommaKeyword_2_3_1_0; }

		//param+=guardParam
		public Assignment getParamAssignment_2_3_1_1() { return cParamAssignment_2_3_1_1; }

		//guardParam
		public RuleCall getParamGuardParamParserRuleCall_2_3_1_1_0() { return cParamGuardParamParserRuleCall_2_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class NextStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nextState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNextStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cNextKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cFirstStateAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cFirstStateStateCrossReference_3_0_0 = (CrossReference)cFirstStateAssignment_3_0.eContents().get(0);
		private final RuleCall cFirstStateStateIDTerminalRuleCall_3_0_0_1 = (RuleCall)cFirstStateStateCrossReference_3_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Assignment cScopedAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final CrossReference cScopedStateCrossReference_3_2_0_0 = (CrossReference)cScopedAssignment_3_2_0.eContents().get(0);
		private final RuleCall cScopedStateIDTerminalRuleCall_3_2_0_0_1 = (RuleCall)cScopedStateCrossReference_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cNextStateAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cNextStateStateCrossReference_4_0 = (CrossReference)cNextStateAssignment_4.eContents().get(0);
		private final RuleCall cNextStateStateIDTerminalRuleCall_4_0_1 = (RuleCall)cNextStateStateCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//nextState:
		//	{nextState} comment=INTERPRETATION? ("->" | "next") (firstState=[state] "." (scoped+=[state] ".")*)? nextState=[state] // Validation rule - this can only be used with a simple or push transition
		//
		//	";";
		public ParserRule getRule() { return rule; }

		//{nextState} comment=INTERPRETATION? ("->" | "next") (firstState=[state] "." (scoped+=[state] ".")*)? nextState=[state] // Validation rule - this can only be used with a simple or push transition
		//
		//";"
		public Group getGroup() { return cGroup; }

		//{nextState}
		public Action getNextStateAction_0() { return cNextStateAction_0; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_1_0() { return cCommentINTERPRETATIONTerminalRuleCall_1_0; }

		//"->" | "next"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_0() { return cHyphenMinusGreaterThanSignKeyword_2_0; }

		//"next"
		public Keyword getNextKeyword_2_1() { return cNextKeyword_2_1; }

		//(firstState=[state] "." (scoped+=[state] ".")*)?
		public Group getGroup_3() { return cGroup_3; }

		//firstState=[state]
		public Assignment getFirstStateAssignment_3_0() { return cFirstStateAssignment_3_0; }

		//[state]
		public CrossReference getFirstStateStateCrossReference_3_0_0() { return cFirstStateStateCrossReference_3_0_0; }

		//ID
		public RuleCall getFirstStateStateIDTerminalRuleCall_3_0_0_1() { return cFirstStateStateIDTerminalRuleCall_3_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_3_1() { return cFullStopKeyword_3_1; }

		//(scoped+=[state] ".")*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//scoped+=[state]
		public Assignment getScopedAssignment_3_2_0() { return cScopedAssignment_3_2_0; }

		//[state]
		public CrossReference getScopedStateCrossReference_3_2_0_0() { return cScopedStateCrossReference_3_2_0_0; }

		//ID
		public RuleCall getScopedStateIDTerminalRuleCall_3_2_0_0_1() { return cScopedStateIDTerminalRuleCall_3_2_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_3_2_1() { return cFullStopKeyword_3_2_1; }

		//nextState=[state]
		public Assignment getNextStateAssignment_4() { return cNextStateAssignment_4; }

		//[state]
		public CrossReference getNextStateStateCrossReference_4_0() { return cNextStateStateCrossReference_4_0; }

		//ID
		public RuleCall getNextStateStateIDTerminalRuleCall_4_0_1() { return cNextStateStateIDTerminalRuleCall_4_0_1; }

		//// Validation rule - this can only be used with a simple or push transition
		//
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class GuardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "guard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cGuardKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cGuardActionAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cGuardActionGuardActionParserRuleCall_3_0_0_0 = (RuleCall)cGuardActionAssignment_3_0_0.eContents().get(0);
		private final Assignment cEquivAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final Alternatives cEquivAlternatives_3_0_1_0 = (Alternatives)cEquivAssignment_3_0_1.eContents().get(0);
		private final Keyword cEquivEqualsSignKeyword_3_0_1_0_0 = (Keyword)cEquivAlternatives_3_0_1_0.eContents().get(0);
		private final Keyword cEquivExclamationMarkEqualsSignKeyword_3_0_1_0_1 = (Keyword)cEquivAlternatives_3_0_1_0.eContents().get(1);
		private final Assignment cGuardActionAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cGuardActionGuardActionParserRuleCall_3_0_2_0 = (RuleCall)cGuardActionAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cGuardActionAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cGuardActionGuardActionParserRuleCall_3_1_0_0 = (RuleCall)cGuardActionAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Assignment cLogicalOperatorAssignment_3_1_1_0 = (Assignment)cGroup_3_1_1.eContents().get(0);
		private final Alternatives cLogicalOperatorAlternatives_3_1_1_0_0 = (Alternatives)cLogicalOperatorAssignment_3_1_1_0.eContents().get(0);
		private final Keyword cLogicalOperatorAmpersandAmpersandKeyword_3_1_1_0_0_0 = (Keyword)cLogicalOperatorAlternatives_3_1_1_0_0.eContents().get(0);
		private final Keyword cLogicalOperatorVerticalLineVerticalLineKeyword_3_1_1_0_0_1 = (Keyword)cLogicalOperatorAlternatives_3_1_1_0_0.eContents().get(1);
		private final Assignment cGuardActionAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cGuardActionGuardActionParserRuleCall_3_1_1_1_0 = (RuleCall)cGuardActionAssignment_3_1_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// SMC: guard : '[' expression ']';
		//
		//guard:
		//	comment=INTERPRETATION? "guard" ":" (guardAction+=guardAction equiv=("=" | "!=") guardAction+=guardAction |
		//	guardAction+=guardAction (logicalOperator+=("&&" | "||") guardAction+=guardAction)*) ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "guard" ":" (guardAction+=guardAction equiv=("=" | "!=") guardAction+=guardAction |
		//guardAction+=guardAction (logicalOperator+=("&&" | "||") guardAction+=guardAction)*) ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"guard"
		public Keyword getGuardKeyword_1() { return cGuardKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//guardAction+=guardAction equiv=("=" | "!=") guardAction+=guardAction | guardAction+=guardAction (logicalOperator+=("&&"
		//| "||") guardAction+=guardAction)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//guardAction+=guardAction equiv=("=" | "!=") guardAction+=guardAction
		public Group getGroup_3_0() { return cGroup_3_0; }

		//guardAction+=guardAction
		public Assignment getGuardActionAssignment_3_0_0() { return cGuardActionAssignment_3_0_0; }

		//guardAction
		public RuleCall getGuardActionGuardActionParserRuleCall_3_0_0_0() { return cGuardActionGuardActionParserRuleCall_3_0_0_0; }

		//equiv=("=" | "!=")
		public Assignment getEquivAssignment_3_0_1() { return cEquivAssignment_3_0_1; }

		//"=" | "!="
		public Alternatives getEquivAlternatives_3_0_1_0() { return cEquivAlternatives_3_0_1_0; }

		//"="
		public Keyword getEquivEqualsSignKeyword_3_0_1_0_0() { return cEquivEqualsSignKeyword_3_0_1_0_0; }

		//"!="
		public Keyword getEquivExclamationMarkEqualsSignKeyword_3_0_1_0_1() { return cEquivExclamationMarkEqualsSignKeyword_3_0_1_0_1; }

		//guardAction+=guardAction
		public Assignment getGuardActionAssignment_3_0_2() { return cGuardActionAssignment_3_0_2; }

		//guardAction
		public RuleCall getGuardActionGuardActionParserRuleCall_3_0_2_0() { return cGuardActionGuardActionParserRuleCall_3_0_2_0; }

		//guardAction+=guardAction (logicalOperator+=("&&" | "||") guardAction+=guardAction)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//guardAction+=guardAction
		public Assignment getGuardActionAssignment_3_1_0() { return cGuardActionAssignment_3_1_0; }

		//guardAction
		public RuleCall getGuardActionGuardActionParserRuleCall_3_1_0_0() { return cGuardActionGuardActionParserRuleCall_3_1_0_0; }

		//(logicalOperator+=("&&" | "||") guardAction+=guardAction)*
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//logicalOperator+=("&&" | "||")
		public Assignment getLogicalOperatorAssignment_3_1_1_0() { return cLogicalOperatorAssignment_3_1_1_0; }

		//"&&" | "||"
		public Alternatives getLogicalOperatorAlternatives_3_1_1_0_0() { return cLogicalOperatorAlternatives_3_1_1_0_0; }

		//"&&"
		public Keyword getLogicalOperatorAmpersandAmpersandKeyword_3_1_1_0_0_0() { return cLogicalOperatorAmpersandAmpersandKeyword_3_1_1_0_0_0; }

		//"||"
		public Keyword getLogicalOperatorVerticalLineVerticalLineKeyword_3_1_1_0_0_1() { return cLogicalOperatorVerticalLineVerticalLineKeyword_3_1_1_0_0_1; }

		//guardAction+=guardAction
		public Assignment getGuardActionAssignment_3_1_1_1() { return cGuardActionAssignment_3_1_1_1; }

		//guardAction
		public RuleCall getGuardActionGuardActionParserRuleCall_3_1_1_1_0() { return cGuardActionGuardActionParserRuleCall_3_1_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class GuardActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "guardAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNotAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNotExclamationMarkKeyword_0_0 = (Keyword)cNotAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamGuardParamParserRuleCall_3_0_0 = (RuleCall)cParamAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParamAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParamGuardParamParserRuleCall_3_1_1_0 = (RuleCall)cParamAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//guardAction:
		//	not="!"? name=ID "(" (param+=guardParam ("," param+=guardParam)*)? ")";
		public ParserRule getRule() { return rule; }

		//not="!"? name=ID "(" (param+=guardParam ("," param+=guardParam)*)? ")"
		public Group getGroup() { return cGroup; }

		//not="!"?
		public Assignment getNotAssignment_0() { return cNotAssignment_0; }

		//"!"
		public Keyword getNotExclamationMarkKeyword_0_0() { return cNotExclamationMarkKeyword_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(param+=guardParam ("," param+=guardParam)*)?
		public Group getGroup_3() { return cGroup_3; }

		//param+=guardParam
		public Assignment getParamAssignment_3_0() { return cParamAssignment_3_0; }

		//guardParam
		public RuleCall getParamGuardParamParserRuleCall_3_0_0() { return cParamGuardParamParserRuleCall_3_0_0; }

		//("," param+=guardParam)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//param+=guardParam
		public Assignment getParamAssignment_3_1_1() { return cParamAssignment_3_1_1; }

		//guardParam
		public RuleCall getParamGuardParamParserRuleCall_3_1_1_0() { return cParamGuardParamParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class GuardParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "guardParam");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cParameterAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cParameterTransParamCrossReference_0_0 = (CrossReference)cParameterAssignment_0.eContents().get(0);
		private final RuleCall cParameterTransParamIDTerminalRuleCall_0_0_1 = (RuleCall)cParameterTransParamCrossReference_0_0.eContents().get(1);
		private final Assignment cGuardConstAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cGuardConstSTRINGLITERALTerminalRuleCall_1_0 = (RuleCall)cGuardConstAssignment_1.eContents().get(0);
		
		//guardParam:
		//	parameter=[transParam] | guardConst=STRINGLITERAL;
		public ParserRule getRule() { return rule; }

		//parameter=[transParam] | guardConst=STRINGLITERAL
		public Alternatives getAlternatives() { return cAlternatives; }

		//parameter=[transParam]
		public Assignment getParameterAssignment_0() { return cParameterAssignment_0; }

		//[transParam]
		public CrossReference getParameterTransParamCrossReference_0_0() { return cParameterTransParamCrossReference_0_0; }

		//ID
		public RuleCall getParameterTransParamIDTerminalRuleCall_0_0_1() { return cParameterTransParamIDTerminalRuleCall_0_0_1; }

		//guardConst=STRINGLITERAL
		public Assignment getGuardConstAssignment_1() { return cGuardConstAssignment_1; }

		//STRINGLITERAL
		public RuleCall getGuardConstSTRINGLITERALTerminalRuleCall_1_0() { return cGuardConstSTRINGLITERALTerminalRuleCall_1_0; }
	}

	public class ActionListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "actionList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cActionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionsActionParserRuleCall_3_0 = (RuleCall)cActionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//actionList:
		//	{actionList} "actions" "{" actions+=action* "}";
		public ParserRule getRule() { return rule; }

		//{actionList} "actions" "{" actions+=action* "}"
		public Group getGroup() { return cGroup; }

		//{actionList}
		public Action getActionListAction_0() { return cActionListAction_0; }

		//"actions"
		public Keyword getActionsKeyword_1() { return cActionsKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//actions+=action*
		public Assignment getActionsAssignment_3() { return cActionsAssignment_3; }

		//action
		public RuleCall getActionsActionParserRuleCall_3_0() { return cActionsActionParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SendActionListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "sendActionList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSendActionListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSendKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cActionsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionsActionParserRuleCall_4_0 = (RuleCall)cActionsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//sendActionList:
		//	{sendActionList} "send" "actions" "{" actions+=action* "}";
		public ParserRule getRule() { return rule; }

		//{sendActionList} "send" "actions" "{" actions+=action* "}"
		public Group getGroup() { return cGroup; }

		//{sendActionList}
		public Action getSendActionListAction_0() { return cSendActionListAction_0; }

		//"send"
		public Keyword getSendKeyword_1() { return cSendKeyword_1; }

		//"actions"
		public Keyword getActionsKeyword_2() { return cActionsKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//actions+=action*
		public Assignment getActionsAssignment_4() { return cActionsAssignment_4; }

		//action
		public RuleCall getActionsActionParserRuleCall_4_0() { return cActionsActionParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameURIParserRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamGuardParamParserRuleCall_3_0_0 = (RuleCall)cParamAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParamAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParamGuardParamParserRuleCall_3_1_1_0 = (RuleCall)cParamAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//action:
		//	comment=INTERPRETATION? name=(ID | URI) "(" (param+=guardParam ("," param+=guardParam)*)? ")" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? name=(ID | URI) "(" (param+=guardParam ("," param+=guardParam)*)? ")" ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//name=(ID | URI)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID | URI
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }

		//URI
		public RuleCall getNameURIParserRuleCall_1_0_1() { return cNameURIParserRuleCall_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(param+=guardParam ("," param+=guardParam)*)?
		public Group getGroup_3() { return cGroup_3; }

		//param+=guardParam
		public Assignment getParamAssignment_3_0() { return cParamAssignment_3_0; }

		//guardParam
		public RuleCall getParamGuardParamParserRuleCall_3_0_0() { return cParamGuardParamParserRuleCall_3_0_0; }

		//("," param+=guardParam)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//param+=guardParam
		public Assignment getParamAssignment_3_1_1() { return cParamAssignment_3_1_1; }

		//guardParam
		public RuleCall getParamGuardParamParserRuleCall_3_1_1_0() { return cParamGuardParamParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class ConstDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "constDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cConstTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConstTypeSimpleNumericTypeParserRuleCall_1_0 = (RuleCall)cConstTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cConstValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cConstValueAlternatives_4_0 = (Alternatives)cConstValueAssignment_4.eContents().get(0);
		private final RuleCall cConstValueNonIntNumberTerminalRuleCall_4_0_0 = (RuleCall)cConstValueAlternatives_4_0.eContents().get(0);
		private final RuleCall cConstValueDECIMALTerminalRuleCall_4_0_1 = (RuleCall)cConstValueAlternatives_4_0.eContents().get(1);
		private final RuleCall cConstValueINTLITERALTerminalRuleCall_4_0_2 = (RuleCall)cConstValueAlternatives_4_0.eContents().get(2);
		private final Assignment cFieldUnitsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFieldUnitsUNITEnumRuleCall_5_0 = (RuleCall)cFieldUnitsAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//constDef:
		//	comment=INTERPRETATION? constType=simpleNumericType name=ID "=" constValue=(NonIntNumber | DECIMAL | INTLITERAL)
		//	fieldUnits=UNIT ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? constType=simpleNumericType name=ID "=" constValue=(NonIntNumber | DECIMAL | INTLITERAL)
		//fieldUnits=UNIT ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//constType=simpleNumericType
		public Assignment getConstTypeAssignment_1() { return cConstTypeAssignment_1; }

		//simpleNumericType
		public RuleCall getConstTypeSimpleNumericTypeParserRuleCall_1_0() { return cConstTypeSimpleNumericTypeParserRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }

		//constValue=(NonIntNumber | DECIMAL | INTLITERAL)
		public Assignment getConstValueAssignment_4() { return cConstValueAssignment_4; }

		//NonIntNumber | DECIMAL | INTLITERAL
		public Alternatives getConstValueAlternatives_4_0() { return cConstValueAlternatives_4_0; }

		//NonIntNumber
		public RuleCall getConstValueNonIntNumberTerminalRuleCall_4_0_0() { return cConstValueNonIntNumberTerminalRuleCall_4_0_0; }

		//DECIMAL
		public RuleCall getConstValueDECIMALTerminalRuleCall_4_0_1() { return cConstValueDECIMALTerminalRuleCall_4_0_1; }

		//INTLITERAL
		public RuleCall getConstValueINTLITERALTerminalRuleCall_4_0_2() { return cConstValueINTLITERALTerminalRuleCall_4_0_2; }

		//fieldUnits=UNIT
		public Assignment getFieldUnitsAssignment_5() { return cFieldUnitsAssignment_5; }

		//UNIT
		public RuleCall getFieldUnitsUNITEnumRuleCall_5_0() { return cFieldUnitsUNITEnumRuleCall_5_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class DeclaredTypeSetRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "declaredTypeSetRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cUsingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypesetKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportedNamespaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cImportedNamespaceDeclaredTypeSetCrossReference_3_0 = (CrossReference)cImportedNamespaceAssignment_3.eContents().get(0);
		private final RuleCall cImportedNamespaceDeclaredTypeSetURIParserRuleCall_3_0_1 = (RuleCall)cImportedNamespaceDeclaredTypeSetCrossReference_3_0.eContents().get(1);
		private final Keyword cAsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//declaredTypeSetRef:
		//	comment=INTERPRETATION? "using" "typeset" importedNamespace=[declaredTypeSet|URI] "as" name=ID? ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "using" "typeset" importedNamespace=[declaredTypeSet|URI] "as" name=ID? ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"using"
		public Keyword getUsingKeyword_1() { return cUsingKeyword_1; }

		//"typeset"
		public Keyword getTypesetKeyword_2() { return cTypesetKeyword_2; }

		//importedNamespace=[declaredTypeSet|URI]
		public Assignment getImportedNamespaceAssignment_3() { return cImportedNamespaceAssignment_3; }

		//[declaredTypeSet|URI]
		public CrossReference getImportedNamespaceDeclaredTypeSetCrossReference_3_0() { return cImportedNamespaceDeclaredTypeSetCrossReference_3_0; }

		//URI
		public RuleCall getImportedNamespaceDeclaredTypeSetURIParserRuleCall_3_0_1() { return cImportedNamespaceDeclaredTypeSetURIParserRuleCall_3_0_1; }

		//"as"
		public Keyword getAsKeyword_4() { return cAsKeyword_4; }

		//name=ID?
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class TypeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "typeDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMessageDefAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cMessageDefMessageDefParserRuleCall_0_0 = (RuleCall)cMessageDefAssignment_0.eContents().get(0);
		private final Assignment cArrayDefAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cArrayDefArrayDefParserRuleCall_1_0 = (RuleCall)cArrayDefAssignment_1.eContents().get(0);
		private final Assignment cRecordDefAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cRecordDefRecordDefParserRuleCall_2_0 = (RuleCall)cRecordDefAssignment_2.eContents().get(0);
		private final Assignment cListDefAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cListDefListDefParserRuleCall_3_0 = (RuleCall)cListDefAssignment_3.eContents().get(0);
		private final Assignment cVariantDefAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cVariantDefVariantDefParserRuleCall_4_0 = (RuleCall)cVariantDefAssignment_4.eContents().get(0);
		private final Assignment cSequenceDefAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cSequenceDefSequenceDefParserRuleCall_5_0 = (RuleCall)cSequenceDefAssignment_5.eContents().get(0);
		private final Assignment cFixedFieldDefAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cFixedFieldDefFixedFieldDefParserRuleCall_6_0 = (RuleCall)cFixedFieldDefAssignment_6.eContents().get(0);
		private final Assignment cVarFieldAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cVarFieldVarFieldParserRuleCall_7_0 = (RuleCall)cVarFieldAssignment_7.eContents().get(0);
		private final Assignment cBitfieldDefAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cBitfieldDefBitfieldDefParserRuleCall_8_0 = (RuleCall)cBitfieldDefAssignment_8.eContents().get(0);
		private final Assignment cFixedLenStringAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cFixedLenStringFixedLenStringParserRuleCall_9_0 = (RuleCall)cFixedLenStringAssignment_9.eContents().get(0);
		private final Assignment cVarLenStringAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final RuleCall cVarLenStringVarLenStringParserRuleCall_10_0 = (RuleCall)cVarLenStringAssignment_10.eContents().get(0);
		private final Assignment cVarLenFieldAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final RuleCall cVarLenFieldVarLenFieldParserRuleCall_11_0 = (RuleCall)cVarLenFieldAssignment_11.eContents().get(0);
		private final Assignment cVarFormatFieldAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final RuleCall cVarFormatFieldVarFormatFieldParserRuleCall_12_0 = (RuleCall)cVarFormatFieldAssignment_12.eContents().get(0);
		private final Assignment cHeaderDefAssignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final RuleCall cHeaderDefHeaderDefParserRuleCall_13_0 = (RuleCall)cHeaderDefAssignment_13.eContents().get(0);
		private final Assignment cBodyDefAssignment_14 = (Assignment)cAlternatives.eContents().get(14);
		private final RuleCall cBodyDefBodyDefParserRuleCall_14_0 = (RuleCall)cBodyDefAssignment_14.eContents().get(0);
		private final Assignment cFooterDefAssignment_15 = (Assignment)cAlternatives.eContents().get(15);
		private final RuleCall cFooterDefFooterDefParserRuleCall_15_0 = (RuleCall)cFooterDefAssignment_15.eContents().get(0);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//typeDef: // header, body, footer are one of these
		//
		//	messageDef=messageDef | arrayDef=arrayDef | recordDef=recordDef | listDef=listDef | variantDef=variantDef |
		//	sequenceDef=sequenceDef | fixedFieldDef=fixedFieldDef | varField=varField | bitfieldDef=bitfieldDef |
		//	fixedLenString=fixedLenString | varLenString=varLenString | varLenField=varLenField | varFormatField=varFormatField |
		//	headerDef=headerDef | bodyDef=bodyDef | footerDef=footerDef;
		public ParserRule getRule() { return rule; }

		//// header, body, footer are one of these
		//
		//messageDef=messageDef | arrayDef=arrayDef | recordDef=recordDef | listDef=listDef | variantDef=variantDef |
		//sequenceDef=sequenceDef | fixedFieldDef=fixedFieldDef | varField=varField | bitfieldDef=bitfieldDef |
		//fixedLenString=fixedLenString | varLenString=varLenString | varLenField=varLenField | varFormatField=varFormatField |
		//headerDef=headerDef | bodyDef=bodyDef | footerDef=footerDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//// header, body, footer are one of these
		//
		//messageDef=messageDef
		public Assignment getMessageDefAssignment_0() { return cMessageDefAssignment_0; }

		//messageDef
		public RuleCall getMessageDefMessageDefParserRuleCall_0_0() { return cMessageDefMessageDefParserRuleCall_0_0; }

		//arrayDef=arrayDef
		public Assignment getArrayDefAssignment_1() { return cArrayDefAssignment_1; }

		//arrayDef
		public RuleCall getArrayDefArrayDefParserRuleCall_1_0() { return cArrayDefArrayDefParserRuleCall_1_0; }

		//recordDef=recordDef
		public Assignment getRecordDefAssignment_2() { return cRecordDefAssignment_2; }

		//recordDef
		public RuleCall getRecordDefRecordDefParserRuleCall_2_0() { return cRecordDefRecordDefParserRuleCall_2_0; }

		//listDef=listDef
		public Assignment getListDefAssignment_3() { return cListDefAssignment_3; }

		//listDef
		public RuleCall getListDefListDefParserRuleCall_3_0() { return cListDefListDefParserRuleCall_3_0; }

		//variantDef=variantDef
		public Assignment getVariantDefAssignment_4() { return cVariantDefAssignment_4; }

		//variantDef
		public RuleCall getVariantDefVariantDefParserRuleCall_4_0() { return cVariantDefVariantDefParserRuleCall_4_0; }

		//sequenceDef=sequenceDef
		public Assignment getSequenceDefAssignment_5() { return cSequenceDefAssignment_5; }

		//sequenceDef
		public RuleCall getSequenceDefSequenceDefParserRuleCall_5_0() { return cSequenceDefSequenceDefParserRuleCall_5_0; }

		//fixedFieldDef=fixedFieldDef
		public Assignment getFixedFieldDefAssignment_6() { return cFixedFieldDefAssignment_6; }

		//fixedFieldDef
		public RuleCall getFixedFieldDefFixedFieldDefParserRuleCall_6_0() { return cFixedFieldDefFixedFieldDefParserRuleCall_6_0; }

		//varField=varField
		public Assignment getVarFieldAssignment_7() { return cVarFieldAssignment_7; }

		//varField
		public RuleCall getVarFieldVarFieldParserRuleCall_7_0() { return cVarFieldVarFieldParserRuleCall_7_0; }

		//bitfieldDef=bitfieldDef
		public Assignment getBitfieldDefAssignment_8() { return cBitfieldDefAssignment_8; }

		//bitfieldDef
		public RuleCall getBitfieldDefBitfieldDefParserRuleCall_8_0() { return cBitfieldDefBitfieldDefParserRuleCall_8_0; }

		//fixedLenString=fixedLenString
		public Assignment getFixedLenStringAssignment_9() { return cFixedLenStringAssignment_9; }

		//fixedLenString
		public RuleCall getFixedLenStringFixedLenStringParserRuleCall_9_0() { return cFixedLenStringFixedLenStringParserRuleCall_9_0; }

		//varLenString=varLenString
		public Assignment getVarLenStringAssignment_10() { return cVarLenStringAssignment_10; }

		//varLenString
		public RuleCall getVarLenStringVarLenStringParserRuleCall_10_0() { return cVarLenStringVarLenStringParserRuleCall_10_0; }

		//varLenField=varLenField
		public Assignment getVarLenFieldAssignment_11() { return cVarLenFieldAssignment_11; }

		//varLenField
		public RuleCall getVarLenFieldVarLenFieldParserRuleCall_11_0() { return cVarLenFieldVarLenFieldParserRuleCall_11_0; }

		//varFormatField=varFormatField
		public Assignment getVarFormatFieldAssignment_12() { return cVarFormatFieldAssignment_12; }

		//varFormatField
		public RuleCall getVarFormatFieldVarFormatFieldParserRuleCall_12_0() { return cVarFormatFieldVarFormatFieldParserRuleCall_12_0; }

		//headerDef=headerDef
		public Assignment getHeaderDefAssignment_13() { return cHeaderDefAssignment_13; }

		//headerDef
		public RuleCall getHeaderDefHeaderDefParserRuleCall_13_0() { return cHeaderDefHeaderDefParserRuleCall_13_0; }

		//bodyDef=bodyDef
		public Assignment getBodyDefAssignment_14() { return cBodyDefAssignment_14; }

		//bodyDef
		public RuleCall getBodyDefBodyDefParserRuleCall_14_0() { return cBodyDefBodyDefParserRuleCall_14_0; }

		//footerDef=footerDef
		public Assignment getFooterDefAssignment_15() { return cFooterDefAssignment_15; }

		//footerDef
		public RuleCall getFooterDefFooterDefParserRuleCall_15_0() { return cFooterDefFooterDefParserRuleCall_15_0; }
	}

	public class MessageDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "messageDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommandAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cCommandCommandKeyword_0_0 = (Keyword)cCommandAssignment_0.eContents().get(0);
		private final Keyword cMessageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMessageIDAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageIDMESSAGE_CODETerminalRuleCall_2_0 = (RuleCall)cMessageIDAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cDescrAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cDescrDescriptionParserRuleCall_5_0_0 = (RuleCall)cDescrAssignment_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cUnorderedGroup_5.eContents().get(1);
		private final Assignment cHeaderAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final RuleCall cHeaderHeaderDefParserRuleCall_5_1_0_0 = (RuleCall)cHeaderAssignment_5_1_0.eContents().get(0);
		private final Assignment cHeaderAssignment_5_1_1 = (Assignment)cAlternatives_5_1.eContents().get(1);
		private final RuleCall cHeaderHeaderRefParserRuleCall_5_1_1_0 = (RuleCall)cHeaderAssignment_5_1_1.eContents().get(0);
		private final Alternatives cAlternatives_5_2 = (Alternatives)cUnorderedGroup_5.eContents().get(2);
		private final Assignment cBodyAssignment_5_2_0 = (Assignment)cAlternatives_5_2.eContents().get(0);
		private final RuleCall cBodyBodyDefParserRuleCall_5_2_0_0 = (RuleCall)cBodyAssignment_5_2_0.eContents().get(0);
		private final Assignment cBodyAssignment_5_2_1 = (Assignment)cAlternatives_5_2.eContents().get(1);
		private final RuleCall cBodyBodyRefParserRuleCall_5_2_1_0 = (RuleCall)cBodyAssignment_5_2_1.eContents().get(0);
		private final Alternatives cAlternatives_5_3 = (Alternatives)cUnorderedGroup_5.eContents().get(3);
		private final Assignment cFooterAssignment_5_3_0 = (Assignment)cAlternatives_5_3.eContents().get(0);
		private final RuleCall cFooterFooterDefParserRuleCall_5_3_0_0 = (RuleCall)cFooterAssignment_5_3_0.eContents().get(0);
		private final Assignment cFooterAssignment_5_3_1 = (Assignment)cAlternatives_5_3.eContents().get(1);
		private final RuleCall cFooterFooterRefParserRuleCall_5_3_1_0 = (RuleCall)cFooterAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//messageDef:
		//	command="command"? "message" messageID=MESSAGE_CODE name=ID "{" (descr= // description is not optional for message_def in JSIDL 1.0
		//
		//	description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
		//	footer=footerRef)?) "}" ";"?;
		public ParserRule getRule() { return rule; }

		//command="command"? "message" messageID=MESSAGE_CODE name=ID "{" (descr= // description is not optional for message_def in JSIDL 1.0
		//
		//description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
		//footer=footerRef)?) "}" ";"?
		public Group getGroup() { return cGroup; }

		//command="command"?
		public Assignment getCommandAssignment_0() { return cCommandAssignment_0; }

		//"command"
		public Keyword getCommandCommandKeyword_0_0() { return cCommandCommandKeyword_0_0; }

		//"message"
		public Keyword getMessageKeyword_1() { return cMessageKeyword_1; }

		//messageID=MESSAGE_CODE
		public Assignment getMessageIDAssignment_2() { return cMessageIDAssignment_2; }

		//MESSAGE_CODE
		public RuleCall getMessageIDMESSAGE_CODETerminalRuleCall_2_0() { return cMessageIDMESSAGE_CODETerminalRuleCall_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//descr= // description is not optional for message_def in JSIDL 1.0
		//
		//description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
		//footer=footerRef)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }

		//descr= // description is not optional for message_def in JSIDL 1.0
		//
		//description
		public Assignment getDescrAssignment_5_0() { return cDescrAssignment_5_0; }

		//// description is not optional for message_def in JSIDL 1.0
		//
		//description
		public RuleCall getDescrDescriptionParserRuleCall_5_0_0() { return cDescrDescriptionParserRuleCall_5_0_0; }

		//(header=headerDef | header=headerRef)?
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }

		//header=headerDef
		public Assignment getHeaderAssignment_5_1_0() { return cHeaderAssignment_5_1_0; }

		//headerDef
		public RuleCall getHeaderHeaderDefParserRuleCall_5_1_0_0() { return cHeaderHeaderDefParserRuleCall_5_1_0_0; }

		//header=headerRef
		public Assignment getHeaderAssignment_5_1_1() { return cHeaderAssignment_5_1_1; }

		//headerRef
		public RuleCall getHeaderHeaderRefParserRuleCall_5_1_1_0() { return cHeaderHeaderRefParserRuleCall_5_1_1_0; }

		//body=bodyDef | body=bodyRef
		public Alternatives getAlternatives_5_2() { return cAlternatives_5_2; }

		//body=bodyDef
		public Assignment getBodyAssignment_5_2_0() { return cBodyAssignment_5_2_0; }

		//bodyDef
		public RuleCall getBodyBodyDefParserRuleCall_5_2_0_0() { return cBodyBodyDefParserRuleCall_5_2_0_0; }

		//body=bodyRef
		public Assignment getBodyAssignment_5_2_1() { return cBodyAssignment_5_2_1; }

		//bodyRef
		public RuleCall getBodyBodyRefParserRuleCall_5_2_1_0() { return cBodyBodyRefParserRuleCall_5_2_1_0; }

		//(footer=footerDef | footer=footerRef)?
		public Alternatives getAlternatives_5_3() { return cAlternatives_5_3; }

		//footer=footerDef
		public Assignment getFooterAssignment_5_3_0() { return cFooterAssignment_5_3_0; }

		//footerDef
		public RuleCall getFooterFooterDefParserRuleCall_5_3_0_0() { return cFooterFooterDefParserRuleCall_5_3_0_0; }

		//footer=footerRef
		public Assignment getFooterAssignment_5_3_1() { return cFooterAssignment_5_3_1; }

		//footerRef
		public RuleCall getFooterFooterRefParserRuleCall_5_3_1_0() { return cFooterFooterRefParserRuleCall_5_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//";"?
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class HeaderDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "headerDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cHeaderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cRecordListSequenceVariantAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cRecordListSequenceVariantContainerDefParserRuleCall_4_0_0 = (RuleCall)cRecordListSequenceVariantAssignment_4_0.eContents().get(0);
		private final Assignment cRecordListSequenceVariantAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cRecordListSequenceVariantContainerRefParserRuleCall_4_1_0 = (RuleCall)cRecordListSequenceVariantAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//headerDef:
		//	comment=INTERPRETATION? "header" name=ID "{" (recordListSequenceVariant=containerDef |
		//	recordListSequenceVariant=containerRef)? "}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "header" name=ID "{" (recordListSequenceVariant=containerDef |
		//recordListSequenceVariant=containerRef)? "}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"header"
		public Keyword getHeaderKeyword_1() { return cHeaderKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(recordListSequenceVariant=containerDef | recordListSequenceVariant=containerRef)?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//recordListSequenceVariant=containerDef
		public Assignment getRecordListSequenceVariantAssignment_4_0() { return cRecordListSequenceVariantAssignment_4_0; }

		//containerDef
		public RuleCall getRecordListSequenceVariantContainerDefParserRuleCall_4_0_0() { return cRecordListSequenceVariantContainerDefParserRuleCall_4_0_0; }

		//recordListSequenceVariant=containerRef
		public Assignment getRecordListSequenceVariantAssignment_4_1() { return cRecordListSequenceVariantAssignment_4_1; }

		//containerRef
		public RuleCall getRecordListSequenceVariantContainerRefParserRuleCall_4_1_0() { return cRecordListSequenceVariantContainerRefParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class BodyDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bodyDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cBodyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cRecordListSequenceVariantAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cRecordListSequenceVariantContainerDefParserRuleCall_4_0_0 = (RuleCall)cRecordListSequenceVariantAssignment_4_0.eContents().get(0);
		private final Assignment cRecordListSequenceVariantAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cRecordListSequenceVariantContainerRefParserRuleCall_4_1_0 = (RuleCall)cRecordListSequenceVariantAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//bodyDef:
		//	comment=INTERPRETATION? "body" name=ID "{" (recordListSequenceVariant=containerDef |
		//	recordListSequenceVariant=containerRef)? "}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "body" name=ID "{" (recordListSequenceVariant=containerDef |
		//recordListSequenceVariant=containerRef)? "}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"body"
		public Keyword getBodyKeyword_1() { return cBodyKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(recordListSequenceVariant=containerDef | recordListSequenceVariant=containerRef)?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//recordListSequenceVariant=containerDef
		public Assignment getRecordListSequenceVariantAssignment_4_0() { return cRecordListSequenceVariantAssignment_4_0; }

		//containerDef
		public RuleCall getRecordListSequenceVariantContainerDefParserRuleCall_4_0_0() { return cRecordListSequenceVariantContainerDefParserRuleCall_4_0_0; }

		//recordListSequenceVariant=containerRef
		public Assignment getRecordListSequenceVariantAssignment_4_1() { return cRecordListSequenceVariantAssignment_4_1; }

		//containerRef
		public RuleCall getRecordListSequenceVariantContainerRefParserRuleCall_4_1_0() { return cRecordListSequenceVariantContainerRefParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class FooterDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "footerDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cFooterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cRecordListSequenceVariantAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cRecordListSequenceVariantContainerDefParserRuleCall_4_0_0 = (RuleCall)cRecordListSequenceVariantAssignment_4_0.eContents().get(0);
		private final Assignment cRecordListSequenceVariantAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cRecordListSequenceVariantContainerRefParserRuleCall_4_1_0 = (RuleCall)cRecordListSequenceVariantAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//footerDef:
		//	comment=INTERPRETATION? "footer" name=ID "{" (recordListSequenceVariant=containerDef |
		//	recordListSequenceVariant=containerRef)? "}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "footer" name=ID "{" (recordListSequenceVariant=containerDef |
		//recordListSequenceVariant=containerRef)? "}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"footer"
		public Keyword getFooterKeyword_1() { return cFooterKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(recordListSequenceVariant=containerDef | recordListSequenceVariant=containerRef)?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//recordListSequenceVariant=containerDef
		public Assignment getRecordListSequenceVariantAssignment_4_0() { return cRecordListSequenceVariantAssignment_4_0; }

		//containerDef
		public RuleCall getRecordListSequenceVariantContainerDefParserRuleCall_4_0_0() { return cRecordListSequenceVariantContainerDefParserRuleCall_4_0_0; }

		//recordListSequenceVariant=containerRef
		public Assignment getRecordListSequenceVariantAssignment_4_1() { return cRecordListSequenceVariantAssignment_4_1; }

		//containerRef
		public RuleCall getRecordListSequenceVariantContainerRefParserRuleCall_4_1_0() { return cRecordListSequenceVariantContainerRefParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//";"?
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class HeaderRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "headerRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cHeaderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeRefAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeRefHeaderDefCrossReference_2_0_0 = (CrossReference)cTypeRefAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeRefHeaderDefIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeRefHeaderDefCrossReference_2_0_0.eContents().get(1);
		private final Assignment cScopedRefAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cScopedRefHeaderScopedRefParserRuleCall_2_1_0 = (RuleCall)cScopedRefAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//headerRef:
		//	comment=INTERPRETATION? "header" (typeRef=[headerDef] | scopedRef=headerScopedRef) name=ID ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "header" (typeRef=[headerDef] | scopedRef=headerScopedRef) name=ID ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"header"
		public Keyword getHeaderKeyword_1() { return cHeaderKeyword_1; }

		//typeRef=[headerDef] | scopedRef=headerScopedRef
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//typeRef=[headerDef]
		public Assignment getTypeRefAssignment_2_0() { return cTypeRefAssignment_2_0; }

		//[headerDef]
		public CrossReference getTypeRefHeaderDefCrossReference_2_0_0() { return cTypeRefHeaderDefCrossReference_2_0_0; }

		//ID
		public RuleCall getTypeRefHeaderDefIDTerminalRuleCall_2_0_0_1() { return cTypeRefHeaderDefIDTerminalRuleCall_2_0_0_1; }

		//scopedRef=headerScopedRef
		public Assignment getScopedRefAssignment_2_1() { return cScopedRefAssignment_2_1; }

		//headerScopedRef
		public RuleCall getScopedRefHeaderScopedRefParserRuleCall_2_1_0() { return cScopedRefHeaderScopedRefParserRuleCall_2_1_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class BodyRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bodyRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cBodyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeRefAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeRefBodyDefCrossReference_2_0_0 = (CrossReference)cTypeRefAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeRefBodyDefIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeRefBodyDefCrossReference_2_0_0.eContents().get(1);
		private final Assignment cScopedRefAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cScopedRefBodyScopedRefParserRuleCall_2_1_0 = (RuleCall)cScopedRefAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//bodyRef:
		//	comment=INTERPRETATION? "body" (typeRef=[bodyDef] | scopedRef=bodyScopedRef) name=ID ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "body" (typeRef=[bodyDef] | scopedRef=bodyScopedRef) name=ID ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"body"
		public Keyword getBodyKeyword_1() { return cBodyKeyword_1; }

		//typeRef=[bodyDef] | scopedRef=bodyScopedRef
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//typeRef=[bodyDef]
		public Assignment getTypeRefAssignment_2_0() { return cTypeRefAssignment_2_0; }

		//[bodyDef]
		public CrossReference getTypeRefBodyDefCrossReference_2_0_0() { return cTypeRefBodyDefCrossReference_2_0_0; }

		//ID
		public RuleCall getTypeRefBodyDefIDTerminalRuleCall_2_0_0_1() { return cTypeRefBodyDefIDTerminalRuleCall_2_0_0_1; }

		//scopedRef=bodyScopedRef
		public Assignment getScopedRefAssignment_2_1() { return cScopedRefAssignment_2_1; }

		//bodyScopedRef
		public RuleCall getScopedRefBodyScopedRefParserRuleCall_2_1_0() { return cScopedRefBodyScopedRefParserRuleCall_2_1_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class FooterRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "footerRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cFooterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeRefAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeRefFooterDefCrossReference_2_0_0 = (CrossReference)cTypeRefAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeRefFooterDefIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeRefFooterDefCrossReference_2_0_0.eContents().get(1);
		private final Assignment cScopedRefAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cScopedRefFooterScopedRefParserRuleCall_2_1_0 = (RuleCall)cScopedRefAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//footerRef:
		//	comment=INTERPRETATION? "footer" (typeRef=[footerDef] | scopedRef=footerScopedRef) name=ID ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "footer" (typeRef=[footerDef] | scopedRef=footerScopedRef) name=ID ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"footer"
		public Keyword getFooterKeyword_1() { return cFooterKeyword_1; }

		//typeRef=[footerDef] | scopedRef=footerScopedRef
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//typeRef=[footerDef]
		public Assignment getTypeRefAssignment_2_0() { return cTypeRefAssignment_2_0; }

		//[footerDef]
		public CrossReference getTypeRefFooterDefCrossReference_2_0_0() { return cTypeRefFooterDefCrossReference_2_0_0; }

		//ID
		public RuleCall getTypeRefFooterDefIDTerminalRuleCall_2_0_0_1() { return cTypeRefFooterDefIDTerminalRuleCall_2_0_0_1; }

		//scopedRef=footerScopedRef
		public Assignment getScopedRefAssignment_2_1() { return cScopedRefAssignment_2_1; }

		//footerScopedRef
		public RuleCall getScopedRefFooterScopedRefParserRuleCall_2_1_0() { return cScopedRefFooterScopedRefParserRuleCall_2_1_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class HeaderScopedRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "headerScopedRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cNameEObjectCrossReference_0_0 = (CrossReference)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameEObjectIDTerminalRuleCall_0_0_1 = (RuleCall)cNameEObjectCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cNamesEObjectCrossReference_1_1_0 = (CrossReference)cNamesAssignment_1_1.eContents().get(0);
		private final RuleCall cNamesEObjectIDTerminalRuleCall_1_1_0_1 = (RuleCall)cNamesEObjectCrossReference_1_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeHeaderDefCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeHeaderDefIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeHeaderDefCrossReference_3_0.eContents().get(1);
		
		//headerScopedRef:
		//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[headerDef];
		public ParserRule getRule() { return rule; }

		//name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[headerDef]
		public Group getGroup() { return cGroup; }

		//name=[ecore::EObject]
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//[ecore::EObject]
		public CrossReference getNameEObjectCrossReference_0_0() { return cNameEObjectCrossReference_0_0; }

		//ID
		public RuleCall getNameEObjectIDTerminalRuleCall_0_0_1() { return cNameEObjectIDTerminalRuleCall_0_0_1; }

		//("." names+=[ecore::EObject])*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//names+=[ecore::EObject]
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//[ecore::EObject]
		public CrossReference getNamesEObjectCrossReference_1_1_0() { return cNamesEObjectCrossReference_1_1_0; }

		//ID
		public RuleCall getNamesEObjectIDTerminalRuleCall_1_1_0_1() { return cNamesEObjectIDTerminalRuleCall_1_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//type=[headerDef]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[headerDef]
		public CrossReference getTypeHeaderDefCrossReference_3_0() { return cTypeHeaderDefCrossReference_3_0; }

		//ID
		public RuleCall getTypeHeaderDefIDTerminalRuleCall_3_0_1() { return cTypeHeaderDefIDTerminalRuleCall_3_0_1; }
	}

	public class BodyScopedRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bodyScopedRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cNameEObjectCrossReference_0_0 = (CrossReference)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameEObjectIDTerminalRuleCall_0_0_1 = (RuleCall)cNameEObjectCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cNamesEObjectCrossReference_1_1_0 = (CrossReference)cNamesAssignment_1_1.eContents().get(0);
		private final RuleCall cNamesEObjectIDTerminalRuleCall_1_1_0_1 = (RuleCall)cNamesEObjectCrossReference_1_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeBodyDefCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeBodyDefIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeBodyDefCrossReference_3_0.eContents().get(1);
		
		//bodyScopedRef:
		//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[bodyDef];
		public ParserRule getRule() { return rule; }

		//name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[bodyDef]
		public Group getGroup() { return cGroup; }

		//name=[ecore::EObject]
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//[ecore::EObject]
		public CrossReference getNameEObjectCrossReference_0_0() { return cNameEObjectCrossReference_0_0; }

		//ID
		public RuleCall getNameEObjectIDTerminalRuleCall_0_0_1() { return cNameEObjectIDTerminalRuleCall_0_0_1; }

		//("." names+=[ecore::EObject])*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//names+=[ecore::EObject]
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//[ecore::EObject]
		public CrossReference getNamesEObjectCrossReference_1_1_0() { return cNamesEObjectCrossReference_1_1_0; }

		//ID
		public RuleCall getNamesEObjectIDTerminalRuleCall_1_1_0_1() { return cNamesEObjectIDTerminalRuleCall_1_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//type=[bodyDef]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[bodyDef]
		public CrossReference getTypeBodyDefCrossReference_3_0() { return cTypeBodyDefCrossReference_3_0; }

		//ID
		public RuleCall getTypeBodyDefIDTerminalRuleCall_3_0_1() { return cTypeBodyDefIDTerminalRuleCall_3_0_1; }
	}

	public class FooterScopedRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "footerScopedRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cNameEObjectCrossReference_0_0 = (CrossReference)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameEObjectIDTerminalRuleCall_0_0_1 = (RuleCall)cNameEObjectCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cNamesEObjectCrossReference_1_1_0 = (CrossReference)cNamesAssignment_1_1.eContents().get(0);
		private final RuleCall cNamesEObjectIDTerminalRuleCall_1_1_0_1 = (RuleCall)cNamesEObjectCrossReference_1_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeFooterDefCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeFooterDefIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeFooterDefCrossReference_3_0.eContents().get(1);
		
		//footerScopedRef:
		//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[footerDef];
		public ParserRule getRule() { return rule; }

		//name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[footerDef]
		public Group getGroup() { return cGroup; }

		//name=[ecore::EObject]
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//[ecore::EObject]
		public CrossReference getNameEObjectCrossReference_0_0() { return cNameEObjectCrossReference_0_0; }

		//ID
		public RuleCall getNameEObjectIDTerminalRuleCall_0_0_1() { return cNameEObjectIDTerminalRuleCall_0_0_1; }

		//("." names+=[ecore::EObject])*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//names+=[ecore::EObject]
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//[ecore::EObject]
		public CrossReference getNamesEObjectCrossReference_1_1_0() { return cNamesEObjectCrossReference_1_1_0; }

		//ID
		public RuleCall getNamesEObjectIDTerminalRuleCall_1_1_0_1() { return cNamesEObjectIDTerminalRuleCall_1_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//type=[footerDef]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[footerDef]
		public CrossReference getTypeFooterDefCrossReference_3_0() { return cTypeFooterDefCrossReference_3_0; }

		//ID
		public RuleCall getTypeFooterDefIDTerminalRuleCall_3_0_1() { return cTypeFooterDefIDTerminalRuleCall_3_0_1; }
	}

	public class ContainerDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "containerDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRecordDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cListDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cVariantDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSequenceDefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//containerDef:
		//	recordDef | listDef | variantDef | sequenceDef;
		public ParserRule getRule() { return rule; }

		//recordDef | listDef | variantDef | sequenceDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//recordDef
		public RuleCall getRecordDefParserRuleCall_0() { return cRecordDefParserRuleCall_0; }

		//listDef
		public RuleCall getListDefParserRuleCall_1() { return cListDefParserRuleCall_1; }

		//variantDef
		public RuleCall getVariantDefParserRuleCall_2() { return cVariantDefParserRuleCall_2; }

		//sequenceDef
		public RuleCall getSequenceDefParserRuleCall_3() { return cSequenceDefParserRuleCall_3; }
	}

	public class ContainerRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "containerRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeContainerDefCrossReference_2_0_0 = (CrossReference)cTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeContainerDefIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeContainerDefCrossReference_2_0_0.eContents().get(1);
		private final Assignment cTypeScopedAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cTypeScopedScopedTypeParserRuleCall_2_1_0 = (RuleCall)cTypeScopedAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//containerRef:
		//	comment=INTERPRETATION? optional="optional"? (type=[containerDef] | typeScoped=scopedType) name=ID ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? (type=[containerDef] | typeScoped=scopedType) name=ID ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//type=[containerDef] | typeScoped=scopedType
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//type=[containerDef]
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }

		//[containerDef]
		public CrossReference getTypeContainerDefCrossReference_2_0_0() { return cTypeContainerDefCrossReference_2_0_0; }

		//ID
		public RuleCall getTypeContainerDefIDTerminalRuleCall_2_0_0_1() { return cTypeContainerDefIDTerminalRuleCall_2_0_0_1; }

		//typeScoped=scopedType
		public Assignment getTypeScopedAssignment_2_1() { return cTypeScopedAssignment_2_1; }

		//scopedType
		public RuleCall getTypeScopedScopedTypeParserRuleCall_2_1_0() { return cTypeScopedScopedTypeParserRuleCall_2_1_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class DeclaredEventDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "declaredEventDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cEventsetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeEventDefCrossReference_2_0_0 = (CrossReference)cTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeEventDefIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeEventDefCrossReference_2_0_0.eContents().get(1);
		private final Assignment cScopedEventTypeAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cScopedEventTypeScopedEventTypeParserRuleCall_2_1_0 = (RuleCall)cScopedEventTypeAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//declaredEventDef:
		//	comment=INTERPRETATION? "eventset" (type=[eventDef] | scopedEventType=scopedEventType) name=ID ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "eventset" (type=[eventDef] | scopedEventType=scopedEventType) name=ID ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"eventset"
		public Keyword getEventsetKeyword_1() { return cEventsetKeyword_1; }

		//type=[eventDef] | scopedEventType=scopedEventType
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//type=[eventDef]
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }

		//[eventDef]
		public CrossReference getTypeEventDefCrossReference_2_0_0() { return cTypeEventDefCrossReference_2_0_0; }

		//ID
		public RuleCall getTypeEventDefIDTerminalRuleCall_2_0_0_1() { return cTypeEventDefIDTerminalRuleCall_2_0_0_1; }

		//scopedEventType=scopedEventType
		public Assignment getScopedEventTypeAssignment_2_1() { return cScopedEventTypeAssignment_2_1; }

		//scopedEventType
		public RuleCall getScopedEventTypeScopedEventTypeParserRuleCall_2_1_0() { return cScopedEventTypeScopedEventTypeParserRuleCall_2_1_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"?
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class SimpleNumericTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simpleNumericType");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTypeAlternatives_0 = (Alternatives)cTypeAssignment.eContents().get(0);
		private final Keyword cTypeUint8Keyword_0_0 = (Keyword)cTypeAlternatives_0.eContents().get(0);
		private final Keyword cTypeUint16Keyword_0_1 = (Keyword)cTypeAlternatives_0.eContents().get(1);
		private final Keyword cTypeUint32Keyword_0_2 = (Keyword)cTypeAlternatives_0.eContents().get(2);
		private final Keyword cTypeUint64Keyword_0_3 = (Keyword)cTypeAlternatives_0.eContents().get(3);
		private final Keyword cTypeInt8Keyword_0_4 = (Keyword)cTypeAlternatives_0.eContents().get(4);
		private final Keyword cTypeInt16Keyword_0_5 = (Keyword)cTypeAlternatives_0.eContents().get(5);
		private final Keyword cTypeInt32Keyword_0_6 = (Keyword)cTypeAlternatives_0.eContents().get(6);
		private final Keyword cTypeInt64Keyword_0_7 = (Keyword)cTypeAlternatives_0.eContents().get(7);
		private final Keyword cTypeFloatKeyword_0_8 = (Keyword)cTypeAlternatives_0.eContents().get(8);
		private final Keyword cTypeDoubleKeyword_0_9 = (Keyword)cTypeAlternatives_0.eContents().get(9);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//simpleNumericType:
		//	type=("uint8" | "uint16" | "uint32" | "uint64" | "int8" | "int16" | "int32" | "int64" | "float" | "double");
		public ParserRule getRule() { return rule; }

		//type=("uint8" | "uint16" | "uint32" | "uint64" | "int8" | "int16" | "int32" | "int64" | "float" | "double")
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//"uint8" | "uint16" | "uint32" | "uint64" | "int8" | "int16" | "int32" | "int64" | "float" | "double"
		public Alternatives getTypeAlternatives_0() { return cTypeAlternatives_0; }

		//"uint8"
		public Keyword getTypeUint8Keyword_0_0() { return cTypeUint8Keyword_0_0; }

		//"uint16"
		public Keyword getTypeUint16Keyword_0_1() { return cTypeUint16Keyword_0_1; }

		//"uint32"
		public Keyword getTypeUint32Keyword_0_2() { return cTypeUint32Keyword_0_2; }

		//"uint64"
		public Keyword getTypeUint64Keyword_0_3() { return cTypeUint64Keyword_0_3; }

		//"int8"
		public Keyword getTypeInt8Keyword_0_4() { return cTypeInt8Keyword_0_4; }

		//"int16"
		public Keyword getTypeInt16Keyword_0_5() { return cTypeInt16Keyword_0_5; }

		//"int32"
		public Keyword getTypeInt32Keyword_0_6() { return cTypeInt32Keyword_0_6; }

		//"int64"
		public Keyword getTypeInt64Keyword_0_7() { return cTypeInt64Keyword_0_7; }

		//"float"
		public Keyword getTypeFloatKeyword_0_8() { return cTypeFloatKeyword_0_8; }

		//"double"
		public Keyword getTypeDoubleKeyword_0_9() { return cTypeDoubleKeyword_0_9; }
	}

	public class NumericLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "numericLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cINTLITERALTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cNonIntNumberTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//numericLiteral returns ecore::EString:
		//	"-"? (INTLITERAL | NonIntNumber);
		public ParserRule getRule() { return rule; }

		//"-"? (INTLITERAL | NonIntNumber)
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INTLITERAL | NonIntNumber
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//INTLITERAL
		public RuleCall getINTLITERALTerminalRuleCall_1_0() { return cINTLITERALTerminalRuleCall_1_0; }

		//NonIntNumber
		public RuleCall getNonIntNumberTerminalRuleCall_1_1() { return cNonIntNumberTerminalRuleCall_1_1; }
	}

	public class FixedLenStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fixedLenString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cStringKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cUpperLimAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cUpperLimINTLITERALTerminalRuleCall_5_0_0 = (RuleCall)cUpperLimAssignment_5_0.eContents().get(0);
		private final Assignment cUpperLimRefAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cUpperLimRefConstReferenceParserRuleCall_5_1_0 = (RuleCall)cUpperLimRefAssignment_5_1.eContents().get(0);
		private final Assignment cUpperLimScopedAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cUpperLimScopedScopedConstIdParserRuleCall_5_2_0 = (RuleCall)cUpperLimScopedAssignment_5_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////
		//
		//fixedLenString:
		//	comment=INTERPRETATION? optional="optional"? "string" name=ID "[" (upperLim=INTLITERAL | upperLimRef=constReference |
		//	upperLimScoped=scopedConstId) "]" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "string" name=ID "[" (upperLim=INTLITERAL | upperLimRef=constReference |
		//upperLimScoped=scopedConstId) "]" ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"string"
		public Keyword getStringKeyword_2() { return cStringKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//upperLim=INTLITERAL | upperLimRef=constReference | upperLimScoped=scopedConstId
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//upperLim=INTLITERAL
		public Assignment getUpperLimAssignment_5_0() { return cUpperLimAssignment_5_0; }

		//INTLITERAL
		public RuleCall getUpperLimINTLITERALTerminalRuleCall_5_0_0() { return cUpperLimINTLITERALTerminalRuleCall_5_0_0; }

		//upperLimRef=constReference
		public Assignment getUpperLimRefAssignment_5_1() { return cUpperLimRefAssignment_5_1; }

		//constReference
		public RuleCall getUpperLimRefConstReferenceParserRuleCall_5_1_0() { return cUpperLimRefConstReferenceParserRuleCall_5_1_0; }

		//upperLimScoped=scopedConstId
		public Assignment getUpperLimScopedAssignment_5_2() { return cUpperLimScopedAssignment_5_2; }

		//scopedConstId
		public RuleCall getUpperLimScopedScopedConstIdParserRuleCall_5_2_0() { return cUpperLimScopedScopedConstIdParserRuleCall_5_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class VarLenStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "varLenString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cVstringKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cLowerLimAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cLowerLimINTLITERALTerminalRuleCall_5_0_0 = (RuleCall)cLowerLimAssignment_5_0.eContents().get(0);
		private final Assignment cLowerLimRefAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cLowerLimRefConstReferenceParserRuleCall_5_1_0 = (RuleCall)cLowerLimRefAssignment_5_1.eContents().get(0);
		private final Assignment cLowerLimScopedAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cLowerLimScopedScopedConstIdParserRuleCall_5_2_0 = (RuleCall)cLowerLimScopedAssignment_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cUpperLimAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cUpperLimINTLITERALTerminalRuleCall_7_0_0 = (RuleCall)cUpperLimAssignment_7_0.eContents().get(0);
		private final Assignment cUpperLimRefAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cUpperLimRefConstReferenceParserRuleCall_7_1_0 = (RuleCall)cUpperLimRefAssignment_7_1.eContents().get(0);
		private final Assignment cUpperLimScopedAssignment_7_2 = (Assignment)cAlternatives_7.eContents().get(2);
		private final RuleCall cUpperLimScopedScopedConstIdParserRuleCall_7_2_0 = (RuleCall)cUpperLimScopedAssignment_7_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//varLenString:
		//	comment=INTERPRETATION? optional="optional"? "vstring" name=ID "[" (lowerLim=INTLITERAL | lowerLimRef=constReference |
		//	lowerLimScoped=scopedConstId) "," (upperLim=INTLITERAL | upperLimRef=constReference | upperLimScoped=scopedConstId)
		//	"]" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "vstring" name=ID "[" (lowerLim=INTLITERAL | lowerLimRef=constReference |
		//lowerLimScoped=scopedConstId) "," (upperLim=INTLITERAL | upperLimRef=constReference | upperLimScoped=scopedConstId) "]"
		//";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"vstring"
		public Keyword getVstringKeyword_2() { return cVstringKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//lowerLim=INTLITERAL | lowerLimRef=constReference | lowerLimScoped=scopedConstId
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//lowerLim=INTLITERAL
		public Assignment getLowerLimAssignment_5_0() { return cLowerLimAssignment_5_0; }

		//INTLITERAL
		public RuleCall getLowerLimINTLITERALTerminalRuleCall_5_0_0() { return cLowerLimINTLITERALTerminalRuleCall_5_0_0; }

		//lowerLimRef=constReference
		public Assignment getLowerLimRefAssignment_5_1() { return cLowerLimRefAssignment_5_1; }

		//constReference
		public RuleCall getLowerLimRefConstReferenceParserRuleCall_5_1_0() { return cLowerLimRefConstReferenceParserRuleCall_5_1_0; }

		//lowerLimScoped=scopedConstId
		public Assignment getLowerLimScopedAssignment_5_2() { return cLowerLimScopedAssignment_5_2; }

		//scopedConstId
		public RuleCall getLowerLimScopedScopedConstIdParserRuleCall_5_2_0() { return cLowerLimScopedScopedConstIdParserRuleCall_5_2_0; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//upperLim=INTLITERAL | upperLimRef=constReference | upperLimScoped=scopedConstId
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//upperLim=INTLITERAL
		public Assignment getUpperLimAssignment_7_0() { return cUpperLimAssignment_7_0; }

		//INTLITERAL
		public RuleCall getUpperLimINTLITERALTerminalRuleCall_7_0_0() { return cUpperLimINTLITERALTerminalRuleCall_7_0_0; }

		//upperLimRef=constReference
		public Assignment getUpperLimRefAssignment_7_1() { return cUpperLimRefAssignment_7_1; }

		//constReference
		public RuleCall getUpperLimRefConstReferenceParserRuleCall_7_1_0() { return cUpperLimRefConstReferenceParserRuleCall_7_1_0; }

		//upperLimScoped=scopedConstId
		public Assignment getUpperLimScopedAssignment_7_2() { return cUpperLimScopedAssignment_7_2; }

		//scopedConstId
		public RuleCall getUpperLimScopedScopedConstIdParserRuleCall_7_2_0() { return cUpperLimScopedScopedConstIdParserRuleCall_7_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }

		//";"
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}

	public class FixedFieldDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fixedFieldDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cFieldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cTypeSimpleNumericTypeParserRuleCall_3_0_0 = (RuleCall)cTypeAssignment_3_0.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Assignment cFieldUnitAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cFieldUnitUNITEnumRuleCall_3_2_0 = (RuleCall)cFieldUnitAssignment_3_2.eContents().get(0);
		private final Assignment cValueRangeAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final Alternatives cValueRangeAlternatives_3_3_0 = (Alternatives)cValueRangeAssignment_3_3.eContents().get(0);
		private final RuleCall cValueRangeScaledRangeDefParserRuleCall_3_3_0_0 = (RuleCall)cValueRangeAlternatives_3_3_0.eContents().get(0);
		private final RuleCall cValueRangeValueSetDefParserRuleCall_3_3_0_1 = (RuleCall)cValueRangeAlternatives_3_3_0.eContents().get(1);
		private final RuleCall cValueRangeValueRangeParserRuleCall_3_3_0_2 = (RuleCall)cValueRangeAlternatives_3_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//fixedFieldDef:
		//	comment=INTERPRETATION? optional="optional"? "field" (type=simpleNumericType name=ID fieldUnit=UNIT
		//	valueRange=(scaledRangeDef | valueSetDef | valueRange)?) ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "field" (type=simpleNumericType name=ID fieldUnit=UNIT
		//valueRange=(scaledRangeDef | valueSetDef | valueRange)?) ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"field"
		public Keyword getFieldKeyword_2() { return cFieldKeyword_2; }

		//type=simpleNumericType name=ID fieldUnit=UNIT valueRange=(scaledRangeDef | valueSetDef | valueRange)?
		public Group getGroup_3() { return cGroup_3; }

		//type=simpleNumericType
		public Assignment getTypeAssignment_3_0() { return cTypeAssignment_3_0; }

		//simpleNumericType
		public RuleCall getTypeSimpleNumericTypeParserRuleCall_3_0_0() { return cTypeSimpleNumericTypeParserRuleCall_3_0_0; }

		//name=ID
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_1_0() { return cNameIDTerminalRuleCall_3_1_0; }

		//fieldUnit=UNIT
		public Assignment getFieldUnitAssignment_3_2() { return cFieldUnitAssignment_3_2; }

		//UNIT
		public RuleCall getFieldUnitUNITEnumRuleCall_3_2_0() { return cFieldUnitUNITEnumRuleCall_3_2_0; }

		//valueRange=(scaledRangeDef | valueSetDef | valueRange)?
		public Assignment getValueRangeAssignment_3_3() { return cValueRangeAssignment_3_3; }

		//scaledRangeDef | valueSetDef | valueRange
		public Alternatives getValueRangeAlternatives_3_3_0() { return cValueRangeAlternatives_3_3_0; }

		//scaledRangeDef
		public RuleCall getValueRangeScaledRangeDefParserRuleCall_3_3_0_0() { return cValueRangeScaledRangeDefParserRuleCall_3_3_0_0; }

		//valueSetDef
		public RuleCall getValueRangeValueSetDefParserRuleCall_3_3_0_1() { return cValueRangeValueSetDefParserRuleCall_3_3_0_1; }

		//valueRange
		public RuleCall getValueRangeValueRangeParserRuleCall_3_3_0_2() { return cValueRangeValueRangeParserRuleCall_3_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class VarFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "varField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cVariable_fieldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVtagFieldAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVtagFieldTaggedUnitsEnumParserRuleCall_5_0 = (RuleCall)cVtagFieldAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////
		//
		//// Called a "variable_field" in JSIDL
		//
		//// Note: this version currently only supports one 'type_and_units_field'
		//
		//// TODO: Fix for 1..n
		//
		////
		//
		//varField:
		//	comment=INTERPRETATION? optional="optional"? "variable_field" name=ID "{" vtagField+=taggedUnitsEnum+ "}" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "variable_field" name=ID "{" vtagField+=taggedUnitsEnum+ "}" ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"variable_field"
		public Keyword getVariable_fieldKeyword_2() { return cVariable_fieldKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//vtagField+=taggedUnitsEnum+
		public Assignment getVtagFieldAssignment_5() { return cVtagFieldAssignment_5; }

		//taggedUnitsEnum
		public RuleCall getVtagFieldTaggedUnitsEnumParserRuleCall_5_0() { return cVtagFieldTaggedUnitsEnumParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class VarLenFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "varLenField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cVfieldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFieldFormatAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFieldFormatFIELD_FORMATEnumRuleCall_3_0 = (RuleCall)cFieldFormatAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cCountCommentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCountCommentINTERPRETATIONTerminalRuleCall_5_0 = (RuleCall)cCountCommentAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Assignment cLowerLimAssignment_6_1_0 = (Assignment)cAlternatives_6_1.eContents().get(0);
		private final RuleCall cLowerLimINTLITERALTerminalRuleCall_6_1_0_0 = (RuleCall)cLowerLimAssignment_6_1_0.eContents().get(0);
		private final Assignment cLowerLimRefAssignment_6_1_1 = (Assignment)cAlternatives_6_1.eContents().get(1);
		private final RuleCall cLowerLimRefConstReferenceParserRuleCall_6_1_1_0 = (RuleCall)cLowerLimRefAssignment_6_1_1.eContents().get(0);
		private final Assignment cLowerLimScopedAssignment_6_1_2 = (Assignment)cAlternatives_6_1.eContents().get(2);
		private final RuleCall cLowerLimScopedScopedConstIdParserRuleCall_6_1_2_0 = (RuleCall)cLowerLimScopedAssignment_6_1_2.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Alternatives cAlternatives_6_2_1 = (Alternatives)cGroup_6_2.eContents().get(1);
		private final Assignment cUpperLimAssignment_6_2_1_0 = (Assignment)cAlternatives_6_2_1.eContents().get(0);
		private final RuleCall cUpperLimINTLITERALTerminalRuleCall_6_2_1_0_0 = (RuleCall)cUpperLimAssignment_6_2_1_0.eContents().get(0);
		private final Assignment cUpperLimRefAssignment_6_2_1_1 = (Assignment)cAlternatives_6_2_1.eContents().get(1);
		private final RuleCall cUpperLimRefConstReferenceParserRuleCall_6_2_1_1_0 = (RuleCall)cUpperLimRefAssignment_6_2_1_1.eContents().get(0);
		private final Assignment cUpperLimScopedAssignment_6_2_1_2 = (Assignment)cAlternatives_6_2_1.eContents().get(2);
		private final RuleCall cUpperLimScopedScopedConstIdParserRuleCall_6_2_1_2_0 = (RuleCall)cUpperLimScopedAssignment_6_2_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//varLenField:
		//	comment=INTERPRETATION? optional="optional"? "vfield" fieldFormat=FIELD_FORMAT name=ID countComment=INTERPRETATION?
		//	("[" (lowerLim=INTLITERAL | lowerLimRef=constReference | lowerLimScoped=scopedConstId) ("," (upperLim=INTLITERAL |
		//	upperLimRef=constReference | upperLimScoped=scopedConstId))? "]")? ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "vfield" fieldFormat=FIELD_FORMAT name=ID countComment=INTERPRETATION? ("["
		//(lowerLim=INTLITERAL | lowerLimRef=constReference | lowerLimScoped=scopedConstId) ("," (upperLim=INTLITERAL |
		//upperLimRef=constReference | upperLimScoped=scopedConstId))? "]")? ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"vfield"
		public Keyword getVfieldKeyword_2() { return cVfieldKeyword_2; }

		//fieldFormat=FIELD_FORMAT
		public Assignment getFieldFormatAssignment_3() { return cFieldFormatAssignment_3; }

		//FIELD_FORMAT
		public RuleCall getFieldFormatFIELD_FORMATEnumRuleCall_3_0() { return cFieldFormatFIELD_FORMATEnumRuleCall_3_0; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//countComment=INTERPRETATION?
		public Assignment getCountCommentAssignment_5() { return cCountCommentAssignment_5; }

		//INTERPRETATION
		public RuleCall getCountCommentINTERPRETATIONTerminalRuleCall_5_0() { return cCountCommentINTERPRETATIONTerminalRuleCall_5_0; }

		//("[" (lowerLim=INTLITERAL | lowerLimRef=constReference | lowerLimScoped=scopedConstId) ("," (upperLim=INTLITERAL |
		//upperLimRef=constReference | upperLimScoped=scopedConstId))? "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }

		//lowerLim=INTLITERAL | lowerLimRef=constReference | lowerLimScoped=scopedConstId
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//lowerLim=INTLITERAL
		public Assignment getLowerLimAssignment_6_1_0() { return cLowerLimAssignment_6_1_0; }

		//INTLITERAL
		public RuleCall getLowerLimINTLITERALTerminalRuleCall_6_1_0_0() { return cLowerLimINTLITERALTerminalRuleCall_6_1_0_0; }

		//lowerLimRef=constReference
		public Assignment getLowerLimRefAssignment_6_1_1() { return cLowerLimRefAssignment_6_1_1; }

		//constReference
		public RuleCall getLowerLimRefConstReferenceParserRuleCall_6_1_1_0() { return cLowerLimRefConstReferenceParserRuleCall_6_1_1_0; }

		//lowerLimScoped=scopedConstId
		public Assignment getLowerLimScopedAssignment_6_1_2() { return cLowerLimScopedAssignment_6_1_2; }

		//scopedConstId
		public RuleCall getLowerLimScopedScopedConstIdParserRuleCall_6_1_2_0() { return cLowerLimScopedScopedConstIdParserRuleCall_6_1_2_0; }

		//("," (upperLim=INTLITERAL | upperLimRef=constReference | upperLimScoped=scopedConstId))?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//upperLim=INTLITERAL | upperLimRef=constReference | upperLimScoped=scopedConstId
		public Alternatives getAlternatives_6_2_1() { return cAlternatives_6_2_1; }

		//upperLim=INTLITERAL
		public Assignment getUpperLimAssignment_6_2_1_0() { return cUpperLimAssignment_6_2_1_0; }

		//INTLITERAL
		public RuleCall getUpperLimINTLITERALTerminalRuleCall_6_2_1_0_0() { return cUpperLimINTLITERALTerminalRuleCall_6_2_1_0_0; }

		//upperLimRef=constReference
		public Assignment getUpperLimRefAssignment_6_2_1_1() { return cUpperLimRefAssignment_6_2_1_1; }

		//constReference
		public RuleCall getUpperLimRefConstReferenceParserRuleCall_6_2_1_1_0() { return cUpperLimRefConstReferenceParserRuleCall_6_2_1_1_0; }

		//upperLimScoped=scopedConstId
		public Assignment getUpperLimScopedAssignment_6_2_1_2() { return cUpperLimScopedAssignment_6_2_1_2; }

		//scopedConstId
		public RuleCall getUpperLimScopedScopedConstIdParserRuleCall_6_2_1_2_0() { return cUpperLimScopedScopedConstIdParserRuleCall_6_2_1_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_3() { return cRightSquareBracketKeyword_6_3; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class TaggedUnitsEnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "taggedUnitsEnum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTagKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cConst_tagAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cConst_tagINTLITERALTerminalRuleCall_1_0_0 = (RuleCall)cConst_tagAssignment_1_0.eContents().get(0);
		private final Assignment cTagAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cTagConstReferenceParserRuleCall_1_1_0 = (RuleCall)cTagAssignment_1_1.eContents().get(0);
		private final Assignment cScopedTagAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cScopedTagScopedConstIdParserRuleCall_1_2_0 = (RuleCall)cScopedTagAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSimpleNumericTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cFieldUnitAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFieldUnitUNITEnumRuleCall_5_0 = (RuleCall)cFieldUnitAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cValueSetDefAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cValueSetDefValueSetDefParserRuleCall_6_0_0 = (RuleCall)cValueSetDefAssignment_6_0.eContents().get(0);
		private final Assignment cScaledRangeDefAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cScaledRangeDefScaledRangeDefParserRuleCall_6_1_0 = (RuleCall)cScaledRangeDefAssignment_6_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////
		//
		//taggedUnitsEnum:
		//	"tag" (const_tag=INTLITERAL | tag=constReference | scopedTag=scopedConstId) ":" name=ID type=simpleNumericType
		//	fieldUnit=UNIT (valueSetDef=valueSetDef | scaledRangeDef=scaledRangeDef)? ";";
		public ParserRule getRule() { return rule; }

		//"tag" (const_tag=INTLITERAL | tag=constReference | scopedTag=scopedConstId) ":" name=ID type=simpleNumericType
		//fieldUnit=UNIT (valueSetDef=valueSetDef | scaledRangeDef=scaledRangeDef)? ";"
		public Group getGroup() { return cGroup; }

		//"tag"
		public Keyword getTagKeyword_0() { return cTagKeyword_0; }

		//const_tag=INTLITERAL | tag=constReference | scopedTag=scopedConstId
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//const_tag=INTLITERAL
		public Assignment getConst_tagAssignment_1_0() { return cConst_tagAssignment_1_0; }

		//INTLITERAL
		public RuleCall getConst_tagINTLITERALTerminalRuleCall_1_0_0() { return cConst_tagINTLITERALTerminalRuleCall_1_0_0; }

		//tag=constReference
		public Assignment getTagAssignment_1_1() { return cTagAssignment_1_1; }

		//constReference
		public RuleCall getTagConstReferenceParserRuleCall_1_1_0() { return cTagConstReferenceParserRuleCall_1_1_0; }

		//scopedTag=scopedConstId
		public Assignment getScopedTagAssignment_1_2() { return cScopedTagAssignment_1_2; }

		//scopedConstId
		public RuleCall getScopedTagScopedConstIdParserRuleCall_1_2_0() { return cScopedTagScopedConstIdParserRuleCall_1_2_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//type=simpleNumericType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//simpleNumericType
		public RuleCall getTypeSimpleNumericTypeParserRuleCall_4_0() { return cTypeSimpleNumericTypeParserRuleCall_4_0; }

		//fieldUnit=UNIT
		public Assignment getFieldUnitAssignment_5() { return cFieldUnitAssignment_5; }

		//UNIT
		public RuleCall getFieldUnitUNITEnumRuleCall_5_0() { return cFieldUnitUNITEnumRuleCall_5_0; }

		//(valueSetDef=valueSetDef | scaledRangeDef=scaledRangeDef)?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//valueSetDef=valueSetDef
		public Assignment getValueSetDefAssignment_6_0() { return cValueSetDefAssignment_6_0; }

		//valueSetDef
		public RuleCall getValueSetDefValueSetDefParserRuleCall_6_0_0() { return cValueSetDefValueSetDefParserRuleCall_6_0_0; }

		//scaledRangeDef=scaledRangeDef
		public Assignment getScaledRangeDefAssignment_6_1() { return cScaledRangeDefAssignment_6_1; }

		//scaledRangeDef
		public RuleCall getScaledRangeDefScaledRangeDefParserRuleCall_6_1_0() { return cScaledRangeDefScaledRangeDefParserRuleCall_6_1_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class VarFormatFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "varFormatField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cVariable_format_fieldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cCountCommentAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cCountCommentINTERPRETATIONTerminalRuleCall_5_0_0 = (RuleCall)cCountCommentAssignment_5_0.eContents().get(0);
		private final Assignment cUnitsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Alternatives cUnitsAlternatives_5_1_0 = (Alternatives)cUnitsAssignment_5_1.eContents().get(0);
		private final Keyword cUnitsUint8Keyword_5_1_0_0 = (Keyword)cUnitsAlternatives_5_1_0.eContents().get(0);
		private final Keyword cUnitsUint16Keyword_5_1_0_1 = (Keyword)cUnitsAlternatives_5_1_0.eContents().get(1);
		private final Keyword cUnitsUint32Keyword_5_1_0_2 = (Keyword)cUnitsAlternatives_5_1_0.eContents().get(2);
		private final Keyword cTagKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cCountRangeAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cCountRangeValueRangeParserRuleCall_5_3_0 = (RuleCall)cCountRangeAssignment_5_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Assignment cFormatFieldAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFormatFieldFormatEnumDefParserRuleCall_6_0 = (RuleCall)cFormatFieldAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//////////////////////////////////////////////////////////////////////////
		//
		//varFormatField:
		//	comment=INTERPRETATION? optional="optional"? "variable_format_field" name=ID "{" (countComment=INTERPRETATION?
		//	units=("uint8" | "uint16" | "uint32") "tag" countRange=valueRange ";") formatField+=formatEnumDef+ "}" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "variable_format_field" name=ID "{" (countComment=INTERPRETATION?
		//units=("uint8" | "uint16" | "uint32") "tag" countRange=valueRange ";") formatField+=formatEnumDef+ "}" ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"variable_format_field"
		public Keyword getVariable_format_fieldKeyword_2() { return cVariable_format_fieldKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//countComment=INTERPRETATION? units=("uint8" | "uint16" | "uint32") "tag" countRange=valueRange ";"
		public Group getGroup_5() { return cGroup_5; }

		//countComment=INTERPRETATION?
		public Assignment getCountCommentAssignment_5_0() { return cCountCommentAssignment_5_0; }

		//INTERPRETATION
		public RuleCall getCountCommentINTERPRETATIONTerminalRuleCall_5_0_0() { return cCountCommentINTERPRETATIONTerminalRuleCall_5_0_0; }

		//units=("uint8" | "uint16" | "uint32")
		public Assignment getUnitsAssignment_5_1() { return cUnitsAssignment_5_1; }

		//"uint8" | "uint16" | "uint32"
		public Alternatives getUnitsAlternatives_5_1_0() { return cUnitsAlternatives_5_1_0; }

		//"uint8"
		public Keyword getUnitsUint8Keyword_5_1_0_0() { return cUnitsUint8Keyword_5_1_0_0; }

		//"uint16"
		public Keyword getUnitsUint16Keyword_5_1_0_1() { return cUnitsUint16Keyword_5_1_0_1; }

		//"uint32"
		public Keyword getUnitsUint32Keyword_5_1_0_2() { return cUnitsUint32Keyword_5_1_0_2; }

		//"tag"
		public Keyword getTagKeyword_5_2() { return cTagKeyword_5_2; }

		//countRange=valueRange
		public Assignment getCountRangeAssignment_5_3() { return cCountRangeAssignment_5_3; }

		//valueRange
		public RuleCall getCountRangeValueRangeParserRuleCall_5_3_0() { return cCountRangeValueRangeParserRuleCall_5_3_0; }

		//";"
		public Keyword getSemicolonKeyword_5_4() { return cSemicolonKeyword_5_4; }

		//formatField+=formatEnumDef+
		public Assignment getFormatFieldAssignment_6() { return cFormatFieldAssignment_6; }

		//formatEnumDef
		public RuleCall getFormatFieldFormatEnumDefParserRuleCall_6_0() { return cFormatFieldFormatEnumDefParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class FormatEnumDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "formatEnumDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTagKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cIndexAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cIndexINTLITERALTerminalRuleCall_1_0_0 = (RuleCall)cIndexAssignment_1_0.eContents().get(0);
		private final Assignment cConstRefAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cConstRefConstReferenceParserRuleCall_1_1_0 = (RuleCall)cConstRefAssignment_1_1.eContents().get(0);
		private final Assignment cConstScopedRefAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cConstScopedRefScopedConstIdParserRuleCall_1_2_0 = (RuleCall)cConstScopedRefAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cFieldFormatAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cFieldFormatFIELD_FORMATEnumRuleCall_3_0_0 = (RuleCall)cFieldFormatAssignment_3_0.eContents().get(0);
		private final Assignment cFieldFormatStrAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cFieldFormatStrSTRINGLITERALTerminalRuleCall_3_1_0 = (RuleCall)cFieldFormatStrAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//////////////////////////////////////////////////////////////////////////
		//
		//formatEnumDef:
		//	"tag" (index=INTLITERAL | constRef=constReference | constScopedRef=scopedConstId) ":" (fieldFormat=FIELD_FORMAT |
		//	fieldFormatStr=STRINGLITERAL) ";";
		public ParserRule getRule() { return rule; }

		//"tag" (index=INTLITERAL | constRef=constReference | constScopedRef=scopedConstId) ":" (fieldFormat=FIELD_FORMAT |
		//fieldFormatStr=STRINGLITERAL) ";"
		public Group getGroup() { return cGroup; }

		//"tag"
		public Keyword getTagKeyword_0() { return cTagKeyword_0; }

		//index=INTLITERAL | constRef=constReference | constScopedRef=scopedConstId
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//index=INTLITERAL
		public Assignment getIndexAssignment_1_0() { return cIndexAssignment_1_0; }

		//INTLITERAL
		public RuleCall getIndexINTLITERALTerminalRuleCall_1_0_0() { return cIndexINTLITERALTerminalRuleCall_1_0_0; }

		//constRef=constReference
		public Assignment getConstRefAssignment_1_1() { return cConstRefAssignment_1_1; }

		//constReference
		public RuleCall getConstRefConstReferenceParserRuleCall_1_1_0() { return cConstRefConstReferenceParserRuleCall_1_1_0; }

		//constScopedRef=scopedConstId
		public Assignment getConstScopedRefAssignment_1_2() { return cConstScopedRefAssignment_1_2; }

		//scopedConstId
		public RuleCall getConstScopedRefScopedConstIdParserRuleCall_1_2_0() { return cConstScopedRefScopedConstIdParserRuleCall_1_2_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//fieldFormat=FIELD_FORMAT | fieldFormatStr=STRINGLITERAL
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//fieldFormat=FIELD_FORMAT
		public Assignment getFieldFormatAssignment_3_0() { return cFieldFormatAssignment_3_0; }

		//FIELD_FORMAT
		public RuleCall getFieldFormatFIELD_FORMATEnumRuleCall_3_0_0() { return cFieldFormatFIELD_FORMATEnumRuleCall_3_0_0; }

		//fieldFormatStr=STRINGLITERAL
		public Assignment getFieldFormatStrAssignment_3_1() { return cFieldFormatStrAssignment_3_1; }

		//STRINGLITERAL
		public RuleCall getFieldFormatStrSTRINGLITERALTerminalRuleCall_3_1_0() { return cFieldFormatStrSTRINGLITERALTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ValueSetDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "valueSetDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValueSetDefAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Alternatives cValueAlternatives_2_0_0 = (Alternatives)cValueAssignment_2_0.eContents().get(0);
		private final RuleCall cValueValueSpecParserRuleCall_2_0_0_0 = (RuleCall)cValueAlternatives_2_0_0.eContents().get(0);
		private final RuleCall cValueValueRangeParserRuleCall_2_0_0_1 = (RuleCall)cValueAlternatives_2_0_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOffsetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cOffsetOffsetKeyword_4_0 = (Keyword)cOffsetAssignment_4.eContents().get(0);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//valueSetDef:
		//	{valueSetDef} "{" (value+=(valueSpec | valueRange) ";")+ "}" offset="offset"?;
		public ParserRule getRule() { return rule; }

		//{valueSetDef} "{" (value+=(valueSpec | valueRange) ";")+ "}" offset="offset"?
		public Group getGroup() { return cGroup; }

		//{valueSetDef}
		public Action getValueSetDefAction_0() { return cValueSetDefAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(value+=(valueSpec | valueRange) ";")+
		public Group getGroup_2() { return cGroup_2; }

		//value+=(valueSpec | valueRange)
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }

		//valueSpec | valueRange
		public Alternatives getValueAlternatives_2_0_0() { return cValueAlternatives_2_0_0; }

		//valueSpec
		public RuleCall getValueValueSpecParserRuleCall_2_0_0_0() { return cValueValueSpecParserRuleCall_2_0_0_0; }

		//valueRange
		public RuleCall getValueValueRangeParserRuleCall_2_0_0_1() { return cValueValueRangeParserRuleCall_2_0_0_1; }

		//";"
		public Keyword getSemicolonKeyword_2_1() { return cSemicolonKeyword_2_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }

		//offset="offset"?
		public Assignment getOffsetAssignment_4() { return cOffsetAssignment_4; }

		//"offset"
		public Keyword getOffsetOffsetKeyword_4_0() { return cOffsetOffsetKeyword_4_0; }
	}

	public class BitfieldDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bitfieldDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cBit_fieldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTypeAlternatives_3_0 = (Alternatives)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeUint8Keyword_3_0_0 = (Keyword)cTypeAlternatives_3_0.eContents().get(0);
		private final Keyword cTypeUint16Keyword_3_0_1 = (Keyword)cTypeAlternatives_3_0.eContents().get(1);
		private final Keyword cTypeUint32Keyword_3_0_2 = (Keyword)cTypeAlternatives_3_0.eContents().get(2);
		private final Keyword cTypeUint64Keyword_3_0_3 = (Keyword)cTypeAlternatives_3_0.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSubFieldAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSubFieldSubFieldParserRuleCall_6_0 = (RuleCall)cSubFieldAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		////////////////////////////////////////////////////////////////////////////////
		//
		//bitfieldDef:
		//	comment=INTERPRETATION? optional="optional"? "bit_field" type=("uint8" | "uint16" | "uint32" | "uint64") name=ID "{"
		//	subField+=subField* "}" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "bit_field" type=("uint8" | "uint16" | "uint32" | "uint64") name=ID "{"
		//subField+=subField* "}" ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"bit_field"
		public Keyword getBit_fieldKeyword_2() { return cBit_fieldKeyword_2; }

		//type=("uint8" | "uint16" | "uint32" | "uint64")
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//"uint8" | "uint16" | "uint32" | "uint64"
		public Alternatives getTypeAlternatives_3_0() { return cTypeAlternatives_3_0; }

		//"uint8"
		public Keyword getTypeUint8Keyword_3_0_0() { return cTypeUint8Keyword_3_0_0; }

		//"uint16"
		public Keyword getTypeUint16Keyword_3_0_1() { return cTypeUint16Keyword_3_0_1; }

		//"uint32"
		public Keyword getTypeUint32Keyword_3_0_2() { return cTypeUint32Keyword_3_0_2; }

		//"uint64"
		public Keyword getTypeUint64Keyword_3_0_3() { return cTypeUint64Keyword_3_0_3; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//subField+=subField*
		public Assignment getSubFieldAssignment_6() { return cSubFieldAssignment_6; }

		//subField
		public RuleCall getSubFieldSubFieldParserRuleCall_6_0() { return cSubFieldSubFieldParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class ValueRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "valueRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cLowerLimit_typeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cLowerLimit_typeAlternatives_1_0 = (Alternatives)cLowerLimit_typeAssignment_1.eContents().get(0);
		private final Keyword cLowerLimit_typeLeftParenthesisKeyword_1_0_0 = (Keyword)cLowerLimit_typeAlternatives_1_0.eContents().get(0);
		private final Keyword cLowerLimit_typeLeftSquareBracketKeyword_1_0_1 = (Keyword)cLowerLimit_typeAlternatives_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cLowerLimAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cLowerLimNumericLiteralParserRuleCall_2_0_0 = (RuleCall)cLowerLimAssignment_2_0.eContents().get(0);
		private final Assignment cLowerLimRefAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cLowerLimRefConstReferenceParserRuleCall_2_1_0 = (RuleCall)cLowerLimRefAssignment_2_1.eContents().get(0);
		private final Assignment cLowerLimScopedAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cLowerLimScopedScopedConstIdParserRuleCall_2_2_0 = (RuleCall)cLowerLimScopedAssignment_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cUpperLimAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cUpperLimNumericLiteralParserRuleCall_4_0_0 = (RuleCall)cUpperLimAssignment_4_0.eContents().get(0);
		private final Assignment cUpperLimRefAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cUpperLimRefConstReferenceParserRuleCall_4_1_0 = (RuleCall)cUpperLimRefAssignment_4_1.eContents().get(0);
		private final Assignment cUpperLimScopedAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cUpperLimScopedScopedConstIdParserRuleCall_4_2_0 = (RuleCall)cUpperLimScopedAssignment_4_2.eContents().get(0);
		private final Assignment cUpperLimit_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Alternatives cUpperLimit_typeAlternatives_5_0 = (Alternatives)cUpperLimit_typeAssignment_5.eContents().get(0);
		private final Keyword cUpperLimit_typeRightParenthesisKeyword_5_0_0 = (Keyword)cUpperLimit_typeAlternatives_5_0.eContents().get(0);
		private final Keyword cUpperLimit_typeRightSquareBracketKeyword_5_0_1 = (Keyword)cUpperLimit_typeAlternatives_5_0.eContents().get(1);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//valueRange:
		//	comment=INTERPRETATION? lowerLimit_type=("(" | "[") (lowerLim=numericLiteral | lowerLimRef=constReference |
		//	lowerLimScoped=scopedConstId) "," (upperLim=numericLiteral | upperLimRef=constReference |
		//	upperLimScoped=scopedConstId) upperLimit_type=(")" | "]");
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? lowerLimit_type=("(" | "[") (lowerLim=numericLiteral | lowerLimRef=constReference |
		//lowerLimScoped=scopedConstId) "," (upperLim=numericLiteral | upperLimRef=constReference | upperLimScoped=scopedConstId)
		//upperLimit_type=(")" | "]")
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//lowerLimit_type=("(" | "[")
		public Assignment getLowerLimit_typeAssignment_1() { return cLowerLimit_typeAssignment_1; }

		//"(" | "["
		public Alternatives getLowerLimit_typeAlternatives_1_0() { return cLowerLimit_typeAlternatives_1_0; }

		//"("
		public Keyword getLowerLimit_typeLeftParenthesisKeyword_1_0_0() { return cLowerLimit_typeLeftParenthesisKeyword_1_0_0; }

		//"["
		public Keyword getLowerLimit_typeLeftSquareBracketKeyword_1_0_1() { return cLowerLimit_typeLeftSquareBracketKeyword_1_0_1; }

		//lowerLim=numericLiteral | lowerLimRef=constReference | lowerLimScoped=scopedConstId
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//lowerLim=numericLiteral
		public Assignment getLowerLimAssignment_2_0() { return cLowerLimAssignment_2_0; }

		//numericLiteral
		public RuleCall getLowerLimNumericLiteralParserRuleCall_2_0_0() { return cLowerLimNumericLiteralParserRuleCall_2_0_0; }

		//lowerLimRef=constReference
		public Assignment getLowerLimRefAssignment_2_1() { return cLowerLimRefAssignment_2_1; }

		//constReference
		public RuleCall getLowerLimRefConstReferenceParserRuleCall_2_1_0() { return cLowerLimRefConstReferenceParserRuleCall_2_1_0; }

		//lowerLimScoped=scopedConstId
		public Assignment getLowerLimScopedAssignment_2_2() { return cLowerLimScopedAssignment_2_2; }

		//scopedConstId
		public RuleCall getLowerLimScopedScopedConstIdParserRuleCall_2_2_0() { return cLowerLimScopedScopedConstIdParserRuleCall_2_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//upperLim=numericLiteral | upperLimRef=constReference | upperLimScoped=scopedConstId
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//upperLim=numericLiteral
		public Assignment getUpperLimAssignment_4_0() { return cUpperLimAssignment_4_0; }

		//numericLiteral
		public RuleCall getUpperLimNumericLiteralParserRuleCall_4_0_0() { return cUpperLimNumericLiteralParserRuleCall_4_0_0; }

		//upperLimRef=constReference
		public Assignment getUpperLimRefAssignment_4_1() { return cUpperLimRefAssignment_4_1; }

		//constReference
		public RuleCall getUpperLimRefConstReferenceParserRuleCall_4_1_0() { return cUpperLimRefConstReferenceParserRuleCall_4_1_0; }

		//upperLimScoped=scopedConstId
		public Assignment getUpperLimScopedAssignment_4_2() { return cUpperLimScopedAssignment_4_2; }

		//scopedConstId
		public RuleCall getUpperLimScopedScopedConstIdParserRuleCall_4_2_0() { return cUpperLimScopedScopedConstIdParserRuleCall_4_2_0; }

		//upperLimit_type=(")" | "]")
		public Assignment getUpperLimit_typeAssignment_5() { return cUpperLimit_typeAssignment_5; }

		//")" | "]"
		public Alternatives getUpperLimit_typeAlternatives_5_0() { return cUpperLimit_typeAlternatives_5_0; }

		//")"
		public Keyword getUpperLimit_typeRightParenthesisKeyword_5_0_0() { return cUpperLimit_typeRightParenthesisKeyword_5_0_0; }

		//"]"
		public Keyword getUpperLimit_typeRightSquareBracketKeyword_5_0_1() { return cUpperLimit_typeRightSquareBracketKeyword_5_0_1; }
	}

	public class ValueSpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "valueSpec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGLITERALTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueINTLITERALTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//valueSpec:
		//	comment=INTERPRETATION? name=STRINGLITERAL "=" value=INTLITERAL;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? name=STRINGLITERAL "=" value=INTLITERAL
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//name=STRINGLITERAL
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRINGLITERAL
		public RuleCall getNameSTRINGLITERALTerminalRuleCall_1_0() { return cNameSTRINGLITERALTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=INTLITERAL
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//INTLITERAL
		public RuleCall getValueINTLITERALTerminalRuleCall_3_0() { return cValueINTLITERALTerminalRuleCall_3_0; }
	}

	public class ScaledRangeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "scaledRangeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInterpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cInterpINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cInterpAssignment_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cLowerLimAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cLowerLimNumericLiteralParserRuleCall_2_0_0 = (RuleCall)cLowerLimAssignment_2_0.eContents().get(0);
		private final Assignment cLowerLimRefAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cLowerLimRefConstReferenceParserRuleCall_2_1_0 = (RuleCall)cLowerLimRefAssignment_2_1.eContents().get(0);
		private final Assignment cLowerLimScopedAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cLowerLimScopedScopedConstIdParserRuleCall_2_2_0 = (RuleCall)cLowerLimScopedAssignment_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cUpperLimAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cUpperLimNumericLiteralParserRuleCall_4_0_0 = (RuleCall)cUpperLimAssignment_4_0.eContents().get(0);
		private final Assignment cUpperLimRefAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cUpperLimRefConstReferenceParserRuleCall_4_1_0 = (RuleCall)cUpperLimRefAssignment_4_1.eContents().get(0);
		private final Assignment cUpperLimScopedAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cUpperLimScopedScopedConstIdParserRuleCall_4_2_0 = (RuleCall)cUpperLimScopedAssignment_4_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cFunctionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Alternatives cFunctionAlternatives_6_0 = (Alternatives)cFunctionAssignment_6.eContents().get(0);
		private final Keyword cFunctionFloorKeyword_6_0_0 = (Keyword)cFunctionAlternatives_6_0.eContents().get(0);
		private final Keyword cFunctionCeilingKeyword_6_0_1 = (Keyword)cFunctionAlternatives_6_0.eContents().get(1);
		private final Keyword cFunctionRoundKeyword_6_0_2 = (Keyword)cFunctionAlternatives_6_0.eContents().get(2);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//scaledRangeDef:
		//	interp=INTERPRETATION? "<" (lowerLim=numericLiteral | lowerLimRef=constReference | lowerLimScoped=scopedConstId) ","
		//	(upperLim=numericLiteral | upperLimRef=constReference | upperLimScoped=scopedConstId) ">" function=("floor" |
		//	"ceiling" | "round");
		public ParserRule getRule() { return rule; }

		//interp=INTERPRETATION? "<" (lowerLim=numericLiteral | lowerLimRef=constReference | lowerLimScoped=scopedConstId) ","
		//(upperLim=numericLiteral | upperLimRef=constReference | upperLimScoped=scopedConstId) ">" function=("floor" | "ceiling"
		//| "round")
		public Group getGroup() { return cGroup; }

		//interp=INTERPRETATION?
		public Assignment getInterpAssignment_0() { return cInterpAssignment_0; }

		//INTERPRETATION
		public RuleCall getInterpINTERPRETATIONTerminalRuleCall_0_0() { return cInterpINTERPRETATIONTerminalRuleCall_0_0; }

		//"<"
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }

		//lowerLim=numericLiteral | lowerLimRef=constReference | lowerLimScoped=scopedConstId
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//lowerLim=numericLiteral
		public Assignment getLowerLimAssignment_2_0() { return cLowerLimAssignment_2_0; }

		//numericLiteral
		public RuleCall getLowerLimNumericLiteralParserRuleCall_2_0_0() { return cLowerLimNumericLiteralParserRuleCall_2_0_0; }

		//lowerLimRef=constReference
		public Assignment getLowerLimRefAssignment_2_1() { return cLowerLimRefAssignment_2_1; }

		//constReference
		public RuleCall getLowerLimRefConstReferenceParserRuleCall_2_1_0() { return cLowerLimRefConstReferenceParserRuleCall_2_1_0; }

		//lowerLimScoped=scopedConstId
		public Assignment getLowerLimScopedAssignment_2_2() { return cLowerLimScopedAssignment_2_2; }

		//scopedConstId
		public RuleCall getLowerLimScopedScopedConstIdParserRuleCall_2_2_0() { return cLowerLimScopedScopedConstIdParserRuleCall_2_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//upperLim=numericLiteral | upperLimRef=constReference | upperLimScoped=scopedConstId
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//upperLim=numericLiteral
		public Assignment getUpperLimAssignment_4_0() { return cUpperLimAssignment_4_0; }

		//numericLiteral
		public RuleCall getUpperLimNumericLiteralParserRuleCall_4_0_0() { return cUpperLimNumericLiteralParserRuleCall_4_0_0; }

		//upperLimRef=constReference
		public Assignment getUpperLimRefAssignment_4_1() { return cUpperLimRefAssignment_4_1; }

		//constReference
		public RuleCall getUpperLimRefConstReferenceParserRuleCall_4_1_0() { return cUpperLimRefConstReferenceParserRuleCall_4_1_0; }

		//upperLimScoped=scopedConstId
		public Assignment getUpperLimScopedAssignment_4_2() { return cUpperLimScopedAssignment_4_2; }

		//scopedConstId
		public RuleCall getUpperLimScopedScopedConstIdParserRuleCall_4_2_0() { return cUpperLimScopedScopedConstIdParserRuleCall_4_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_5() { return cGreaterThanSignKeyword_5; }

		//function=("floor" | "ceiling" | "round")
		public Assignment getFunctionAssignment_6() { return cFunctionAssignment_6; }

		//"floor" | "ceiling" | "round"
		public Alternatives getFunctionAlternatives_6_0() { return cFunctionAlternatives_6_0; }

		//"floor"
		public Keyword getFunctionFloorKeyword_6_0_0() { return cFunctionFloorKeyword_6_0_0; }

		//"ceiling"
		public Keyword getFunctionCeilingKeyword_6_0_1() { return cFunctionCeilingKeyword_6_0_1; }

		//"round"
		public Keyword getFunctionRoundKeyword_6_0_2() { return cFunctionRoundKeyword_6_0_2; }
	}

	public class SubFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "subField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFromIndexAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFromIndexINTLITERALTerminalRuleCall_3_0 = (RuleCall)cFromIndexAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToIndexAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToIndexINTLITERALTerminalRuleCall_5_0 = (RuleCall)cToIndexAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueSetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSetValueSetDefParserRuleCall_7_0 = (RuleCall)cValueSetAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//subField:
		//	comment=INTERPRETATION? name=ID "[" fromIndex=INTLITERAL ":" toIndex=INTLITERAL "]" valueSet=valueSetDef ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? name=ID "[" fromIndex=INTLITERAL ":" toIndex=INTLITERAL "]" valueSet=valueSetDef ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//fromIndex=INTLITERAL
		public Assignment getFromIndexAssignment_3() { return cFromIndexAssignment_3; }

		//INTLITERAL
		public RuleCall getFromIndexINTLITERALTerminalRuleCall_3_0() { return cFromIndexINTLITERALTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//toIndex=INTLITERAL
		public Assignment getToIndexAssignment_5() { return cToIndexAssignment_5; }

		//INTLITERAL
		public RuleCall getToIndexINTLITERALTerminalRuleCall_5_0() { return cToIndexINTLITERALTerminalRuleCall_5_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//valueSet=valueSetDef
		public Assignment getValueSetAssignment_7() { return cValueSetAssignment_7; }

		//valueSetDef
		public RuleCall getValueSetValueSetDefParserRuleCall_7_0() { return cValueSetValueSetDefParserRuleCall_7_0; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class ListDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "listDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cListKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cCountCommentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCountCommentINTERPRETATIONTerminalRuleCall_4_0 = (RuleCall)cCountCommentAssignment_4.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cMinCountAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cMinCountNumericLiteralParserRuleCall_6_0_0 = (RuleCall)cMinCountAssignment_6_0.eContents().get(0);
		private final Assignment cMinCountRefAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cMinCountRefConstReferenceParserRuleCall_6_1_0 = (RuleCall)cMinCountRefAssignment_6_1.eContents().get(0);
		private final Assignment cMinCountScopedAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cMinCountScopedScopedConstIdParserRuleCall_6_2_0 = (RuleCall)cMinCountScopedAssignment_6_2.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cMaxCountAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cMaxCountNumericLiteralParserRuleCall_8_0_0 = (RuleCall)cMaxCountAssignment_8_0.eContents().get(0);
		private final Assignment cMaxCountRefAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cMaxCountRefConstReferenceParserRuleCall_8_1_0 = (RuleCall)cMaxCountRefAssignment_8_1.eContents().get(0);
		private final Assignment cMaxCountScopedAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cMaxCountScopedScopedConstIdParserRuleCall_8_2_0 = (RuleCall)cMaxCountScopedAssignment_8_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Alternatives cAlternatives_11 = (Alternatives)cGroup.eContents().get(11);
		private final Assignment cContainerRefAssignment_11_0 = (Assignment)cAlternatives_11.eContents().get(0);
		private final RuleCall cContainerRefContainerRefParserRuleCall_11_0_0 = (RuleCall)cContainerRefAssignment_11_0.eContents().get(0);
		private final Assignment cContainerDefAssignment_11_1 = (Assignment)cAlternatives_11.eContents().get(1);
		private final RuleCall cContainerDefContainerDefParserRuleCall_11_1_0 = (RuleCall)cContainerDefAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//listDef:
		//	comment=INTERPRETATION? optional="optional"? "list" name=ID countComment=INTERPRETATION? "[" (minCount=numericLiteral
		//	| minCountRef=constReference | minCountScoped=scopedConstId) "," (maxCount=numericLiteral | maxCountRef=constReference
		//	| maxCountScoped=scopedConstId) "]" "{" (containerRef=containerRef | containerDef=containerDef) "}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "list" name=ID countComment=INTERPRETATION? "[" (minCount=numericLiteral |
		//minCountRef=constReference | minCountScoped=scopedConstId) "," (maxCount=numericLiteral | maxCountRef=constReference |
		//maxCountScoped=scopedConstId) "]" "{" (containerRef=containerRef | containerDef=containerDef) "}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"list"
		public Keyword getListKeyword_2() { return cListKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//countComment=INTERPRETATION?
		public Assignment getCountCommentAssignment_4() { return cCountCommentAssignment_4; }

		//INTERPRETATION
		public RuleCall getCountCommentINTERPRETATIONTerminalRuleCall_4_0() { return cCountCommentINTERPRETATIONTerminalRuleCall_4_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//minCount=numericLiteral | minCountRef=constReference | minCountScoped=scopedConstId
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//minCount=numericLiteral
		public Assignment getMinCountAssignment_6_0() { return cMinCountAssignment_6_0; }

		//numericLiteral
		public RuleCall getMinCountNumericLiteralParserRuleCall_6_0_0() { return cMinCountNumericLiteralParserRuleCall_6_0_0; }

		//minCountRef=constReference
		public Assignment getMinCountRefAssignment_6_1() { return cMinCountRefAssignment_6_1; }

		//constReference
		public RuleCall getMinCountRefConstReferenceParserRuleCall_6_1_0() { return cMinCountRefConstReferenceParserRuleCall_6_1_0; }

		//minCountScoped=scopedConstId
		public Assignment getMinCountScopedAssignment_6_2() { return cMinCountScopedAssignment_6_2; }

		//scopedConstId
		public RuleCall getMinCountScopedScopedConstIdParserRuleCall_6_2_0() { return cMinCountScopedScopedConstIdParserRuleCall_6_2_0; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//maxCount=numericLiteral | maxCountRef=constReference | maxCountScoped=scopedConstId
		public Alternatives getAlternatives_8() { return cAlternatives_8; }

		//maxCount=numericLiteral
		public Assignment getMaxCountAssignment_8_0() { return cMaxCountAssignment_8_0; }

		//numericLiteral
		public RuleCall getMaxCountNumericLiteralParserRuleCall_8_0_0() { return cMaxCountNumericLiteralParserRuleCall_8_0_0; }

		//maxCountRef=constReference
		public Assignment getMaxCountRefAssignment_8_1() { return cMaxCountRefAssignment_8_1; }

		//constReference
		public RuleCall getMaxCountRefConstReferenceParserRuleCall_8_1_0() { return cMaxCountRefConstReferenceParserRuleCall_8_1_0; }

		//maxCountScoped=scopedConstId
		public Assignment getMaxCountScopedAssignment_8_2() { return cMaxCountScopedAssignment_8_2; }

		//scopedConstId
		public RuleCall getMaxCountScopedScopedConstIdParserRuleCall_8_2_0() { return cMaxCountScopedScopedConstIdParserRuleCall_8_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }

		//containerRef=containerRef | containerDef=containerDef
		public Alternatives getAlternatives_11() { return cAlternatives_11; }

		//containerRef=containerRef
		public Assignment getContainerRefAssignment_11_0() { return cContainerRefAssignment_11_0; }

		//containerRef
		public RuleCall getContainerRefContainerRefParserRuleCall_11_0_0() { return cContainerRefContainerRefParserRuleCall_11_0_0; }

		//containerDef=containerDef
		public Assignment getContainerDefAssignment_11_1() { return cContainerDefAssignment_11_1; }

		//containerDef
		public RuleCall getContainerDefContainerDefParserRuleCall_11_1_0() { return cContainerDefContainerDefParserRuleCall_11_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }

		//";"?
		public Keyword getSemicolonKeyword_13() { return cSemicolonKeyword_13; }
	}

	public class VariantDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "variantDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cVariantKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cVtagCommentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVtagCommentINTERPRETATIONTerminalRuleCall_4_0 = (RuleCall)cVtagCommentAssignment_4.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cMinCountAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cMinCountNumericLiteralParserRuleCall_6_0_0 = (RuleCall)cMinCountAssignment_6_0.eContents().get(0);
		private final Assignment cMinCountRefAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cMinCountRefConstReferenceParserRuleCall_6_1_0 = (RuleCall)cMinCountRefAssignment_6_1.eContents().get(0);
		private final Assignment cMinCountScopedAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cMinCountScopedScopedConstIdParserRuleCall_6_2_0 = (RuleCall)cMinCountScopedAssignment_6_2.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cMaxCountAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cMaxCountNumericLiteralParserRuleCall_8_0_0 = (RuleCall)cMaxCountAssignment_8_0.eContents().get(0);
		private final Assignment cMaxCountRefAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cMaxCountRefConstReferenceParserRuleCall_8_1_0 = (RuleCall)cMaxCountRefAssignment_8_1.eContents().get(0);
		private final Assignment cMaxCountScopedAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cMaxCountScopedScopedConstIdParserRuleCall_8_2_0 = (RuleCall)cMaxCountScopedAssignment_8_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cItemListAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cItemListTaggedItemDefParserRuleCall_11_0 = (RuleCall)cItemListAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// list of vtag/container, and name, optional, interp
		//
		//variantDef:
		//	comment=INTERPRETATION? optional="optional"? "variant" name=ID vtagComment=INTERPRETATION? "["
		//	(minCount=numericLiteral | minCountRef=constReference | minCountScoped=scopedConstId) "," (maxCount=numericLiteral |
		//	maxCountRef=constReference | maxCountScoped=scopedConstId) "]" "{" // list of 0 or more containers(record, list, sequence, variant) 
		//
		//	//      or references to containers                             
		//
		//	itemList+=taggedItemDef* "}" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "variant" name=ID vtagComment=INTERPRETATION? "[" (minCount=numericLiteral
		//| minCountRef=constReference | minCountScoped=scopedConstId) "," (maxCount=numericLiteral | maxCountRef=constReference
		//| maxCountScoped=scopedConstId) "]" "{" // list of 0 or more containers(record, list, sequence, variant) 
		//
		////      or references to containers                             
		//
		//itemList+=taggedItemDef* "}" ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"variant"
		public Keyword getVariantKeyword_2() { return cVariantKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//vtagComment=INTERPRETATION?
		public Assignment getVtagCommentAssignment_4() { return cVtagCommentAssignment_4; }

		//INTERPRETATION
		public RuleCall getVtagCommentINTERPRETATIONTerminalRuleCall_4_0() { return cVtagCommentINTERPRETATIONTerminalRuleCall_4_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//minCount=numericLiteral | minCountRef=constReference | minCountScoped=scopedConstId
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//minCount=numericLiteral
		public Assignment getMinCountAssignment_6_0() { return cMinCountAssignment_6_0; }

		//numericLiteral
		public RuleCall getMinCountNumericLiteralParserRuleCall_6_0_0() { return cMinCountNumericLiteralParserRuleCall_6_0_0; }

		//minCountRef=constReference
		public Assignment getMinCountRefAssignment_6_1() { return cMinCountRefAssignment_6_1; }

		//constReference
		public RuleCall getMinCountRefConstReferenceParserRuleCall_6_1_0() { return cMinCountRefConstReferenceParserRuleCall_6_1_0; }

		//minCountScoped=scopedConstId
		public Assignment getMinCountScopedAssignment_6_2() { return cMinCountScopedAssignment_6_2; }

		//scopedConstId
		public RuleCall getMinCountScopedScopedConstIdParserRuleCall_6_2_0() { return cMinCountScopedScopedConstIdParserRuleCall_6_2_0; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//maxCount=numericLiteral | maxCountRef=constReference | maxCountScoped=scopedConstId
		public Alternatives getAlternatives_8() { return cAlternatives_8; }

		//maxCount=numericLiteral
		public Assignment getMaxCountAssignment_8_0() { return cMaxCountAssignment_8_0; }

		//numericLiteral
		public RuleCall getMaxCountNumericLiteralParserRuleCall_8_0_0() { return cMaxCountNumericLiteralParserRuleCall_8_0_0; }

		//maxCountRef=constReference
		public Assignment getMaxCountRefAssignment_8_1() { return cMaxCountRefAssignment_8_1; }

		//constReference
		public RuleCall getMaxCountRefConstReferenceParserRuleCall_8_1_0() { return cMaxCountRefConstReferenceParserRuleCall_8_1_0; }

		//maxCountScoped=scopedConstId
		public Assignment getMaxCountScopedAssignment_8_2() { return cMaxCountScopedAssignment_8_2; }

		//scopedConstId
		public RuleCall getMaxCountScopedScopedConstIdParserRuleCall_8_2_0() { return cMaxCountScopedScopedConstIdParserRuleCall_8_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }

		//itemList+=taggedItemDef*
		public Assignment getItemListAssignment_11() { return cItemListAssignment_11; }

		//taggedItemDef
		public RuleCall getItemListTaggedItemDefParserRuleCall_11_0() { return cItemListTaggedItemDefParserRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }

		//";"
		public Keyword getSemicolonKeyword_13() { return cSemicolonKeyword_13; }
	}

	public class TaggedItemDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "taggedItemDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVtagKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cContainerDefAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cContainerDefContainerDefParserRuleCall_2_0_0 = (RuleCall)cContainerDefAssignment_2_0.eContents().get(0);
		private final Assignment cContainerRefAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cContainerRefContainerRefParserRuleCall_2_1_0 = (RuleCall)cContainerRefAssignment_2_1.eContents().get(0);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//taggedItemDef:
		//	"vtag" ":" (containerDef=containerDef | containerRef=containerRef);
		public ParserRule getRule() { return rule; }

		//"vtag" ":" (containerDef=containerDef | containerRef=containerRef)
		public Group getGroup() { return cGroup; }

		//"vtag"
		public Keyword getVtagKeyword_0() { return cVtagKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//containerDef=containerDef | containerRef=containerRef
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//containerDef=containerDef
		public Assignment getContainerDefAssignment_2_0() { return cContainerDefAssignment_2_0; }

		//containerDef
		public RuleCall getContainerDefContainerDefParserRuleCall_2_0_0() { return cContainerDefContainerDefParserRuleCall_2_0_0; }

		//containerRef=containerRef
		public Assignment getContainerRefAssignment_2_1() { return cContainerRefAssignment_2_1; }

		//containerRef
		public RuleCall getContainerRefContainerRefParserRuleCall_2_1_0() { return cContainerRefContainerRefParserRuleCall_2_1_0; }
	}

	public class SequenceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "sequenceDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cSequenceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContainerTypeListAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Alternatives cContainerTypeListAlternatives_5_0 = (Alternatives)cContainerTypeListAssignment_5.eContents().get(0);
		private final RuleCall cContainerTypeListContainerRefParserRuleCall_5_0_0 = (RuleCall)cContainerTypeListAlternatives_5_0.eContents().get(0);
		private final RuleCall cContainerTypeListContainerDefParserRuleCall_5_0_1 = (RuleCall)cContainerTypeListAlternatives_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//sequenceDef:
		//	comment=INTERPRETATION? optional="optional"? "sequence" name=ID "{" containerTypeList+=(containerRef | containerDef)+
		//	"}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "sequence" name=ID "{" containerTypeList+=(containerRef | containerDef)+
		//"}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"sequence"
		public Keyword getSequenceKeyword_2() { return cSequenceKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//containerTypeList+=(containerRef | containerDef)+
		public Assignment getContainerTypeListAssignment_5() { return cContainerTypeListAssignment_5; }

		//containerRef | containerDef
		public Alternatives getContainerTypeListAlternatives_5_0() { return cContainerTypeListAlternatives_5_0; }

		//containerRef
		public RuleCall getContainerTypeListContainerRefParserRuleCall_5_0_0() { return cContainerTypeListContainerRefParserRuleCall_5_0_0; }

		//containerDef
		public RuleCall getContainerTypeListContainerDefParserRuleCall_5_0_1() { return cContainerTypeListContainerDefParserRuleCall_5_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//";"?
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class RecordDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "recordDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Keyword cRecordKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cArrayDefAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cArrayDefArrayDefParserRuleCall_5_0_0 = (RuleCall)cArrayDefAssignment_5_0.eContents().get(0);
		private final Assignment cFieldDefAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cFieldDefFixedFieldDefParserRuleCall_5_1_0 = (RuleCall)cFieldDefAssignment_5_1.eContents().get(0);
		private final Assignment cVariableFieldDefAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cVariableFieldDefVarFieldParserRuleCall_5_2_0 = (RuleCall)cVariableFieldDefAssignment_5_2.eContents().get(0);
		private final Assignment cBitfieldDefAssignment_5_3 = (Assignment)cAlternatives_5.eContents().get(3);
		private final RuleCall cBitfieldDefBitfieldDefParserRuleCall_5_3_0 = (RuleCall)cBitfieldDefAssignment_5_3.eContents().get(0);
		private final Assignment cFixedLengthStringDefAssignment_5_4 = (Assignment)cAlternatives_5.eContents().get(4);
		private final RuleCall cFixedLengthStringDefFixedLenStringParserRuleCall_5_4_0 = (RuleCall)cFixedLengthStringDefAssignment_5_4.eContents().get(0);
		private final Assignment cVariableLengthStringDefAssignment_5_5 = (Assignment)cAlternatives_5.eContents().get(5);
		private final RuleCall cVariableLengthStringDefVarLenStringParserRuleCall_5_5_0 = (RuleCall)cVariableLengthStringDefAssignment_5_5.eContents().get(0);
		private final Assignment cVariableLengthFieldDefAssignment_5_6 = (Assignment)cAlternatives_5.eContents().get(6);
		private final RuleCall cVariableLengthFieldDefVarLenFieldParserRuleCall_5_6_0 = (RuleCall)cVariableLengthFieldDefAssignment_5_6.eContents().get(0);
		private final Assignment cVarFormatFieldAssignment_5_7 = (Assignment)cAlternatives_5.eContents().get(7);
		private final RuleCall cVarFormatFieldVarFormatFieldParserRuleCall_5_7_0 = (RuleCall)cVarFormatFieldAssignment_5_7.eContents().get(0);
		private final Assignment cTypeReferenceAssignment_5_8 = (Assignment)cAlternatives_5.eContents().get(8);
		private final RuleCall cTypeReferenceTypeReferenceParserRuleCall_5_8_0 = (RuleCall)cTypeReferenceAssignment_5_8.eContents().get(0);
		private final Assignment cScopedRefAssignment_5_9 = (Assignment)cAlternatives_5.eContents().get(9);
		private final RuleCall cScopedRefScopedTypeIdParserRuleCall_5_9_0 = (RuleCall)cScopedRefAssignment_5_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////
		//
		//recordDef:
		//	comment=INTERPRETATION? optional="optional"? "record" name=ID "{" (arrayDef+=arrayDef | fieldDef+=fixedFieldDef |
		//	variableFieldDef+=varField | bitfieldDef+=bitfieldDef | fixedLengthStringDef+=fixedLenString |
		//	variableLengthStringDef+=varLenString | variableLengthFieldDef+=varLenField | varFormatField+=varFormatField |
		//	typeReference+=typeReference | scopedRef+=scopedTypeId)+ "}" ";"?;
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? "record" name=ID "{" (arrayDef+=arrayDef | fieldDef+=fixedFieldDef |
		//variableFieldDef+=varField | bitfieldDef+=bitfieldDef | fixedLengthStringDef+=fixedLenString |
		//variableLengthStringDef+=varLenString | variableLengthFieldDef+=varLenField | varFormatField+=varFormatField |
		//typeReference+=typeReference | scopedRef+=scopedTypeId)+ "}" ";"?
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//"record"
		public Keyword getRecordKeyword_2() { return cRecordKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//(arrayDef+=arrayDef | fieldDef+=fixedFieldDef | variableFieldDef+=varField | bitfieldDef+=bitfieldDef |
		//fixedLengthStringDef+=fixedLenString | variableLengthStringDef+=varLenString | variableLengthFieldDef+=varLenField |
		//varFormatField+=varFormatField | typeReference+=typeReference | scopedRef+=scopedTypeId)+
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//arrayDef+=arrayDef
		public Assignment getArrayDefAssignment_5_0() { return cArrayDefAssignment_5_0; }

		//arrayDef
		public RuleCall getArrayDefArrayDefParserRuleCall_5_0_0() { return cArrayDefArrayDefParserRuleCall_5_0_0; }

		//fieldDef+=fixedFieldDef
		public Assignment getFieldDefAssignment_5_1() { return cFieldDefAssignment_5_1; }

		//fixedFieldDef
		public RuleCall getFieldDefFixedFieldDefParserRuleCall_5_1_0() { return cFieldDefFixedFieldDefParserRuleCall_5_1_0; }

		//variableFieldDef+=varField
		public Assignment getVariableFieldDefAssignment_5_2() { return cVariableFieldDefAssignment_5_2; }

		//varField
		public RuleCall getVariableFieldDefVarFieldParserRuleCall_5_2_0() { return cVariableFieldDefVarFieldParserRuleCall_5_2_0; }

		//bitfieldDef+=bitfieldDef
		public Assignment getBitfieldDefAssignment_5_3() { return cBitfieldDefAssignment_5_3; }

		//bitfieldDef
		public RuleCall getBitfieldDefBitfieldDefParserRuleCall_5_3_0() { return cBitfieldDefBitfieldDefParserRuleCall_5_3_0; }

		//fixedLengthStringDef+=fixedLenString
		public Assignment getFixedLengthStringDefAssignment_5_4() { return cFixedLengthStringDefAssignment_5_4; }

		//fixedLenString
		public RuleCall getFixedLengthStringDefFixedLenStringParserRuleCall_5_4_0() { return cFixedLengthStringDefFixedLenStringParserRuleCall_5_4_0; }

		//variableLengthStringDef+=varLenString
		public Assignment getVariableLengthStringDefAssignment_5_5() { return cVariableLengthStringDefAssignment_5_5; }

		//varLenString
		public RuleCall getVariableLengthStringDefVarLenStringParserRuleCall_5_5_0() { return cVariableLengthStringDefVarLenStringParserRuleCall_5_5_0; }

		//variableLengthFieldDef+=varLenField
		public Assignment getVariableLengthFieldDefAssignment_5_6() { return cVariableLengthFieldDefAssignment_5_6; }

		//varLenField
		public RuleCall getVariableLengthFieldDefVarLenFieldParserRuleCall_5_6_0() { return cVariableLengthFieldDefVarLenFieldParserRuleCall_5_6_0; }

		//varFormatField+=varFormatField
		public Assignment getVarFormatFieldAssignment_5_7() { return cVarFormatFieldAssignment_5_7; }

		//varFormatField
		public RuleCall getVarFormatFieldVarFormatFieldParserRuleCall_5_7_0() { return cVarFormatFieldVarFormatFieldParserRuleCall_5_7_0; }

		//typeReference+=typeReference
		public Assignment getTypeReferenceAssignment_5_8() { return cTypeReferenceAssignment_5_8; }

		//typeReference
		public RuleCall getTypeReferenceTypeReferenceParserRuleCall_5_8_0() { return cTypeReferenceTypeReferenceParserRuleCall_5_8_0; }

		//scopedRef+=scopedTypeId
		public Assignment getScopedRefAssignment_5_9() { return cScopedRefAssignment_5_9; }

		//scopedTypeId
		public RuleCall getScopedRefScopedTypeIdParserRuleCall_5_9_0() { return cScopedRefScopedTypeIdParserRuleCall_5_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//";"?
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class ConstReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "constReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cConstValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cConstValConstDefCrossReference_1_0 = (CrossReference)cConstValAssignment_1.eContents().get(0);
		private final RuleCall cConstValConstDefIDTerminalRuleCall_1_0_1 = (RuleCall)cConstValConstDefCrossReference_1_0.eContents().get(1);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//constReference:
		//	comment=INTERPRETATION? constVal=[constDef];
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? constVal=[constDef]
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//constVal=[constDef]
		public Assignment getConstValAssignment_1() { return cConstValAssignment_1; }

		//[constDef]
		public CrossReference getConstValConstDefCrossReference_1_0() { return cConstValConstDefCrossReference_1_0; }

		//ID
		public RuleCall getConstValConstDefIDTerminalRuleCall_1_0_1() { return cConstValConstDefIDTerminalRuleCall_1_0_1; }
	}

	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "typeReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeEObjectCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeEObjectIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeEObjectCrossReference_2_0.eContents().get(1);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//typeReference:
		//	comment=INTERPRETATION? optional="optional"? type=[ecore::EObject] name=ID ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? type=[ecore::EObject] name=ID ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//type=[ecore::EObject]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//[ecore::EObject]
		public CrossReference getTypeEObjectCrossReference_2_0() { return cTypeEObjectCrossReference_2_0; }

		//ID
		public RuleCall getTypeEObjectIDTerminalRuleCall_2_0_1() { return cTypeEObjectIDTerminalRuleCall_2_0_1; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ArrayDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arrayDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeRefAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeRefEObjectCrossReference_2_0_0 = (CrossReference)cTypeRefAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeRefEObjectIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeRefEObjectCrossReference_2_0_0.eContents().get(1);
		private final Assignment cScopedTypeAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cScopedTypeScopedTypeParserRuleCall_2_1_0 = (RuleCall)cScopedTypeAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cArraySizeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cArraySizeINTLITERALTerminalRuleCall_5_0 = (RuleCall)cArraySizeAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//////////////////////////////////////////////////////////////////////////////////
		//
		//// This seems to still be a problem - accidentally removing the type variable fixed the
		//
		////	static initializer error.
		//
		//arrayDef:
		//	comment=INTERPRETATION? optional="optional"? (typeRef=[ecore::EObject] | scopedType=scopedType) name=ID "["
		//	arraySize=INTLITERAL "]" ";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? (typeRef=[ecore::EObject] | scopedType=scopedType) name=ID "["
		//arraySize=INTLITERAL "]" ";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//typeRef=[ecore::EObject] | scopedType=scopedType
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//typeRef=[ecore::EObject]
		public Assignment getTypeRefAssignment_2_0() { return cTypeRefAssignment_2_0; }

		//[ecore::EObject]
		public CrossReference getTypeRefEObjectCrossReference_2_0_0() { return cTypeRefEObjectCrossReference_2_0_0; }

		//ID
		public RuleCall getTypeRefEObjectIDTerminalRuleCall_2_0_0_1() { return cTypeRefEObjectIDTerminalRuleCall_2_0_0_1; }

		//scopedType=scopedType
		public Assignment getScopedTypeAssignment_2_1() { return cScopedTypeAssignment_2_1; }

		//scopedType
		public RuleCall getScopedTypeScopedTypeParserRuleCall_2_1_0() { return cScopedTypeScopedTypeParserRuleCall_2_1_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//arraySize=INTLITERAL
		public Assignment getArraySizeAssignment_5() { return cArraySizeAssignment_5; }

		//INTLITERAL
		public RuleCall getArraySizeINTLITERALTerminalRuleCall_5_0() { return cArraySizeINTLITERALTerminalRuleCall_5_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class MessageScopedRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "messageScopedRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Keyword cMessageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cScopeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cScopeEObjectCrossReference_2_0 = (CrossReference)cScopeAssignment_2.eContents().get(0);
		private final RuleCall cScopeEObjectIDTerminalRuleCall_2_0_1 = (RuleCall)cScopeEObjectCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFullStopKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cScopesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cScopesEObjectCrossReference_3_1_0 = (CrossReference)cScopesAssignment_3_1.eContents().get(0);
		private final RuleCall cScopesEObjectIDTerminalRuleCall_3_1_0_1 = (RuleCall)cScopesEObjectCrossReference_3_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRefMessageDefCrossReference_5_0 = (CrossReference)cRefAssignment_5.eContents().get(0);
		private final RuleCall cRefMessageDefIDTerminalRuleCall_5_0_1 = (RuleCall)cRefMessageDefCrossReference_5_0.eContents().get(1);
		private final Assignment cNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNameIDTerminalRuleCall_6_0 = (RuleCall)cNameAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//messageScopedRef:
		//	comment=INTERPRETATION? "message" scope=[ecore::EObject] ("." scopes+=[ecore::EObject])* "." ref=[messageDef] name=ID
		//	";";
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? "message" scope=[ecore::EObject] ("." scopes+=[ecore::EObject])* "." ref=[messageDef] name=ID
		//";"
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//"message"
		public Keyword getMessageKeyword_1() { return cMessageKeyword_1; }

		//scope=[ecore::EObject]
		public Assignment getScopeAssignment_2() { return cScopeAssignment_2; }

		//[ecore::EObject]
		public CrossReference getScopeEObjectCrossReference_2_0() { return cScopeEObjectCrossReference_2_0; }

		//ID
		public RuleCall getScopeEObjectIDTerminalRuleCall_2_0_1() { return cScopeEObjectIDTerminalRuleCall_2_0_1; }

		//("." scopes+=[ecore::EObject])*
		public Group getGroup_3() { return cGroup_3; }

		//"."
		public Keyword getFullStopKeyword_3_0() { return cFullStopKeyword_3_0; }

		//scopes+=[ecore::EObject]
		public Assignment getScopesAssignment_3_1() { return cScopesAssignment_3_1; }

		//[ecore::EObject]
		public CrossReference getScopesEObjectCrossReference_3_1_0() { return cScopesEObjectCrossReference_3_1_0; }

		//ID
		public RuleCall getScopesEObjectIDTerminalRuleCall_3_1_0_1() { return cScopesEObjectIDTerminalRuleCall_3_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_4() { return cFullStopKeyword_4; }

		//ref=[messageDef]
		public Assignment getRefAssignment_5() { return cRefAssignment_5; }

		//[messageDef]
		public CrossReference getRefMessageDefCrossReference_5_0() { return cRefMessageDefCrossReference_5_0; }

		//ID
		public RuleCall getRefMessageDefIDTerminalRuleCall_5_0_1() { return cRefMessageDefIDTerminalRuleCall_5_0_1; }

		//name=ID
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_6_0() { return cNameIDTerminalRuleCall_6_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class ScopedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "scopedType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cNameEObjectCrossReference_0_0 = (CrossReference)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameEObjectIDTerminalRuleCall_0_0_1 = (RuleCall)cNameEObjectCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cNamesEObjectCrossReference_1_1_0 = (CrossReference)cNamesAssignment_1_1.eContents().get(0);
		private final RuleCall cNamesEObjectIDTerminalRuleCall_1_1_0_1 = (RuleCall)cNamesEObjectCrossReference_1_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeEObjectCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeEObjectIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeEObjectCrossReference_3_0.eContents().get(1);
		
		//// Multiple scoped types allow for different rules to use
		//
		//// only scoped types the specific rule requires.
		//
		//scopedType:
		//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[ecore::EObject];
		public ParserRule getRule() { return rule; }

		//name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[ecore::EObject]
		public Group getGroup() { return cGroup; }

		//name=[ecore::EObject]
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//[ecore::EObject]
		public CrossReference getNameEObjectCrossReference_0_0() { return cNameEObjectCrossReference_0_0; }

		//ID
		public RuleCall getNameEObjectIDTerminalRuleCall_0_0_1() { return cNameEObjectIDTerminalRuleCall_0_0_1; }

		//("." names+=[ecore::EObject])*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//names+=[ecore::EObject]
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//[ecore::EObject]
		public CrossReference getNamesEObjectCrossReference_1_1_0() { return cNamesEObjectCrossReference_1_1_0; }

		//ID
		public RuleCall getNamesEObjectIDTerminalRuleCall_1_1_0_1() { return cNamesEObjectIDTerminalRuleCall_1_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//type=[ecore::EObject]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[ecore::EObject]
		public CrossReference getTypeEObjectCrossReference_3_0() { return cTypeEObjectCrossReference_3_0; }

		//ID
		public RuleCall getTypeEObjectIDTerminalRuleCall_3_0_1() { return cTypeEObjectIDTerminalRuleCall_3_0_1; }
	}

	public class ScopedEventTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "scopedEventType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cNameEObjectCrossReference_0_0 = (CrossReference)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameEObjectIDTerminalRuleCall_0_0_1 = (RuleCall)cNameEObjectCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cNamesEObjectCrossReference_1_1_0 = (CrossReference)cNamesAssignment_1_1.eContents().get(0);
		private final RuleCall cNamesEObjectIDTerminalRuleCall_1_1_0_1 = (RuleCall)cNamesEObjectCrossReference_1_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeEObjectCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeEObjectIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeEObjectCrossReference_3_0.eContents().get(1);
		
		//scopedEventType:
		//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[ecore::EObject];
		public ParserRule getRule() { return rule; }

		//name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[ecore::EObject]
		public Group getGroup() { return cGroup; }

		//name=[ecore::EObject]
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//[ecore::EObject]
		public CrossReference getNameEObjectCrossReference_0_0() { return cNameEObjectCrossReference_0_0; }

		//ID
		public RuleCall getNameEObjectIDTerminalRuleCall_0_0_1() { return cNameEObjectIDTerminalRuleCall_0_0_1; }

		//("." names+=[ecore::EObject])*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//names+=[ecore::EObject]
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//[ecore::EObject]
		public CrossReference getNamesEObjectCrossReference_1_1_0() { return cNamesEObjectCrossReference_1_1_0; }

		//ID
		public RuleCall getNamesEObjectIDTerminalRuleCall_1_1_0_1() { return cNamesEObjectIDTerminalRuleCall_1_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//type=[ecore::EObject]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[ecore::EObject]
		public CrossReference getTypeEObjectCrossReference_3_0() { return cTypeEObjectCrossReference_3_0; }

		//ID
		public RuleCall getTypeEObjectIDTerminalRuleCall_3_0_1() { return cTypeEObjectIDTerminalRuleCall_3_0_1; }
	}

	public class ScopedTypeIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "scopedTypeId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommentINTERPRETATIONTerminalRuleCall_0_0 = (RuleCall)cCommentAssignment_0.eContents().get(0);
		private final Assignment cOptionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cOptionalOptionalKeyword_1_0 = (Keyword)cOptionalAssignment_1.eContents().get(0);
		private final Assignment cRefAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRefScopedTypeParserRuleCall_2_0 = (RuleCall)cRefAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cScopedNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cScopedNameIDTerminalRuleCall_3_0_0 = (RuleCall)cScopedNameAssignment_3_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		
		//scopedTypeId:
		//	comment=INTERPRETATION? optional="optional"? ref=scopedType (scopedName=ID ";");
		public ParserRule getRule() { return rule; }

		//comment=INTERPRETATION? optional="optional"? ref=scopedType (scopedName=ID ";")
		public Group getGroup() { return cGroup; }

		//comment=INTERPRETATION?
		public Assignment getCommentAssignment_0() { return cCommentAssignment_0; }

		//INTERPRETATION
		public RuleCall getCommentINTERPRETATIONTerminalRuleCall_0_0() { return cCommentINTERPRETATIONTerminalRuleCall_0_0; }

		//optional="optional"?
		public Assignment getOptionalAssignment_1() { return cOptionalAssignment_1; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_1_0() { return cOptionalOptionalKeyword_1_0; }

		//ref=scopedType
		public Assignment getRefAssignment_2() { return cRefAssignment_2; }

		//scopedType
		public RuleCall getRefScopedTypeParserRuleCall_2_0() { return cRefScopedTypeParserRuleCall_2_0; }

		//scopedName=ID ";"
		public Group getGroup_3() { return cGroup_3; }

		//scopedName=ID
		public Assignment getScopedNameAssignment_3_0() { return cScopedNameAssignment_3_0; }

		//ID
		public RuleCall getScopedNameIDTerminalRuleCall_3_0_0() { return cScopedNameIDTerminalRuleCall_3_0_0; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}

	public class ScopedConstIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "scopedConstId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cNameEObjectCrossReference_0_0 = (CrossReference)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNameEObjectIDTerminalRuleCall_0_0_1 = (RuleCall)cNameEObjectCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cNamesEObjectCrossReference_1_1_0 = (CrossReference)cNamesAssignment_1_1.eContents().get(0);
		private final RuleCall cNamesEObjectIDTerminalRuleCall_1_1_0_1 = (RuleCall)cNamesEObjectCrossReference_1_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeConstDefCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeConstDefIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeConstDefCrossReference_3_0.eContents().get(1);
		
		//scopedConstId:
		//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[constDef];
		public ParserRule getRule() { return rule; }

		//name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[constDef]
		public Group getGroup() { return cGroup; }

		//name=[ecore::EObject]
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//[ecore::EObject]
		public CrossReference getNameEObjectCrossReference_0_0() { return cNameEObjectCrossReference_0_0; }

		//ID
		public RuleCall getNameEObjectIDTerminalRuleCall_0_0_1() { return cNameEObjectIDTerminalRuleCall_0_0_1; }

		//("." names+=[ecore::EObject])*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//names+=[ecore::EObject]
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//[ecore::EObject]
		public CrossReference getNamesEObjectCrossReference_1_1_0() { return cNamesEObjectCrossReference_1_1_0; }

		//ID
		public RuleCall getNamesEObjectIDTerminalRuleCall_1_1_0_1() { return cNamesEObjectIDTerminalRuleCall_1_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//type=[constDef]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[constDef]
		public CrossReference getTypeConstDefCrossReference_3_0() { return cTypeConstDefCrossReference_3_0; }

		//ID
		public RuleCall getTypeConstDefIDTerminalRuleCall_3_0_1() { return cTypeConstDefIDTerminalRuleCall_3_0_1; }
	}

	public class URIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//URI returns ecore::EString:
		//	ID ("." ID)+;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)+
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)+
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	public class FIELD_FORMATElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "FIELD_FORMAT");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAUEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAUAUKeyword_0_0 = (Keyword)cAUEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBMPEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBMPBMPKeyword_1_0 = (Keyword)cBMPEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cJPEGEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cJPEGJPEGKeyword_2_0 = (Keyword)cJPEGEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMJPEGEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMJPEGMJPEGKeyword_3_0 = (Keyword)cMJPEGEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMPEG1EnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMPEG1MPEG1Keyword_4_0 = (Keyword)cMPEG1EnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMPEG2EnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMPEG2MPEG2Keyword_5_0 = (Keyword)cMPEG2EnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMP2EnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMP2MP2Keyword_6_0 = (Keyword)cMP2EnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cMP3EnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cMP3MP3Keyword_7_0 = (Keyword)cMP3EnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cMP4EnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cMP4MP4Keyword_8_0 = (Keyword)cMP4EnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cRAWEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cRAWRAWKeyword_9_0 = (Keyword)cRAWEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cWAVEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cWAVWAVKeyword_10_0 = (Keyword)cWAVEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cJAUS_MESSAGEEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cJAUS_MESSAGEJAUS_MESSAGEKeyword_11_0 = (Keyword)cJAUS_MESSAGEEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cXMLEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cXMLXMLKeyword_12_0 = (Keyword)cXMLEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cRNCEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cRNCRNCKeyword_13_0 = (Keyword)cRNCEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cRNGEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cRNGRNGKeyword_14_0 = (Keyword)cRNGEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cXSDEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cXSDXSDKeyword_15_0 = (Keyword)cXSDEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cUSER_DEFINEDEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cUSER_DEFINEDUser_definedKeyword_16_0 = (Keyword)cUSER_DEFINEDEnumLiteralDeclaration_16.eContents().get(0);
		
		//enum FIELD_FORMAT:
		//	AU | BMP | JPEG | MJPEG | MPEG1="MPEG-1" | MPEG2="MPEG-2" | MP2 | MP3 | MP4 | RAW | WAV | JAUS_MESSAGE | XML | RNC |
		//	RNG | XSD | USER_DEFINED="User_defined";
		public EnumRule getRule() { return rule; }

		//AU | BMP | JPEG | MJPEG | MPEG1="MPEG-1" | MPEG2="MPEG-2" | MP2 | MP3 | MP4 | RAW | WAV | JAUS_MESSAGE | XML | RNC | RNG
		//| XSD | USER_DEFINED="User_defined"
		public Alternatives getAlternatives() { return cAlternatives; }

		//AU
		public EnumLiteralDeclaration getAUEnumLiteralDeclaration_0() { return cAUEnumLiteralDeclaration_0; }

		//"AU"
		public Keyword getAUAUKeyword_0_0() { return cAUAUKeyword_0_0; }

		//BMP
		public EnumLiteralDeclaration getBMPEnumLiteralDeclaration_1() { return cBMPEnumLiteralDeclaration_1; }

		//"BMP"
		public Keyword getBMPBMPKeyword_1_0() { return cBMPBMPKeyword_1_0; }

		//JPEG
		public EnumLiteralDeclaration getJPEGEnumLiteralDeclaration_2() { return cJPEGEnumLiteralDeclaration_2; }

		//"JPEG"
		public Keyword getJPEGJPEGKeyword_2_0() { return cJPEGJPEGKeyword_2_0; }

		//MJPEG
		public EnumLiteralDeclaration getMJPEGEnumLiteralDeclaration_3() { return cMJPEGEnumLiteralDeclaration_3; }

		//"MJPEG"
		public Keyword getMJPEGMJPEGKeyword_3_0() { return cMJPEGMJPEGKeyword_3_0; }

		//MPEG1="MPEG-1"
		public EnumLiteralDeclaration getMPEG1EnumLiteralDeclaration_4() { return cMPEG1EnumLiteralDeclaration_4; }

		//"MPEG-1"
		public Keyword getMPEG1MPEG1Keyword_4_0() { return cMPEG1MPEG1Keyword_4_0; }

		//MPEG2="MPEG-2"
		public EnumLiteralDeclaration getMPEG2EnumLiteralDeclaration_5() { return cMPEG2EnumLiteralDeclaration_5; }

		//"MPEG-2"
		public Keyword getMPEG2MPEG2Keyword_5_0() { return cMPEG2MPEG2Keyword_5_0; }

		//MP2
		public EnumLiteralDeclaration getMP2EnumLiteralDeclaration_6() { return cMP2EnumLiteralDeclaration_6; }

		//"MP2"
		public Keyword getMP2MP2Keyword_6_0() { return cMP2MP2Keyword_6_0; }

		//MP3
		public EnumLiteralDeclaration getMP3EnumLiteralDeclaration_7() { return cMP3EnumLiteralDeclaration_7; }

		//"MP3"
		public Keyword getMP3MP3Keyword_7_0() { return cMP3MP3Keyword_7_0; }

		//MP4
		public EnumLiteralDeclaration getMP4EnumLiteralDeclaration_8() { return cMP4EnumLiteralDeclaration_8; }

		//"MP4"
		public Keyword getMP4MP4Keyword_8_0() { return cMP4MP4Keyword_8_0; }

		//RAW
		public EnumLiteralDeclaration getRAWEnumLiteralDeclaration_9() { return cRAWEnumLiteralDeclaration_9; }

		//"RAW"
		public Keyword getRAWRAWKeyword_9_0() { return cRAWRAWKeyword_9_0; }

		//WAV
		public EnumLiteralDeclaration getWAVEnumLiteralDeclaration_10() { return cWAVEnumLiteralDeclaration_10; }

		//"WAV"
		public Keyword getWAVWAVKeyword_10_0() { return cWAVWAVKeyword_10_0; }

		//JAUS_MESSAGE
		public EnumLiteralDeclaration getJAUS_MESSAGEEnumLiteralDeclaration_11() { return cJAUS_MESSAGEEnumLiteralDeclaration_11; }

		//"JAUS_MESSAGE"
		public Keyword getJAUS_MESSAGEJAUS_MESSAGEKeyword_11_0() { return cJAUS_MESSAGEJAUS_MESSAGEKeyword_11_0; }

		//XML
		public EnumLiteralDeclaration getXMLEnumLiteralDeclaration_12() { return cXMLEnumLiteralDeclaration_12; }

		//"XML"
		public Keyword getXMLXMLKeyword_12_0() { return cXMLXMLKeyword_12_0; }

		//RNC
		public EnumLiteralDeclaration getRNCEnumLiteralDeclaration_13() { return cRNCEnumLiteralDeclaration_13; }

		//"RNC"
		public Keyword getRNCRNCKeyword_13_0() { return cRNCRNCKeyword_13_0; }

		//RNG
		public EnumLiteralDeclaration getRNGEnumLiteralDeclaration_14() { return cRNGEnumLiteralDeclaration_14; }

		//"RNG"
		public Keyword getRNGRNGKeyword_14_0() { return cRNGRNGKeyword_14_0; }

		//XSD
		public EnumLiteralDeclaration getXSDEnumLiteralDeclaration_15() { return cXSDEnumLiteralDeclaration_15; }

		//"XSD"
		public Keyword getXSDXSDKeyword_15_0() { return cXSDXSDKeyword_15_0; }

		//USER_DEFINED="User_defined"
		public EnumLiteralDeclaration getUSER_DEFINEDEnumLiteralDeclaration_16() { return cUSER_DEFINEDEnumLiteralDeclaration_16; }

		//"User_defined"
		public Keyword getUSER_DEFINEDUser_definedKeyword_16_0() { return cUSER_DEFINEDUser_definedKeyword_16_0; }
	}

	public class UNITElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "UNIT");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMETEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMETERMeterKeyword_0_0 = (Keyword)cMETEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cKGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cKGKilogramKeyword_1_0 = (Keyword)cKGEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSECEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSECSecondKeyword_2_0 = (Keyword)cSECEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAMPEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAMPAmpereKeyword_3_0 = (Keyword)cAMPEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cKELVINEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cKELVINKelvinKeyword_4_0 = (Keyword)cKELVINEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMOLEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMOLEMoleKeyword_5_0 = (Keyword)cMOLEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cCANDELAEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cCANDELACandelaKeyword_6_0 = (Keyword)cCANDELAEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cONEEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cONEOneKeyword_7_0 = (Keyword)cONEEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cSQR_METEREnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cSQR_METERSquare_meterKeyword_8_0 = (Keyword)cSQR_METEREnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cCUBIC_METEREnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cCUBIC_METERCubic_meterKeyword_9_0 = (Keyword)cCUBIC_METEREnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cMETER_PER_SECEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cMETER_PER_SECMeter_per_secondKeyword_10_0 = (Keyword)cMETER_PER_SECEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cMETER_PER_SEC_SQREnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cMETER_PER_SEC_SQRMeter_per_second_squaredKeyword_11_0 = (Keyword)cMETER_PER_SEC_SQREnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cRECIPROCAL_METEREnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cRECIPROCAL_METERReciprocal_meterKeyword_12_0 = (Keyword)cRECIPROCAL_METEREnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cKG_PER_CUBIC_METEREnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cKG_PER_CUBIC_METERKilogram_per_cubic_meterKeyword_13_0 = (Keyword)cKG_PER_CUBIC_METEREnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cCUBICMETERPERKGEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cCUBICMETERPERKGCubic_meter_per_kilogramKeyword_14_0 = (Keyword)cCUBICMETERPERKGEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cAMPPERSQRMETEREnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cAMPPERSQRMETERAmpere_per_square_meterKeyword_15_0 = (Keyword)cAMPPERSQRMETEREnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cAMP_PER_METEREnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cAMP_PER_METERAmpere_per_meterKeyword_16_0 = (Keyword)cAMP_PER_METEREnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cMOLE_PER_CUBIC_METEREnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cMOLE_PER_CUBIC_METERMole_per_cubic_meterKeyword_17_0 = (Keyword)cMOLE_PER_CUBIC_METEREnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cCANDELA_PER_SQUARE_METEREnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cCANDELA_PER_SQUARE_METERCandela_per_square_meterKeyword_18_0 = (Keyword)cCANDELA_PER_SQUARE_METEREnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cRADIANEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cRADIANRadianKeyword_19_0 = (Keyword)cRADIANEnumLiteralDeclaration_19.eContents().get(0);
		private final EnumLiteralDeclaration cSTE_RADEnumLiteralDeclaration_20 = (EnumLiteralDeclaration)cAlternatives.eContents().get(20);
		private final Keyword cSTE_RADSteradianKeyword_20_0 = (Keyword)cSTE_RADEnumLiteralDeclaration_20.eContents().get(0);
		private final EnumLiteralDeclaration cHRZEnumLiteralDeclaration_21 = (EnumLiteralDeclaration)cAlternatives.eContents().get(21);
		private final Keyword cHRZHertzKeyword_21_0 = (Keyword)cHRZEnumLiteralDeclaration_21.eContents().get(0);
		private final EnumLiteralDeclaration cNEWTONEnumLiteralDeclaration_22 = (EnumLiteralDeclaration)cAlternatives.eContents().get(22);
		private final Keyword cNEWTONNewtonKeyword_22_0 = (Keyword)cNEWTONEnumLiteralDeclaration_22.eContents().get(0);
		private final EnumLiteralDeclaration cPASCALEnumLiteralDeclaration_23 = (EnumLiteralDeclaration)cAlternatives.eContents().get(23);
		private final Keyword cPASCALPascalKeyword_23_0 = (Keyword)cPASCALEnumLiteralDeclaration_23.eContents().get(0);
		private final EnumLiteralDeclaration cJOULEEnumLiteralDeclaration_24 = (EnumLiteralDeclaration)cAlternatives.eContents().get(24);
		private final Keyword cJOULEJouleKeyword_24_0 = (Keyword)cJOULEEnumLiteralDeclaration_24.eContents().get(0);
		private final EnumLiteralDeclaration cWATTEnumLiteralDeclaration_25 = (EnumLiteralDeclaration)cAlternatives.eContents().get(25);
		private final Keyword cWATTWattKeyword_25_0 = (Keyword)cWATTEnumLiteralDeclaration_25.eContents().get(0);
		private final EnumLiteralDeclaration cCOULOMBEnumLiteralDeclaration_26 = (EnumLiteralDeclaration)cAlternatives.eContents().get(26);
		private final Keyword cCOULOMBCoulombKeyword_26_0 = (Keyword)cCOULOMBEnumLiteralDeclaration_26.eContents().get(0);
		private final EnumLiteralDeclaration cVOLTEnumLiteralDeclaration_27 = (EnumLiteralDeclaration)cAlternatives.eContents().get(27);
		private final Keyword cVOLTVoltKeyword_27_0 = (Keyword)cVOLTEnumLiteralDeclaration_27.eContents().get(0);
		private final EnumLiteralDeclaration cFARADEnumLiteralDeclaration_28 = (EnumLiteralDeclaration)cAlternatives.eContents().get(28);
		private final Keyword cFARADFaradKeyword_28_0 = (Keyword)cFARADEnumLiteralDeclaration_28.eContents().get(0);
		private final EnumLiteralDeclaration cOHMEnumLiteralDeclaration_29 = (EnumLiteralDeclaration)cAlternatives.eContents().get(29);
		private final Keyword cOHMOhmKeyword_29_0 = (Keyword)cOHMEnumLiteralDeclaration_29.eContents().get(0);
		private final EnumLiteralDeclaration cSIEMENSEnumLiteralDeclaration_30 = (EnumLiteralDeclaration)cAlternatives.eContents().get(30);
		private final Keyword cSIEMENSSiemensKeyword_30_0 = (Keyword)cSIEMENSEnumLiteralDeclaration_30.eContents().get(0);
		private final EnumLiteralDeclaration cWEBEREnumLiteralDeclaration_31 = (EnumLiteralDeclaration)cAlternatives.eContents().get(31);
		private final Keyword cWEBERWeberKeyword_31_0 = (Keyword)cWEBEREnumLiteralDeclaration_31.eContents().get(0);
		private final EnumLiteralDeclaration cTESLAEnumLiteralDeclaration_32 = (EnumLiteralDeclaration)cAlternatives.eContents().get(32);
		private final Keyword cTESLATeslaKeyword_32_0 = (Keyword)cTESLAEnumLiteralDeclaration_32.eContents().get(0);
		private final EnumLiteralDeclaration cHENRYEnumLiteralDeclaration_33 = (EnumLiteralDeclaration)cAlternatives.eContents().get(33);
		private final Keyword cHENRYHenryKeyword_33_0 = (Keyword)cHENRYEnumLiteralDeclaration_33.eContents().get(0);
		private final EnumLiteralDeclaration cCELSIUSEnumLiteralDeclaration_34 = (EnumLiteralDeclaration)cAlternatives.eContents().get(34);
		private final Keyword cCELSIUSDegree_CelsiusKeyword_34_0 = (Keyword)cCELSIUSEnumLiteralDeclaration_34.eContents().get(0);
		private final EnumLiteralDeclaration cLUMENEnumLiteralDeclaration_35 = (EnumLiteralDeclaration)cAlternatives.eContents().get(35);
		private final Keyword cLUMENLumenKeyword_35_0 = (Keyword)cLUMENEnumLiteralDeclaration_35.eContents().get(0);
		private final EnumLiteralDeclaration cLUXEnumLiteralDeclaration_36 = (EnumLiteralDeclaration)cAlternatives.eContents().get(36);
		private final Keyword cLUXLuxKeyword_36_0 = (Keyword)cLUXEnumLiteralDeclaration_36.eContents().get(0);
		private final EnumLiteralDeclaration cBECQUERELEnumLiteralDeclaration_37 = (EnumLiteralDeclaration)cAlternatives.eContents().get(37);
		private final Keyword cBECQUERELBecquerelKeyword_37_0 = (Keyword)cBECQUERELEnumLiteralDeclaration_37.eContents().get(0);
		private final EnumLiteralDeclaration cSIEVERTEnumLiteralDeclaration_38 = (EnumLiteralDeclaration)cAlternatives.eContents().get(38);
		private final Keyword cSIEVERTSievertKeyword_38_0 = (Keyword)cSIEVERTEnumLiteralDeclaration_38.eContents().get(0);
		private final EnumLiteralDeclaration cKATALEnumLiteralDeclaration_39 = (EnumLiteralDeclaration)cAlternatives.eContents().get(39);
		private final Keyword cKATALKatalKeyword_39_0 = (Keyword)cKATALEnumLiteralDeclaration_39.eContents().get(0);
		private final EnumLiteralDeclaration cPASCAL_SECEnumLiteralDeclaration_40 = (EnumLiteralDeclaration)cAlternatives.eContents().get(40);
		private final Keyword cPASCAL_SECPascal_secondKeyword_40_0 = (Keyword)cPASCAL_SECEnumLiteralDeclaration_40.eContents().get(0);
		private final EnumLiteralDeclaration cNEWTON_METEREnumLiteralDeclaration_41 = (EnumLiteralDeclaration)cAlternatives.eContents().get(41);
		private final Keyword cNEWTON_METERNewton_meterKeyword_41_0 = (Keyword)cNEWTON_METEREnumLiteralDeclaration_41.eContents().get(0);
		private final EnumLiteralDeclaration cNEWTON_PER_METEREnumLiteralDeclaration_42 = (EnumLiteralDeclaration)cAlternatives.eContents().get(42);
		private final Keyword cNEWTON_PER_METERNewton_per_meterKeyword_42_0 = (Keyword)cNEWTON_PER_METEREnumLiteralDeclaration_42.eContents().get(0);
		private final EnumLiteralDeclaration cRAD_PER_SECEnumLiteralDeclaration_43 = (EnumLiteralDeclaration)cAlternatives.eContents().get(43);
		private final Keyword cRAD_PER_SECRadian_per_secondKeyword_43_0 = (Keyword)cRAD_PER_SECEnumLiteralDeclaration_43.eContents().get(0);
		private final EnumLiteralDeclaration cRAD_PER_SEC_SQREnumLiteralDeclaration_44 = (EnumLiteralDeclaration)cAlternatives.eContents().get(44);
		private final Keyword cRAD_PER_SEC_SQRRadian_per_second_squaredKeyword_44_0 = (Keyword)cRAD_PER_SEC_SQREnumLiteralDeclaration_44.eContents().get(0);
		private final EnumLiteralDeclaration cWATT_PER_SQR_METEREnumLiteralDeclaration_45 = (EnumLiteralDeclaration)cAlternatives.eContents().get(45);
		private final Keyword cWATT_PER_SQR_METERWatt_per_square_meterKeyword_45_0 = (Keyword)cWATT_PER_SQR_METEREnumLiteralDeclaration_45.eContents().get(0);
		private final EnumLiteralDeclaration cJOULE_PER_KELVINEnumLiteralDeclaration_46 = (EnumLiteralDeclaration)cAlternatives.eContents().get(46);
		private final Keyword cJOULE_PER_KELVINJoule_per_kelvinKeyword_46_0 = (Keyword)cJOULE_PER_KELVINEnumLiteralDeclaration_46.eContents().get(0);
		private final EnumLiteralDeclaration cJOULE_PER_KGEnumLiteralDeclaration_47 = (EnumLiteralDeclaration)cAlternatives.eContents().get(47);
		private final Keyword cJOULE_PER_KGJoule_per_kilogramKeyword_47_0 = (Keyword)cJOULE_PER_KGEnumLiteralDeclaration_47.eContents().get(0);
		private final EnumLiteralDeclaration cWATT_PER_METER_KELVINEnumLiteralDeclaration_48 = (EnumLiteralDeclaration)cAlternatives.eContents().get(48);
		private final Keyword cWATT_PER_METER_KELVINWatt_per_meter_kelvinKeyword_48_0 = (Keyword)cWATT_PER_METER_KELVINEnumLiteralDeclaration_48.eContents().get(0);
		private final EnumLiteralDeclaration cJOULES_PER_CUBIC_METEREnumLiteralDeclaration_49 = (EnumLiteralDeclaration)cAlternatives.eContents().get(49);
		private final Keyword cJOULES_PER_CUBIC_METERJoule_per_cubic_meterKeyword_49_0 = (Keyword)cJOULES_PER_CUBIC_METEREnumLiteralDeclaration_49.eContents().get(0);
		private final EnumLiteralDeclaration cVOLT_PER_METEREnumLiteralDeclaration_50 = (EnumLiteralDeclaration)cAlternatives.eContents().get(50);
		private final Keyword cVOLT_PER_METERVolt_per_meterKeyword_50_0 = (Keyword)cVOLT_PER_METEREnumLiteralDeclaration_50.eContents().get(0);
		private final EnumLiteralDeclaration cCOULOMB_PER_CUBIC_METEREnumLiteralDeclaration_51 = (EnumLiteralDeclaration)cAlternatives.eContents().get(51);
		private final Keyword cCOULOMB_PER_CUBIC_METERCoulomb_per_cubic_meterKeyword_51_0 = (Keyword)cCOULOMB_PER_CUBIC_METEREnumLiteralDeclaration_51.eContents().get(0);
		private final EnumLiteralDeclaration cCOULOMB_PER_SQR_METEREnumLiteralDeclaration_52 = (EnumLiteralDeclaration)cAlternatives.eContents().get(52);
		private final Keyword cCOULOMB_PER_SQR_METERCoulomb_per_square_meterKeyword_52_0 = (Keyword)cCOULOMB_PER_SQR_METEREnumLiteralDeclaration_52.eContents().get(0);
		private final EnumLiteralDeclaration cFARAD_PER_METEREnumLiteralDeclaration_53 = (EnumLiteralDeclaration)cAlternatives.eContents().get(53);
		private final Keyword cFARAD_PER_METERFarad_per_meterKeyword_53_0 = (Keyword)cFARAD_PER_METEREnumLiteralDeclaration_53.eContents().get(0);
		private final EnumLiteralDeclaration cHENRY_PER_METEREnumLiteralDeclaration_54 = (EnumLiteralDeclaration)cAlternatives.eContents().get(54);
		private final Keyword cHENRY_PER_METERHenry_per_meterKeyword_54_0 = (Keyword)cHENRY_PER_METEREnumLiteralDeclaration_54.eContents().get(0);
		private final EnumLiteralDeclaration cJOULE_PER_MOLEEnumLiteralDeclaration_55 = (EnumLiteralDeclaration)cAlternatives.eContents().get(55);
		private final Keyword cJOULE_PER_MOLEJoule_per_moleKeyword_55_0 = (Keyword)cJOULE_PER_MOLEEnumLiteralDeclaration_55.eContents().get(0);
		private final EnumLiteralDeclaration cJOULE_PER_MOLE_KELVINEnumLiteralDeclaration_56 = (EnumLiteralDeclaration)cAlternatives.eContents().get(56);
		private final Keyword cJOULE_PER_MOLE_KELVINJoule_per_mole_kelvinKeyword_56_0 = (Keyword)cJOULE_PER_MOLE_KELVINEnumLiteralDeclaration_56.eContents().get(0);
		private final EnumLiteralDeclaration cCOULOMB_PER_KGEnumLiteralDeclaration_57 = (EnumLiteralDeclaration)cAlternatives.eContents().get(57);
		private final Keyword cCOULOMB_PER_KGCoulomb_per_kilogramKeyword_57_0 = (Keyword)cCOULOMB_PER_KGEnumLiteralDeclaration_57.eContents().get(0);
		private final EnumLiteralDeclaration cGRAY_PER_SECEnumLiteralDeclaration_58 = (EnumLiteralDeclaration)cAlternatives.eContents().get(58);
		private final Keyword cGRAY_PER_SECGray_per_secondKeyword_58_0 = (Keyword)cGRAY_PER_SECEnumLiteralDeclaration_58.eContents().get(0);
		private final EnumLiteralDeclaration cWATT_PER_SQR_METER_STERADEnumLiteralDeclaration_59 = (EnumLiteralDeclaration)cAlternatives.eContents().get(59);
		private final Keyword cWATT_PER_SQR_METER_STERADWatt_per_square_meter_steradianKeyword_59_0 = (Keyword)cWATT_PER_SQR_METER_STERADEnumLiteralDeclaration_59.eContents().get(0);
		private final EnumLiteralDeclaration cKATAL_PER_CUBIC_METEREnumLiteralDeclaration_60 = (EnumLiteralDeclaration)cAlternatives.eContents().get(60);
		private final Keyword cKATAL_PER_CUBIC_METERKatal_per_cubic_meterKeyword_60_0 = (Keyword)cKATAL_PER_CUBIC_METEREnumLiteralDeclaration_60.eContents().get(0);
		private final EnumLiteralDeclaration cMINEnumLiteralDeclaration_61 = (EnumLiteralDeclaration)cAlternatives.eContents().get(61);
		private final Keyword cMINMinuteKeyword_61_0 = (Keyword)cMINEnumLiteralDeclaration_61.eContents().get(0);
		private final EnumLiteralDeclaration cHOUREnumLiteralDeclaration_62 = (EnumLiteralDeclaration)cAlternatives.eContents().get(62);
		private final Keyword cHOURHourKeyword_62_0 = (Keyword)cHOUREnumLiteralDeclaration_62.eContents().get(0);
		private final EnumLiteralDeclaration cDAYEnumLiteralDeclaration_63 = (EnumLiteralDeclaration)cAlternatives.eContents().get(63);
		private final Keyword cDAYDayKeyword_63_0 = (Keyword)cDAYEnumLiteralDeclaration_63.eContents().get(0);
		private final EnumLiteralDeclaration cDEGREEEnumLiteralDeclaration_64 = (EnumLiteralDeclaration)cAlternatives.eContents().get(64);
		private final Keyword cDEGREEDegreeKeyword_64_0 = (Keyword)cDEGREEEnumLiteralDeclaration_64.eContents().get(0);
		private final EnumLiteralDeclaration cLTREnumLiteralDeclaration_65 = (EnumLiteralDeclaration)cAlternatives.eContents().get(65);
		private final Keyword cLTRLiterKeyword_65_0 = (Keyword)cLTREnumLiteralDeclaration_65.eContents().get(0);
		private final EnumLiteralDeclaration cMTONEnumLiteralDeclaration_66 = (EnumLiteralDeclaration)cAlternatives.eContents().get(66);
		private final Keyword cMTONMetric_tonKeyword_66_0 = (Keyword)cMTONEnumLiteralDeclaration_66.eContents().get(0);
		private final EnumLiteralDeclaration cNEPEREnumLiteralDeclaration_67 = (EnumLiteralDeclaration)cAlternatives.eContents().get(67);
		private final Keyword cNEPERNeperKeyword_67_0 = (Keyword)cNEPEREnumLiteralDeclaration_67.eContents().get(0);
		private final EnumLiteralDeclaration cBELEnumLiteralDeclaration_68 = (EnumLiteralDeclaration)cAlternatives.eContents().get(68);
		private final Keyword cBELBelKeyword_68_0 = (Keyword)cBELEnumLiteralDeclaration_68.eContents().get(0);
		private final EnumLiteralDeclaration cNMILEEnumLiteralDeclaration_69 = (EnumLiteralDeclaration)cAlternatives.eContents().get(69);
		private final Keyword cNMILENautical_mileKeyword_69_0 = (Keyword)cNMILEEnumLiteralDeclaration_69.eContents().get(0);
		private final EnumLiteralDeclaration cKNOTEnumLiteralDeclaration_70 = (EnumLiteralDeclaration)cAlternatives.eContents().get(70);
		private final Keyword cKNOTKnotKeyword_70_0 = (Keyword)cKNOTEnumLiteralDeclaration_70.eContents().get(0);
		private final EnumLiteralDeclaration cAREEnumLiteralDeclaration_71 = (EnumLiteralDeclaration)cAlternatives.eContents().get(71);
		private final Keyword cAREAreKeyword_71_0 = (Keyword)cAREEnumLiteralDeclaration_71.eContents().get(0);
		private final EnumLiteralDeclaration cHECTAREEnumLiteralDeclaration_72 = (EnumLiteralDeclaration)cAlternatives.eContents().get(72);
		private final Keyword cHECTAREHectareKeyword_72_0 = (Keyword)cHECTAREEnumLiteralDeclaration_72.eContents().get(0);
		private final EnumLiteralDeclaration cBAREnumLiteralDeclaration_73 = (EnumLiteralDeclaration)cAlternatives.eContents().get(73);
		private final Keyword cBARBarKeyword_73_0 = (Keyword)cBAREnumLiteralDeclaration_73.eContents().get(0);
		private final EnumLiteralDeclaration cANGSROMEnumLiteralDeclaration_74 = (EnumLiteralDeclaration)cAlternatives.eContents().get(74);
		private final Keyword cANGSROMAngstromKeyword_74_0 = (Keyword)cANGSROMEnumLiteralDeclaration_74.eContents().get(0);
		private final EnumLiteralDeclaration cBARNEnumLiteralDeclaration_75 = (EnumLiteralDeclaration)cAlternatives.eContents().get(75);
		private final Keyword cBARNBarnKeyword_75_0 = (Keyword)cBARNEnumLiteralDeclaration_75.eContents().get(0);
		private final EnumLiteralDeclaration cCURIEEnumLiteralDeclaration_76 = (EnumLiteralDeclaration)cAlternatives.eContents().get(76);
		private final Keyword cCURIECurieKeyword_76_0 = (Keyword)cCURIEEnumLiteralDeclaration_76.eContents().get(0);
		private final EnumLiteralDeclaration cROENTGENEnumLiteralDeclaration_77 = (EnumLiteralDeclaration)cAlternatives.eContents().get(77);
		private final Keyword cROENTGENRoentgenKeyword_77_0 = (Keyword)cROENTGENEnumLiteralDeclaration_77.eContents().get(0);
		private final EnumLiteralDeclaration cRADEnumLiteralDeclaration_78 = (EnumLiteralDeclaration)cAlternatives.eContents().get(78);
		private final Keyword cRADRadKeyword_78_0 = (Keyword)cRADEnumLiteralDeclaration_78.eContents().get(0);
		private final EnumLiteralDeclaration cREMEnumLiteralDeclaration_79 = (EnumLiteralDeclaration)cAlternatives.eContents().get(79);
		private final Keyword cREMRemKeyword_79_0 = (Keyword)cREMEnumLiteralDeclaration_79.eContents().get(0);
		
		//enum UNIT:
		//	METER="meter" //'one' | 
		//
		//	| KG="kilogram" | SEC="second" | AMP="ampere" | KELVIN="kelvin" | MOLE="mole" | CANDELA="candela" | ONE="one" | // derived units
		//
		//	SQR_METER="square_meter" | CUBIC_METER="cubic_meter" | METER_PER_SEC="meter_per_second" |
		//	METER_PER_SEC_SQR="meter_per_second_squared" | RECIPROCAL_METER="reciprocal_meter" |
		//	KG_PER_CUBIC_METER="kilogram_per_cubic_meter" | CUBICMETERPERKG="cubic_meter_per_kilogram" |
		//	AMPPERSQRMETER="ampere_per_square_meter" | AMP_PER_METER="ampere_per_meter" |
		//	MOLE_PER_CUBIC_METER="mole_per_cubic_meter" | CANDELA_PER_SQUARE_METER="candela_per_square_meter" | // derived units with special names and symbols
		//
		//	RADIAN="radian" | STE_RAD="steradian" | HRZ="hertz" | NEWTON="newton" | PASCAL="pascal" | JOULE="joule" | WATT="watt" |
		//	COULOMB="coulomb" | VOLT="volt" | FARAD="farad" | OHM="ohm" | SIEMENS="siemens" | WEBER="weber" | TESLA="tesla" |
		//	HENRY="henry" | CELSIUS="degree_Celsius" | LUMEN="lumen" | LUX="lux" | BECQUEREL="becquerel" | SIEVERT="sievert" |
		//	KATAL="katal" | PASCAL_SEC="pascal_second" | NEWTON_METER="newton_meter" | NEWTON_PER_METER="newton_per_meter" |
		//	RAD_PER_SEC="radian_per_second" | RAD_PER_SEC_SQR="radian_per_second_squared" |
		//	WATT_PER_SQR_METER="watt_per_square_meter" | JOULE_PER_KELVIN="joule_per_kelvin" | JOULE_PER_KG="joule_per_kilogram" |
		//	WATT_PER_METER_KELVIN="watt_per_meter_kelvin" | JOULES_PER_CUBIC_METER="joule_per_cubic_meter" |
		//	VOLT_PER_METER="volt_per_meter" | COULOMB_PER_CUBIC_METER="coulomb_per_cubic_meter" |
		//	COULOMB_PER_SQR_METER="coulomb_per_square_meter" | FARAD_PER_METER="farad_per_meter" |
		//	HENRY_PER_METER="henry_per_meter" | JOULE_PER_MOLE="joule_per_mole" | JOULE_PER_MOLE_KELVIN="joule_per_mole_kelvin" |
		//	COULOMB_PER_KG="coulomb_per_kilogram" | GRAY_PER_SEC="gray_per_second" |
		//	WATT_PER_SQR_METER_STERAD="watt_per_square_meter_steradian" | KATAL_PER_CUBIC_METER="katal_per_cubic_meter" | // Non-SI units accepted for use with the International System
		//
		//	// 'second' is already SI
		//
		//	MIN="minute" | HOUR="hour" | DAY="day" | DEGREE="degree" | LTR="liter" | MTON="metric_ton" | NEPER="neper" | BEL="bel"
		//	| NMILE="nautical_mile" | KNOT="knot" | ARE="are" | HECTARE="hectare" | BAR="bar" | ANGSROM="angstrom" | BARN="barn" |
		//	CURIE="curie" | ROENTGEN="roentgen" | RAD="rad" | REM="rem";
		public EnumRule getRule() { return rule; }

		//METER="meter" //'one' | 
		//
		//| KG="kilogram" | SEC="second" | AMP="ampere" | KELVIN="kelvin" | MOLE="mole" | CANDELA="candela" | ONE="one" | // derived units
		//
		//SQR_METER="square_meter" | CUBIC_METER="cubic_meter" | METER_PER_SEC="meter_per_second" |
		//METER_PER_SEC_SQR="meter_per_second_squared" | RECIPROCAL_METER="reciprocal_meter" |
		//KG_PER_CUBIC_METER="kilogram_per_cubic_meter" | CUBICMETERPERKG="cubic_meter_per_kilogram" |
		//AMPPERSQRMETER="ampere_per_square_meter" | AMP_PER_METER="ampere_per_meter" |
		//MOLE_PER_CUBIC_METER="mole_per_cubic_meter" | CANDELA_PER_SQUARE_METER="candela_per_square_meter" | // derived units with special names and symbols
		//
		//RADIAN="radian" | STE_RAD="steradian" | HRZ="hertz" | NEWTON="newton" | PASCAL="pascal" | JOULE="joule" | WATT="watt" |
		//COULOMB="coulomb" | VOLT="volt" | FARAD="farad" | OHM="ohm" | SIEMENS="siemens" | WEBER="weber" | TESLA="tesla" |
		//HENRY="henry" | CELSIUS="degree_Celsius" | LUMEN="lumen" | LUX="lux" | BECQUEREL="becquerel" | SIEVERT="sievert" |
		//KATAL="katal" | PASCAL_SEC="pascal_second" | NEWTON_METER="newton_meter" | NEWTON_PER_METER="newton_per_meter" |
		//RAD_PER_SEC="radian_per_second" | RAD_PER_SEC_SQR="radian_per_second_squared" |
		//WATT_PER_SQR_METER="watt_per_square_meter" | JOULE_PER_KELVIN="joule_per_kelvin" | JOULE_PER_KG="joule_per_kilogram" |
		//WATT_PER_METER_KELVIN="watt_per_meter_kelvin" | JOULES_PER_CUBIC_METER="joule_per_cubic_meter" |
		//VOLT_PER_METER="volt_per_meter" | COULOMB_PER_CUBIC_METER="coulomb_per_cubic_meter" |
		//COULOMB_PER_SQR_METER="coulomb_per_square_meter" | FARAD_PER_METER="farad_per_meter" |
		//HENRY_PER_METER="henry_per_meter" | JOULE_PER_MOLE="joule_per_mole" | JOULE_PER_MOLE_KELVIN="joule_per_mole_kelvin" |
		//COULOMB_PER_KG="coulomb_per_kilogram" | GRAY_PER_SEC="gray_per_second" |
		//WATT_PER_SQR_METER_STERAD="watt_per_square_meter_steradian" | KATAL_PER_CUBIC_METER="katal_per_cubic_meter" | // Non-SI units accepted for use with the International System
		//
		//// 'second' is already SI
		//
		//MIN="minute" | HOUR="hour" | DAY="day" | DEGREE="degree" | LTR="liter" | MTON="metric_ton" | NEPER="neper" | BEL="bel" |
		//NMILE="nautical_mile" | KNOT="knot" | ARE="are" | HECTARE="hectare" | BAR="bar" | ANGSROM="angstrom" | BARN="barn" |
		//CURIE="curie" | ROENTGEN="roentgen" | RAD="rad" | REM="rem"
		public Alternatives getAlternatives() { return cAlternatives; }

		//METER="meter"
		public EnumLiteralDeclaration getMETEREnumLiteralDeclaration_0() { return cMETEREnumLiteralDeclaration_0; }

		//"meter"
		public Keyword getMETERMeterKeyword_0_0() { return cMETERMeterKeyword_0_0; }

		//KG="kilogram"
		public EnumLiteralDeclaration getKGEnumLiteralDeclaration_1() { return cKGEnumLiteralDeclaration_1; }

		//"kilogram"
		public Keyword getKGKilogramKeyword_1_0() { return cKGKilogramKeyword_1_0; }

		//SEC="second"
		public EnumLiteralDeclaration getSECEnumLiteralDeclaration_2() { return cSECEnumLiteralDeclaration_2; }

		//"second"
		public Keyword getSECSecondKeyword_2_0() { return cSECSecondKeyword_2_0; }

		//AMP="ampere"
		public EnumLiteralDeclaration getAMPEnumLiteralDeclaration_3() { return cAMPEnumLiteralDeclaration_3; }

		//"ampere"
		public Keyword getAMPAmpereKeyword_3_0() { return cAMPAmpereKeyword_3_0; }

		//KELVIN="kelvin"
		public EnumLiteralDeclaration getKELVINEnumLiteralDeclaration_4() { return cKELVINEnumLiteralDeclaration_4; }

		//"kelvin"
		public Keyword getKELVINKelvinKeyword_4_0() { return cKELVINKelvinKeyword_4_0; }

		//MOLE="mole"
		public EnumLiteralDeclaration getMOLEEnumLiteralDeclaration_5() { return cMOLEEnumLiteralDeclaration_5; }

		//"mole"
		public Keyword getMOLEMoleKeyword_5_0() { return cMOLEMoleKeyword_5_0; }

		//CANDELA="candela"
		public EnumLiteralDeclaration getCANDELAEnumLiteralDeclaration_6() { return cCANDELAEnumLiteralDeclaration_6; }

		//"candela"
		public Keyword getCANDELACandelaKeyword_6_0() { return cCANDELACandelaKeyword_6_0; }

		//ONE="one"
		public EnumLiteralDeclaration getONEEnumLiteralDeclaration_7() { return cONEEnumLiteralDeclaration_7; }

		//"one"
		public Keyword getONEOneKeyword_7_0() { return cONEOneKeyword_7_0; }

		//// derived units
		//
		//SQR_METER="square_meter"
		public EnumLiteralDeclaration getSQR_METEREnumLiteralDeclaration_8() { return cSQR_METEREnumLiteralDeclaration_8; }

		//"square_meter"
		public Keyword getSQR_METERSquare_meterKeyword_8_0() { return cSQR_METERSquare_meterKeyword_8_0; }

		//CUBIC_METER="cubic_meter"
		public EnumLiteralDeclaration getCUBIC_METEREnumLiteralDeclaration_9() { return cCUBIC_METEREnumLiteralDeclaration_9; }

		//"cubic_meter"
		public Keyword getCUBIC_METERCubic_meterKeyword_9_0() { return cCUBIC_METERCubic_meterKeyword_9_0; }

		//METER_PER_SEC="meter_per_second"
		public EnumLiteralDeclaration getMETER_PER_SECEnumLiteralDeclaration_10() { return cMETER_PER_SECEnumLiteralDeclaration_10; }

		//"meter_per_second"
		public Keyword getMETER_PER_SECMeter_per_secondKeyword_10_0() { return cMETER_PER_SECMeter_per_secondKeyword_10_0; }

		//METER_PER_SEC_SQR="meter_per_second_squared"
		public EnumLiteralDeclaration getMETER_PER_SEC_SQREnumLiteralDeclaration_11() { return cMETER_PER_SEC_SQREnumLiteralDeclaration_11; }

		//"meter_per_second_squared"
		public Keyword getMETER_PER_SEC_SQRMeter_per_second_squaredKeyword_11_0() { return cMETER_PER_SEC_SQRMeter_per_second_squaredKeyword_11_0; }

		//RECIPROCAL_METER="reciprocal_meter"
		public EnumLiteralDeclaration getRECIPROCAL_METEREnumLiteralDeclaration_12() { return cRECIPROCAL_METEREnumLiteralDeclaration_12; }

		//"reciprocal_meter"
		public Keyword getRECIPROCAL_METERReciprocal_meterKeyword_12_0() { return cRECIPROCAL_METERReciprocal_meterKeyword_12_0; }

		//KG_PER_CUBIC_METER="kilogram_per_cubic_meter"
		public EnumLiteralDeclaration getKG_PER_CUBIC_METEREnumLiteralDeclaration_13() { return cKG_PER_CUBIC_METEREnumLiteralDeclaration_13; }

		//"kilogram_per_cubic_meter"
		public Keyword getKG_PER_CUBIC_METERKilogram_per_cubic_meterKeyword_13_0() { return cKG_PER_CUBIC_METERKilogram_per_cubic_meterKeyword_13_0; }

		//CUBICMETERPERKG="cubic_meter_per_kilogram"
		public EnumLiteralDeclaration getCUBICMETERPERKGEnumLiteralDeclaration_14() { return cCUBICMETERPERKGEnumLiteralDeclaration_14; }

		//"cubic_meter_per_kilogram"
		public Keyword getCUBICMETERPERKGCubic_meter_per_kilogramKeyword_14_0() { return cCUBICMETERPERKGCubic_meter_per_kilogramKeyword_14_0; }

		//AMPPERSQRMETER="ampere_per_square_meter"
		public EnumLiteralDeclaration getAMPPERSQRMETEREnumLiteralDeclaration_15() { return cAMPPERSQRMETEREnumLiteralDeclaration_15; }

		//"ampere_per_square_meter"
		public Keyword getAMPPERSQRMETERAmpere_per_square_meterKeyword_15_0() { return cAMPPERSQRMETERAmpere_per_square_meterKeyword_15_0; }

		//AMP_PER_METER="ampere_per_meter"
		public EnumLiteralDeclaration getAMP_PER_METEREnumLiteralDeclaration_16() { return cAMP_PER_METEREnumLiteralDeclaration_16; }

		//"ampere_per_meter"
		public Keyword getAMP_PER_METERAmpere_per_meterKeyword_16_0() { return cAMP_PER_METERAmpere_per_meterKeyword_16_0; }

		//MOLE_PER_CUBIC_METER="mole_per_cubic_meter"
		public EnumLiteralDeclaration getMOLE_PER_CUBIC_METEREnumLiteralDeclaration_17() { return cMOLE_PER_CUBIC_METEREnumLiteralDeclaration_17; }

		//"mole_per_cubic_meter"
		public Keyword getMOLE_PER_CUBIC_METERMole_per_cubic_meterKeyword_17_0() { return cMOLE_PER_CUBIC_METERMole_per_cubic_meterKeyword_17_0; }

		//CANDELA_PER_SQUARE_METER="candela_per_square_meter"
		public EnumLiteralDeclaration getCANDELA_PER_SQUARE_METEREnumLiteralDeclaration_18() { return cCANDELA_PER_SQUARE_METEREnumLiteralDeclaration_18; }

		//"candela_per_square_meter"
		public Keyword getCANDELA_PER_SQUARE_METERCandela_per_square_meterKeyword_18_0() { return cCANDELA_PER_SQUARE_METERCandela_per_square_meterKeyword_18_0; }

		//// derived units with special names and symbols
		//
		//RADIAN="radian"
		public EnumLiteralDeclaration getRADIANEnumLiteralDeclaration_19() { return cRADIANEnumLiteralDeclaration_19; }

		//"radian"
		public Keyword getRADIANRadianKeyword_19_0() { return cRADIANRadianKeyword_19_0; }

		//STE_RAD="steradian"
		public EnumLiteralDeclaration getSTE_RADEnumLiteralDeclaration_20() { return cSTE_RADEnumLiteralDeclaration_20; }

		//"steradian"
		public Keyword getSTE_RADSteradianKeyword_20_0() { return cSTE_RADSteradianKeyword_20_0; }

		//HRZ="hertz"
		public EnumLiteralDeclaration getHRZEnumLiteralDeclaration_21() { return cHRZEnumLiteralDeclaration_21; }

		//"hertz"
		public Keyword getHRZHertzKeyword_21_0() { return cHRZHertzKeyword_21_0; }

		//NEWTON="newton"
		public EnumLiteralDeclaration getNEWTONEnumLiteralDeclaration_22() { return cNEWTONEnumLiteralDeclaration_22; }

		//"newton"
		public Keyword getNEWTONNewtonKeyword_22_0() { return cNEWTONNewtonKeyword_22_0; }

		//PASCAL="pascal"
		public EnumLiteralDeclaration getPASCALEnumLiteralDeclaration_23() { return cPASCALEnumLiteralDeclaration_23; }

		//"pascal"
		public Keyword getPASCALPascalKeyword_23_0() { return cPASCALPascalKeyword_23_0; }

		//JOULE="joule"
		public EnumLiteralDeclaration getJOULEEnumLiteralDeclaration_24() { return cJOULEEnumLiteralDeclaration_24; }

		//"joule"
		public Keyword getJOULEJouleKeyword_24_0() { return cJOULEJouleKeyword_24_0; }

		//WATT="watt"
		public EnumLiteralDeclaration getWATTEnumLiteralDeclaration_25() { return cWATTEnumLiteralDeclaration_25; }

		//"watt"
		public Keyword getWATTWattKeyword_25_0() { return cWATTWattKeyword_25_0; }

		//COULOMB="coulomb"
		public EnumLiteralDeclaration getCOULOMBEnumLiteralDeclaration_26() { return cCOULOMBEnumLiteralDeclaration_26; }

		//"coulomb"
		public Keyword getCOULOMBCoulombKeyword_26_0() { return cCOULOMBCoulombKeyword_26_0; }

		//VOLT="volt"
		public EnumLiteralDeclaration getVOLTEnumLiteralDeclaration_27() { return cVOLTEnumLiteralDeclaration_27; }

		//"volt"
		public Keyword getVOLTVoltKeyword_27_0() { return cVOLTVoltKeyword_27_0; }

		//FARAD="farad"
		public EnumLiteralDeclaration getFARADEnumLiteralDeclaration_28() { return cFARADEnumLiteralDeclaration_28; }

		//"farad"
		public Keyword getFARADFaradKeyword_28_0() { return cFARADFaradKeyword_28_0; }

		//OHM="ohm"
		public EnumLiteralDeclaration getOHMEnumLiteralDeclaration_29() { return cOHMEnumLiteralDeclaration_29; }

		//"ohm"
		public Keyword getOHMOhmKeyword_29_0() { return cOHMOhmKeyword_29_0; }

		//SIEMENS="siemens"
		public EnumLiteralDeclaration getSIEMENSEnumLiteralDeclaration_30() { return cSIEMENSEnumLiteralDeclaration_30; }

		//"siemens"
		public Keyword getSIEMENSSiemensKeyword_30_0() { return cSIEMENSSiemensKeyword_30_0; }

		//WEBER="weber"
		public EnumLiteralDeclaration getWEBEREnumLiteralDeclaration_31() { return cWEBEREnumLiteralDeclaration_31; }

		//"weber"
		public Keyword getWEBERWeberKeyword_31_0() { return cWEBERWeberKeyword_31_0; }

		//TESLA="tesla"
		public EnumLiteralDeclaration getTESLAEnumLiteralDeclaration_32() { return cTESLAEnumLiteralDeclaration_32; }

		//"tesla"
		public Keyword getTESLATeslaKeyword_32_0() { return cTESLATeslaKeyword_32_0; }

		//HENRY="henry"
		public EnumLiteralDeclaration getHENRYEnumLiteralDeclaration_33() { return cHENRYEnumLiteralDeclaration_33; }

		//"henry"
		public Keyword getHENRYHenryKeyword_33_0() { return cHENRYHenryKeyword_33_0; }

		//CELSIUS="degree_Celsius"
		public EnumLiteralDeclaration getCELSIUSEnumLiteralDeclaration_34() { return cCELSIUSEnumLiteralDeclaration_34; }

		//"degree_Celsius"
		public Keyword getCELSIUSDegree_CelsiusKeyword_34_0() { return cCELSIUSDegree_CelsiusKeyword_34_0; }

		//LUMEN="lumen"
		public EnumLiteralDeclaration getLUMENEnumLiteralDeclaration_35() { return cLUMENEnumLiteralDeclaration_35; }

		//"lumen"
		public Keyword getLUMENLumenKeyword_35_0() { return cLUMENLumenKeyword_35_0; }

		//LUX="lux"
		public EnumLiteralDeclaration getLUXEnumLiteralDeclaration_36() { return cLUXEnumLiteralDeclaration_36; }

		//"lux"
		public Keyword getLUXLuxKeyword_36_0() { return cLUXLuxKeyword_36_0; }

		//BECQUEREL="becquerel"
		public EnumLiteralDeclaration getBECQUERELEnumLiteralDeclaration_37() { return cBECQUERELEnumLiteralDeclaration_37; }

		//"becquerel"
		public Keyword getBECQUERELBecquerelKeyword_37_0() { return cBECQUERELBecquerelKeyword_37_0; }

		//SIEVERT="sievert"
		public EnumLiteralDeclaration getSIEVERTEnumLiteralDeclaration_38() { return cSIEVERTEnumLiteralDeclaration_38; }

		//"sievert"
		public Keyword getSIEVERTSievertKeyword_38_0() { return cSIEVERTSievertKeyword_38_0; }

		//KATAL="katal"
		public EnumLiteralDeclaration getKATALEnumLiteralDeclaration_39() { return cKATALEnumLiteralDeclaration_39; }

		//"katal"
		public Keyword getKATALKatalKeyword_39_0() { return cKATALKatalKeyword_39_0; }

		//PASCAL_SEC="pascal_second"
		public EnumLiteralDeclaration getPASCAL_SECEnumLiteralDeclaration_40() { return cPASCAL_SECEnumLiteralDeclaration_40; }

		//"pascal_second"
		public Keyword getPASCAL_SECPascal_secondKeyword_40_0() { return cPASCAL_SECPascal_secondKeyword_40_0; }

		//NEWTON_METER="newton_meter"
		public EnumLiteralDeclaration getNEWTON_METEREnumLiteralDeclaration_41() { return cNEWTON_METEREnumLiteralDeclaration_41; }

		//"newton_meter"
		public Keyword getNEWTON_METERNewton_meterKeyword_41_0() { return cNEWTON_METERNewton_meterKeyword_41_0; }

		//NEWTON_PER_METER="newton_per_meter"
		public EnumLiteralDeclaration getNEWTON_PER_METEREnumLiteralDeclaration_42() { return cNEWTON_PER_METEREnumLiteralDeclaration_42; }

		//"newton_per_meter"
		public Keyword getNEWTON_PER_METERNewton_per_meterKeyword_42_0() { return cNEWTON_PER_METERNewton_per_meterKeyword_42_0; }

		//RAD_PER_SEC="radian_per_second"
		public EnumLiteralDeclaration getRAD_PER_SECEnumLiteralDeclaration_43() { return cRAD_PER_SECEnumLiteralDeclaration_43; }

		//"radian_per_second"
		public Keyword getRAD_PER_SECRadian_per_secondKeyword_43_0() { return cRAD_PER_SECRadian_per_secondKeyword_43_0; }

		//RAD_PER_SEC_SQR="radian_per_second_squared"
		public EnumLiteralDeclaration getRAD_PER_SEC_SQREnumLiteralDeclaration_44() { return cRAD_PER_SEC_SQREnumLiteralDeclaration_44; }

		//"radian_per_second_squared"
		public Keyword getRAD_PER_SEC_SQRRadian_per_second_squaredKeyword_44_0() { return cRAD_PER_SEC_SQRRadian_per_second_squaredKeyword_44_0; }

		//WATT_PER_SQR_METER="watt_per_square_meter"
		public EnumLiteralDeclaration getWATT_PER_SQR_METEREnumLiteralDeclaration_45() { return cWATT_PER_SQR_METEREnumLiteralDeclaration_45; }

		//"watt_per_square_meter"
		public Keyword getWATT_PER_SQR_METERWatt_per_square_meterKeyword_45_0() { return cWATT_PER_SQR_METERWatt_per_square_meterKeyword_45_0; }

		//JOULE_PER_KELVIN="joule_per_kelvin"
		public EnumLiteralDeclaration getJOULE_PER_KELVINEnumLiteralDeclaration_46() { return cJOULE_PER_KELVINEnumLiteralDeclaration_46; }

		//"joule_per_kelvin"
		public Keyword getJOULE_PER_KELVINJoule_per_kelvinKeyword_46_0() { return cJOULE_PER_KELVINJoule_per_kelvinKeyword_46_0; }

		//JOULE_PER_KG="joule_per_kilogram"
		public EnumLiteralDeclaration getJOULE_PER_KGEnumLiteralDeclaration_47() { return cJOULE_PER_KGEnumLiteralDeclaration_47; }

		//"joule_per_kilogram"
		public Keyword getJOULE_PER_KGJoule_per_kilogramKeyword_47_0() { return cJOULE_PER_KGJoule_per_kilogramKeyword_47_0; }

		//WATT_PER_METER_KELVIN="watt_per_meter_kelvin"
		public EnumLiteralDeclaration getWATT_PER_METER_KELVINEnumLiteralDeclaration_48() { return cWATT_PER_METER_KELVINEnumLiteralDeclaration_48; }

		//"watt_per_meter_kelvin"
		public Keyword getWATT_PER_METER_KELVINWatt_per_meter_kelvinKeyword_48_0() { return cWATT_PER_METER_KELVINWatt_per_meter_kelvinKeyword_48_0; }

		//JOULES_PER_CUBIC_METER="joule_per_cubic_meter"
		public EnumLiteralDeclaration getJOULES_PER_CUBIC_METEREnumLiteralDeclaration_49() { return cJOULES_PER_CUBIC_METEREnumLiteralDeclaration_49; }

		//"joule_per_cubic_meter"
		public Keyword getJOULES_PER_CUBIC_METERJoule_per_cubic_meterKeyword_49_0() { return cJOULES_PER_CUBIC_METERJoule_per_cubic_meterKeyword_49_0; }

		//VOLT_PER_METER="volt_per_meter"
		public EnumLiteralDeclaration getVOLT_PER_METEREnumLiteralDeclaration_50() { return cVOLT_PER_METEREnumLiteralDeclaration_50; }

		//"volt_per_meter"
		public Keyword getVOLT_PER_METERVolt_per_meterKeyword_50_0() { return cVOLT_PER_METERVolt_per_meterKeyword_50_0; }

		//COULOMB_PER_CUBIC_METER="coulomb_per_cubic_meter"
		public EnumLiteralDeclaration getCOULOMB_PER_CUBIC_METEREnumLiteralDeclaration_51() { return cCOULOMB_PER_CUBIC_METEREnumLiteralDeclaration_51; }

		//"coulomb_per_cubic_meter"
		public Keyword getCOULOMB_PER_CUBIC_METERCoulomb_per_cubic_meterKeyword_51_0() { return cCOULOMB_PER_CUBIC_METERCoulomb_per_cubic_meterKeyword_51_0; }

		//COULOMB_PER_SQR_METER="coulomb_per_square_meter"
		public EnumLiteralDeclaration getCOULOMB_PER_SQR_METEREnumLiteralDeclaration_52() { return cCOULOMB_PER_SQR_METEREnumLiteralDeclaration_52; }

		//"coulomb_per_square_meter"
		public Keyword getCOULOMB_PER_SQR_METERCoulomb_per_square_meterKeyword_52_0() { return cCOULOMB_PER_SQR_METERCoulomb_per_square_meterKeyword_52_0; }

		//FARAD_PER_METER="farad_per_meter"
		public EnumLiteralDeclaration getFARAD_PER_METEREnumLiteralDeclaration_53() { return cFARAD_PER_METEREnumLiteralDeclaration_53; }

		//"farad_per_meter"
		public Keyword getFARAD_PER_METERFarad_per_meterKeyword_53_0() { return cFARAD_PER_METERFarad_per_meterKeyword_53_0; }

		//HENRY_PER_METER="henry_per_meter"
		public EnumLiteralDeclaration getHENRY_PER_METEREnumLiteralDeclaration_54() { return cHENRY_PER_METEREnumLiteralDeclaration_54; }

		//"henry_per_meter"
		public Keyword getHENRY_PER_METERHenry_per_meterKeyword_54_0() { return cHENRY_PER_METERHenry_per_meterKeyword_54_0; }

		//JOULE_PER_MOLE="joule_per_mole"
		public EnumLiteralDeclaration getJOULE_PER_MOLEEnumLiteralDeclaration_55() { return cJOULE_PER_MOLEEnumLiteralDeclaration_55; }

		//"joule_per_mole"
		public Keyword getJOULE_PER_MOLEJoule_per_moleKeyword_55_0() { return cJOULE_PER_MOLEJoule_per_moleKeyword_55_0; }

		//JOULE_PER_MOLE_KELVIN="joule_per_mole_kelvin"
		public EnumLiteralDeclaration getJOULE_PER_MOLE_KELVINEnumLiteralDeclaration_56() { return cJOULE_PER_MOLE_KELVINEnumLiteralDeclaration_56; }

		//"joule_per_mole_kelvin"
		public Keyword getJOULE_PER_MOLE_KELVINJoule_per_mole_kelvinKeyword_56_0() { return cJOULE_PER_MOLE_KELVINJoule_per_mole_kelvinKeyword_56_0; }

		//COULOMB_PER_KG="coulomb_per_kilogram"
		public EnumLiteralDeclaration getCOULOMB_PER_KGEnumLiteralDeclaration_57() { return cCOULOMB_PER_KGEnumLiteralDeclaration_57; }

		//"coulomb_per_kilogram"
		public Keyword getCOULOMB_PER_KGCoulomb_per_kilogramKeyword_57_0() { return cCOULOMB_PER_KGCoulomb_per_kilogramKeyword_57_0; }

		//GRAY_PER_SEC="gray_per_second"
		public EnumLiteralDeclaration getGRAY_PER_SECEnumLiteralDeclaration_58() { return cGRAY_PER_SECEnumLiteralDeclaration_58; }

		//"gray_per_second"
		public Keyword getGRAY_PER_SECGray_per_secondKeyword_58_0() { return cGRAY_PER_SECGray_per_secondKeyword_58_0; }

		//WATT_PER_SQR_METER_STERAD="watt_per_square_meter_steradian"
		public EnumLiteralDeclaration getWATT_PER_SQR_METER_STERADEnumLiteralDeclaration_59() { return cWATT_PER_SQR_METER_STERADEnumLiteralDeclaration_59; }

		//"watt_per_square_meter_steradian"
		public Keyword getWATT_PER_SQR_METER_STERADWatt_per_square_meter_steradianKeyword_59_0() { return cWATT_PER_SQR_METER_STERADWatt_per_square_meter_steradianKeyword_59_0; }

		//KATAL_PER_CUBIC_METER="katal_per_cubic_meter"
		public EnumLiteralDeclaration getKATAL_PER_CUBIC_METEREnumLiteralDeclaration_60() { return cKATAL_PER_CUBIC_METEREnumLiteralDeclaration_60; }

		//"katal_per_cubic_meter"
		public Keyword getKATAL_PER_CUBIC_METERKatal_per_cubic_meterKeyword_60_0() { return cKATAL_PER_CUBIC_METERKatal_per_cubic_meterKeyword_60_0; }

		//// Non-SI units accepted for use with the International System
		//
		//// 'second' is already SI
		//
		//MIN="minute"
		public EnumLiteralDeclaration getMINEnumLiteralDeclaration_61() { return cMINEnumLiteralDeclaration_61; }

		//"minute"
		public Keyword getMINMinuteKeyword_61_0() { return cMINMinuteKeyword_61_0; }

		//HOUR="hour"
		public EnumLiteralDeclaration getHOUREnumLiteralDeclaration_62() { return cHOUREnumLiteralDeclaration_62; }

		//"hour"
		public Keyword getHOURHourKeyword_62_0() { return cHOURHourKeyword_62_0; }

		//DAY="day"
		public EnumLiteralDeclaration getDAYEnumLiteralDeclaration_63() { return cDAYEnumLiteralDeclaration_63; }

		//"day"
		public Keyword getDAYDayKeyword_63_0() { return cDAYDayKeyword_63_0; }

		//DEGREE="degree"
		public EnumLiteralDeclaration getDEGREEEnumLiteralDeclaration_64() { return cDEGREEEnumLiteralDeclaration_64; }

		//"degree"
		public Keyword getDEGREEDegreeKeyword_64_0() { return cDEGREEDegreeKeyword_64_0; }

		//LTR="liter"
		public EnumLiteralDeclaration getLTREnumLiteralDeclaration_65() { return cLTREnumLiteralDeclaration_65; }

		//"liter"
		public Keyword getLTRLiterKeyword_65_0() { return cLTRLiterKeyword_65_0; }

		//MTON="metric_ton"
		public EnumLiteralDeclaration getMTONEnumLiteralDeclaration_66() { return cMTONEnumLiteralDeclaration_66; }

		//"metric_ton"
		public Keyword getMTONMetric_tonKeyword_66_0() { return cMTONMetric_tonKeyword_66_0; }

		//NEPER="neper"
		public EnumLiteralDeclaration getNEPEREnumLiteralDeclaration_67() { return cNEPEREnumLiteralDeclaration_67; }

		//"neper"
		public Keyword getNEPERNeperKeyword_67_0() { return cNEPERNeperKeyword_67_0; }

		//BEL="bel"
		public EnumLiteralDeclaration getBELEnumLiteralDeclaration_68() { return cBELEnumLiteralDeclaration_68; }

		//"bel"
		public Keyword getBELBelKeyword_68_0() { return cBELBelKeyword_68_0; }

		//NMILE="nautical_mile"
		public EnumLiteralDeclaration getNMILEEnumLiteralDeclaration_69() { return cNMILEEnumLiteralDeclaration_69; }

		//"nautical_mile"
		public Keyword getNMILENautical_mileKeyword_69_0() { return cNMILENautical_mileKeyword_69_0; }

		//KNOT="knot"
		public EnumLiteralDeclaration getKNOTEnumLiteralDeclaration_70() { return cKNOTEnumLiteralDeclaration_70; }

		//"knot"
		public Keyword getKNOTKnotKeyword_70_0() { return cKNOTKnotKeyword_70_0; }

		//ARE="are"
		public EnumLiteralDeclaration getAREEnumLiteralDeclaration_71() { return cAREEnumLiteralDeclaration_71; }

		//"are"
		public Keyword getAREAreKeyword_71_0() { return cAREAreKeyword_71_0; }

		//HECTARE="hectare"
		public EnumLiteralDeclaration getHECTAREEnumLiteralDeclaration_72() { return cHECTAREEnumLiteralDeclaration_72; }

		//"hectare"
		public Keyword getHECTAREHectareKeyword_72_0() { return cHECTAREHectareKeyword_72_0; }

		//BAR="bar"
		public EnumLiteralDeclaration getBAREnumLiteralDeclaration_73() { return cBAREnumLiteralDeclaration_73; }

		//"bar"
		public Keyword getBARBarKeyword_73_0() { return cBARBarKeyword_73_0; }

		//ANGSROM="angstrom"
		public EnumLiteralDeclaration getANGSROMEnumLiteralDeclaration_74() { return cANGSROMEnumLiteralDeclaration_74; }

		//"angstrom"
		public Keyword getANGSROMAngstromKeyword_74_0() { return cANGSROMAngstromKeyword_74_0; }

		//BARN="barn"
		public EnumLiteralDeclaration getBARNEnumLiteralDeclaration_75() { return cBARNEnumLiteralDeclaration_75; }

		//"barn"
		public Keyword getBARNBarnKeyword_75_0() { return cBARNBarnKeyword_75_0; }

		//CURIE="curie"
		public EnumLiteralDeclaration getCURIEEnumLiteralDeclaration_76() { return cCURIEEnumLiteralDeclaration_76; }

		//"curie"
		public Keyword getCURIECurieKeyword_76_0() { return cCURIECurieKeyword_76_0; }

		//ROENTGEN="roentgen"
		public EnumLiteralDeclaration getROENTGENEnumLiteralDeclaration_77() { return cROENTGENEnumLiteralDeclaration_77; }

		//"roentgen"
		public Keyword getROENTGENRoentgenKeyword_77_0() { return cROENTGENRoentgenKeyword_77_0; }

		//RAD="rad"
		public EnumLiteralDeclaration getRADEnumLiteralDeclaration_78() { return cRADEnumLiteralDeclaration_78; }

		//"rad"
		public Keyword getRADRadKeyword_78_0() { return cRADRadKeyword_78_0; }

		//REM="rem"
		public EnumLiteralDeclaration getREMEnumLiteralDeclaration_79() { return cREMEnumLiteralDeclaration_79; }

		//"rem"
		public Keyword getREMRemKeyword_79_0() { return cREMRemKeyword_79_0; }
	}
	
	private JausElements pJaus;
	private ServiceDefElements pServiceDef;
	private DescriptionElements pDescription;
	private AssumptionsElements pAssumptions;
	private ReferencesElements pReferences;
	private RefAttrElements pRefAttr;
	private DeclaredConstSetElements pDeclaredConstSet;
	private DeclaredConstSetRefElements pDeclaredConstSetRef;
	private DeclaredTypeSetElements pDeclaredTypeSet;
	private MessageSetElements pMessageSet;
	private MessagesElements pMessages;
	private InternalEventSetElements pInternalEventSet;
	private EventDefElements pEventDef;
	private MessageRefElements pMessageRef;
	private ProtocolBehaviorElements pProtocolBehavior;
	private StartStateElements pStartState;
	private StateMachineElements pStateMachine;
	private StateElements pState;
	private DefaultStateElements pDefaultState;
	private EntryElements pEntry;
	private ExitElements pExit;
	private TransParamsElements pTransParams;
	private TransParamElements pTransParam;
	private TransitionElements pTransition;
	private DefaultTransitionElements pDefaultTransition;
	private InternalTransitionElements pInternalTransition;
	private SimpleTransitionElements pSimpleTransition;
	private PushTransitionElements pPushTransition;
	private PopTransitionElements pPopTransition;
	private NextStateElements pNextState;
	private GuardElements pGuard;
	private GuardActionElements pGuardAction;
	private GuardParamElements pGuardParam;
	private ActionListElements pActionList;
	private SendActionListElements pSendActionList;
	private ActionElements pAction;
	private ConstDefElements pConstDef;
	private DeclaredTypeSetRefElements pDeclaredTypeSetRef;
	private TypeDefElements pTypeDef;
	private MessageDefElements pMessageDef;
	private HeaderDefElements pHeaderDef;
	private BodyDefElements pBodyDef;
	private FooterDefElements pFooterDef;
	private HeaderRefElements pHeaderRef;
	private BodyRefElements pBodyRef;
	private FooterRefElements pFooterRef;
	private HeaderScopedRefElements pHeaderScopedRef;
	private BodyScopedRefElements pBodyScopedRef;
	private FooterScopedRefElements pFooterScopedRef;
	private ContainerDefElements pContainerDef;
	private ContainerRefElements pContainerRef;
	private DeclaredEventDefElements pDeclaredEventDef;
	private SimpleNumericTypeElements pSimpleNumericType;
	private NumericLiteralElements pNumericLiteral;
	private FixedLenStringElements pFixedLenString;
	private VarLenStringElements pVarLenString;
	private FixedFieldDefElements pFixedFieldDef;
	private VarFieldElements pVarField;
	private VarLenFieldElements pVarLenField;
	private TaggedUnitsEnumElements pTaggedUnitsEnum;
	private VarFormatFieldElements pVarFormatField;
	private FormatEnumDefElements pFormatEnumDef;
	private ValueSetDefElements pValueSetDef;
	private BitfieldDefElements pBitfieldDef;
	private ValueRangeElements pValueRange;
	private ValueSpecElements pValueSpec;
	private ScaledRangeDefElements pScaledRangeDef;
	private SubFieldElements pSubField;
	private ListDefElements pListDef;
	private VariantDefElements pVariantDef;
	private TaggedItemDefElements pTaggedItemDef;
	private SequenceDefElements pSequenceDef;
	private RecordDefElements pRecordDef;
	private ConstReferenceElements pConstReference;
	private TypeReferenceElements pTypeReference;
	private ArrayDefElements pArrayDef;
	private MessageScopedRefElements pMessageScopedRef;
	private ScopedTypeElements pScopedType;
	private ScopedEventTypeElements pScopedEventType;
	private ScopedTypeIdElements pScopedTypeId;
	private ScopedConstIdElements pScopedConstId;
	private TerminalRule tVERSION;
	private TerminalRule tDECIMAL;
	private FIELD_FORMATElements unknownRuleFIELD_FORMAT;
	private UNITElements unknownRuleUNIT;
	private TerminalRule tMESSAGE_CODE;
	private TerminalRule tINTLITERAL;
	private TerminalRule tNonIntNumber;
	private TerminalRule tESC;
	private URIElements pURI;
	private TerminalRule tSTRINGLITERAL;
	private TerminalRule tID;
	private TerminalRule tINTERPRETATION;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public CjsidlGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//////////////////////////////////////////////////////////////////////////////////
	//
	//jaus:
	//	set=(serviceDef | declaredTypeSet | declaredConstSet);
	public JausElements getJausAccess() {
		return (pJaus != null) ? pJaus : (pJaus = new JausElements());
	}
	
	public ParserRule getJausRule() {
		return getJausAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//serviceDef: // URI must be stored in the variable 'name' for imports to work correctly.
	//
	//	"service" serviceName=ID "(" "id" "=" name=URI "," "version" "=" serviceVersion=(DECIMAL | VERSION) ")" "{"
	//	descr=description assumpt=assumptions refs=references? constSet=declaredConstSet? typeSet=declaredTypeSet?
	//	messageSet=messageSet internalEventSet=internalEventSet protocolBehavior=protocolBehavior "}" ";"?;
	public ServiceDefElements getServiceDefAccess() {
		return (pServiceDef != null) ? pServiceDef : (pServiceDef = new ServiceDefElements());
	}
	
	public ParserRule getServiceDefRule() {
		return getServiceDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	////
	//
	//description:
	//	"description" content=STRINGLITERAL ";";
	public DescriptionElements getDescriptionAccess() {
		return (pDescription != null) ? pDescription : (pDescription = new DescriptionElements());
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//assumptions returns ecore::EString:
	//	"assumptions" STRINGLITERAL ";";
	public AssumptionsElements getAssumptionsAccess() {
		return (pAssumptions != null) ? pAssumptions : (pAssumptions = new AssumptionsElements());
	}
	
	public ParserRule getAssumptionsRule() {
		return getAssumptionsAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// TODO: build this out....
	//
	//references:
	//	{references} "references" "{" ("inherits_from" refInherit=refAttr ";")? ("client_of" refClient+=refAttr ";")* "}"
	//	";"?;
	public ReferencesElements getReferencesAccess() {
		return (pReferences != null) ? pReferences : (pReferences = new ReferencesElements());
	}
	
	public ParserRule getReferencesRule() {
		return getReferencesAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//refAttr:
	//	comment=INTERPRETATION? "import" importedNamespace=[serviceDef|URI] "as" name=ID;
	public RefAttrElements getRefAttrAccess() {
		return (pRefAttr != null) ? pRefAttr : (pRefAttr = new RefAttrElements());
	}
	
	public ParserRule getRefAttrRule() {
		return getRefAttrAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//declaredConstSet:
	//	("constants" constName=ID) //'constants' (name=ID | constSetURI=URI '.' ID 'version' '=' version=VERSION )
	//
	//	("(" "id" "=" name=URI "," "version" "=" constSetVersion=(DECIMAL | VERSION) ")")? "{"
	//	declaredConstSetRef+=declaredConstSetRef* constDef+=constDef* "}" ";"?;
	public DeclaredConstSetElements getDeclaredConstSetAccess() {
		return (pDeclaredConstSet != null) ? pDeclaredConstSet : (pDeclaredConstSet = new DeclaredConstSetElements());
	}
	
	public ParserRule getDeclaredConstSetRule() {
		return getDeclaredConstSetAccess().getRule();
	}

	/////////////////////////////////////////////////////////////////////////////////
	//
	//declaredConstSetRef:
	//	comment=INTERPRETATION? "using" "constants" importedNamespace=[declaredConstSet|URI] "as" name=ID ";";
	public DeclaredConstSetRefElements getDeclaredConstSetRefAccess() {
		return (pDeclaredConstSetRef != null) ? pDeclaredConstSetRef : (pDeclaredConstSetRef = new DeclaredConstSetRefElements());
	}
	
	public ParserRule getDeclaredConstSetRefRule() {
		return getDeclaredConstSetRefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//declaredTypeSet: //(name=ID | typeURI=URI '.' ID 'version' '=' version=VERSION )
	//
	//	"typeset" typeName=ID ("(" "id" "=" name=URI "," "version" "=" version=(DECIMAL | VERSION) ")")? "{"
	//	declaredConstSetRef+=declaredConstSetRef* declaredTypeSetRef+=declaredTypeSetRef* typeDef+=typeDef*
	//	(typeRef+=typeReference | scopedRef+=scopedTypeId)* "}" ";"?;
	public DeclaredTypeSetElements getDeclaredTypeSetAccess() {
		return (pDeclaredTypeSet != null) ? pDeclaredTypeSet : (pDeclaredTypeSet = new DeclaredTypeSetElements());
	}
	
	public ParserRule getDeclaredTypeSetRule() {
		return getDeclaredTypeSetAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//messageSet:
	//	comment=INTERPRETATION? "messages" "{" inputComment=INTERPRETATION? "input" "{" inputSet=messages "}"
	//	outputComment=INTERPRETATION? "output" "{" outputSet=messages "}" "}";
	public MessageSetElements getMessageSetAccess() {
		return (pMessageSet != null) ? pMessageSet : (pMessageSet = new MessageSetElements());
	}
	
	public ParserRule getMessageSetRule() {
		return getMessageSetAccess().getRule();
	}

	//messages:
	//	{messages} (messageDefs+=messageDef | typeRefs+=messageRef | scopedRefs+=messageScopedRef)*;
	public MessagesElements getMessagesAccess() {
		return (pMessages != null) ? pMessages : (pMessages = new MessagesElements());
	}
	
	public ParserRule getMessagesRule() {
		return getMessagesAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//internalEventSet:
	//	{internalEventSet} comment=INTERPRETATION? "eventset" "{" defs+=(declaredEventDef | eventDef)* "}" ";"?;
	public InternalEventSetElements getInternalEventSetAccess() {
		return (pInternalEventSet != null) ? pInternalEventSet : (pInternalEventSet = new InternalEventSetElements());
	}
	
	public ParserRule getInternalEventSetRule() {
		return getInternalEventSetAccess().getRule();
	}

	//eventDef:
	//	"event" name=ID "{" (descr= // description is not optional for message_def in JSIDL 1.0
	//
	//	description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
	//	footer=footerRef)?) "}" ";"?;
	public EventDefElements getEventDefAccess() {
		return (pEventDef != null) ? pEventDef : (pEventDef = new EventDefElements());
	}
	
	public ParserRule getEventDefRule() {
		return getEventDefAccess().getRule();
	}

	//messageRef:
	//	comment=INTERPRETATION? "message" ref=[messageDef] name=ID ";";
	public MessageRefElements getMessageRefAccess() {
		return (pMessageRef != null) ? pMessageRef : (pMessageRef = new MessageRefElements());
	}
	
	public ParserRule getMessageRefRule() {
		return getMessageRefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//protocolBehavior:
	//	comment=INTERPRETATION? stateless="stateless"? "protocol" "{" stateMachine+=stateMachine+ "}" ";"?;
	public ProtocolBehaviorElements getProtocolBehaviorAccess() {
		return (pProtocolBehavior != null) ? pProtocolBehavior : (pProtocolBehavior = new ProtocolBehaviorElements());
	}
	
	public ParserRule getProtocolBehaviorRule() {
		return getProtocolBehaviorAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// Later plug in isomorphic SMC grammar here.
	//
	//startState:
	//	comment=INTERPRETATION? "start" (scoped+=[state] ".")* state=[state];
	public StartStateElements getStartStateAccess() {
		return (pStartState != null) ? pStartState : (pStartState = new StartStateElements());
	}
	
	public ParserRule getStartStateRule() {
		return getStartStateAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//stateMachine:
	//	comment=INTERPRETATION? "state_machine" (scoped+=[refAttr] ".")* name=ID "(" startState=startState ")" "{"
	//	(defaultState=defaultState? states+=state+) "}" ";"?;
	public StateMachineElements getStateMachineAccess() {
		return (pStateMachine != null) ? pStateMachine : (pStateMachine = new StateMachineElements());
	}
	
	public ParserRule getStateMachineRule() {
		return getStateMachineAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//state:
	//	{state} comment=INTERPRETATION? initial="initial"? "state" name=ID "{" (entryAction=entry? exitAction=exit?
	//	transitions+=transition* defaultTransition+=defaultTransition* defaultState=defaultState? subState+=state*) // substates
	//
	//	"}" ";"?;
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////
	//
	//// TODO: formerly: 	'state' 'Default' attrs=Attrs '{'
	//
	//defaultState:
	//	{defaultState} comment=INTERPRETATION? "state" "default" "{" (transition+=transition*
	//	defaultTransition+=defaultTransition*) "}" ";"?;
	public DefaultStateElements getDefaultStateAccess() {
		return (pDefaultState != null) ? pDefaultState : (pDefaultState = new DefaultStateElements());
	}
	
	public ParserRule getDefaultStateRule() {
		return getDefaultStateAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// SMC: entry : 'Entry' '{' action* '}';
	//
	//entry:
	//	{entry} comment=INTERPRETATION? "entry" "{" (actions=actionList & sendActions=sendActionList?) "}" ";"?;
	public EntryElements getEntryAccess() {
		return (pEntry != null) ? pEntry : (pEntry = new EntryElements());
	}
	
	public ParserRule getEntryRule() {
		return getEntryAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// SMC: exit : 'Exit' '{' action* '}';
	//
	//exit:
	//	{exit} comment=INTERPRETATION? "exit" "{" (actions=actionList & sendActions=sendActionList?) "}" ";"?;
	public ExitElements getExitAccess() {
		return (pExit != null) ? pExit : (pExit = new ExitElements());
	}
	
	public ParserRule getExitRule() {
		return getExitAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// SMC: transition : WORD transition_args? guard? next_state '{' action* '}';
	//
	//// SMC: transition_args : '(' parameters ')';
	//
	//transParams:
	//	{transParams} "(" (params+=transParam ("," params+=transParam)*)? ")";
	public TransParamsElements getTransParamsAccess() {
		return (pTransParams != null) ? pTransParams : (pTransParams = new TransParamsElements());
	}
	
	public ParserRule getTransParamsRule() {
		return getTransParamsAccess().getRule();
	}

	//transParam:
	//	comment=INTERPRETATION? (type=[ecore::EObject] | scopedEventType=scopedEventType | unsignedType=("uint8" | "uint16" |
	//	"uint32" | "uint64")) name=ID;
	public TransParamElements getTransParamAccess() {
		return (pTransParam != null) ? pTransParam : (pTransParam = new TransParamElements());
	}
	
	public ParserRule getTransParamRule() {
		return getTransParamAccess().getRule();
	}

	//transition:
	//	{transition} comment=INTERPRETATION? (type="internal" "transition" (scoped+=[refAttr] ".")* name=ID
	//	params=transParams? "{" transGuard=guard? (actions=actionList? & sendActions=sendActionList?)
	//	destination=internalTransition | type="simple" "transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{"
	//	transGuard=guard? (actions=actionList? & sendActions=sendActionList?) destination=simpleTransition | type="push"
	//	"transition" (scoped+=[refAttr] ".")* name=ID params=transParams? "{" transGuard=guard? (actions=actionList? &
	//	sendActions=sendActionList?) destination=pushTransition | type="pop" "transition" (scoped+=[refAttr] ".")* name=ID
	//	params=transParams? "{" transGuard=guard? (actions=actionList? & sendActions=sendActionList?)
	//	destination=popTransition) "}";
	public TransitionElements getTransitionAccess() {
		return (pTransition != null) ? pTransition : (pTransition = new TransitionElements());
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//defaultTransition:
	//	comment=INTERPRETATION? "default" (type="internal" "transition" "{" transGuard=guard? (actions=actionList &
	//	sendActions=sendActionList?) destination=internalTransition | type="simple" "transition" "{" transGuard=guard?
	//	(actions=actionList & sendActions=sendActionList?) destination=simpleTransition | type="push" "transition" "{"
	//	transGuard=guard? (actions=actionList & sendActions=sendActionList?) destination=pushTransition | type="pop"
	//	"transition" "{" transGuard=guard? (actions=actionList & sendActions=sendActionList?) destination=popTransition) "}"
	//	";"?;
	public DefaultTransitionElements getDefaultTransitionAccess() {
		return (pDefaultTransition != null) ? pDefaultTransition : (pDefaultTransition = new DefaultTransitionElements());
	}
	
	public ParserRule getDefaultTransitionRule() {
		return getDefaultTransitionAccess().getRule();
	}

	//internalTransition:
	//	{internalTransition} comment=INTERPRETATION?;
	public InternalTransitionElements getInternalTransitionAccess() {
		return (pInternalTransition != null) ? pInternalTransition : (pInternalTransition = new InternalTransitionElements());
	}
	
	public ParserRule getInternalTransitionRule() {
		return getInternalTransitionAccess().getRule();
	}

	//simpleTransition:
	//	comment=INTERPRETATION? nextState=nextState;
	public SimpleTransitionElements getSimpleTransitionAccess() {
		return (pSimpleTransition != null) ? pSimpleTransition : (pSimpleTransition = new SimpleTransitionElements());
	}
	
	public ParserRule getSimpleTransitionRule() {
		return getSimpleTransitionAccess().getRule();
	}

	//pushTransition:
	//	comment=INTERPRETATION? nextState=nextState ("popto" simpleTransition=simpleTransition)?;
	public PushTransitionElements getPushTransitionAccess() {
		return (pPushTransition != null) ? pPushTransition : (pPushTransition = new PushTransitionElements());
	}
	
	public ParserRule getPushTransitionRule() {
		return getPushTransitionAccess().getRule();
	}

	//popTransition:
	//	{popTransition} comment=INTERPRETATION? ("secondary" secondaryTransition=[transition] "(" (param+=guardParam (","
	//	param+=guardParam)*)? ")")? ";";
	public PopTransitionElements getPopTransitionAccess() {
		return (pPopTransition != null) ? pPopTransition : (pPopTransition = new PopTransitionElements());
	}
	
	public ParserRule getPopTransitionRule() {
		return getPopTransitionAccess().getRule();
	}

	//nextState:
	//	{nextState} comment=INTERPRETATION? ("->" | "next") (firstState=[state] "." (scoped+=[state] ".")*)? nextState=[state] // Validation rule - this can only be used with a simple or push transition
	//
	//	";";
	public NextStateElements getNextStateAccess() {
		return (pNextState != null) ? pNextState : (pNextState = new NextStateElements());
	}
	
	public ParserRule getNextStateRule() {
		return getNextStateAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// SMC: guard : '[' expression ']';
	//
	//guard:
	//	comment=INTERPRETATION? "guard" ":" (guardAction+=guardAction equiv=("=" | "!=") guardAction+=guardAction |
	//	guardAction+=guardAction (logicalOperator+=("&&" | "||") guardAction+=guardAction)*) ";";
	public GuardElements getGuardAccess() {
		return (pGuard != null) ? pGuard : (pGuard = new GuardElements());
	}
	
	public ParserRule getGuardRule() {
		return getGuardAccess().getRule();
	}

	//guardAction:
	//	not="!"? name=ID "(" (param+=guardParam ("," param+=guardParam)*)? ")";
	public GuardActionElements getGuardActionAccess() {
		return (pGuardAction != null) ? pGuardAction : (pGuardAction = new GuardActionElements());
	}
	
	public ParserRule getGuardActionRule() {
		return getGuardActionAccess().getRule();
	}

	//guardParam:
	//	parameter=[transParam] | guardConst=STRINGLITERAL;
	public GuardParamElements getGuardParamAccess() {
		return (pGuardParam != null) ? pGuardParam : (pGuardParam = new GuardParamElements());
	}
	
	public ParserRule getGuardParamRule() {
		return getGuardParamAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//actionList:
	//	{actionList} "actions" "{" actions+=action* "}";
	public ActionListElements getActionListAccess() {
		return (pActionList != null) ? pActionList : (pActionList = new ActionListElements());
	}
	
	public ParserRule getActionListRule() {
		return getActionListAccess().getRule();
	}

	//sendActionList:
	//	{sendActionList} "send" "actions" "{" actions+=action* "}";
	public SendActionListElements getSendActionListAccess() {
		return (pSendActionList != null) ? pSendActionList : (pSendActionList = new SendActionListElements());
	}
	
	public ParserRule getSendActionListRule() {
		return getSendActionListAccess().getRule();
	}

	//action:
	//	comment=INTERPRETATION? name=(ID | URI) "(" (param+=guardParam ("," param+=guardParam)*)? ")" ";";
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//constDef:
	//	comment=INTERPRETATION? constType=simpleNumericType name=ID "=" constValue=(NonIntNumber | DECIMAL | INTLITERAL)
	//	fieldUnits=UNIT ";";
	public ConstDefElements getConstDefAccess() {
		return (pConstDef != null) ? pConstDef : (pConstDef = new ConstDefElements());
	}
	
	public ParserRule getConstDefRule() {
		return getConstDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//declaredTypeSetRef:
	//	comment=INTERPRETATION? "using" "typeset" importedNamespace=[declaredTypeSet|URI] "as" name=ID? ";";
	public DeclaredTypeSetRefElements getDeclaredTypeSetRefAccess() {
		return (pDeclaredTypeSetRef != null) ? pDeclaredTypeSetRef : (pDeclaredTypeSetRef = new DeclaredTypeSetRefElements());
	}
	
	public ParserRule getDeclaredTypeSetRefRule() {
		return getDeclaredTypeSetRefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//typeDef: // header, body, footer are one of these
	//
	//	messageDef=messageDef | arrayDef=arrayDef | recordDef=recordDef | listDef=listDef | variantDef=variantDef |
	//	sequenceDef=sequenceDef | fixedFieldDef=fixedFieldDef | varField=varField | bitfieldDef=bitfieldDef |
	//	fixedLenString=fixedLenString | varLenString=varLenString | varLenField=varLenField | varFormatField=varFormatField |
	//	headerDef=headerDef | bodyDef=bodyDef | footerDef=footerDef;
	public TypeDefElements getTypeDefAccess() {
		return (pTypeDef != null) ? pTypeDef : (pTypeDef = new TypeDefElements());
	}
	
	public ParserRule getTypeDefRule() {
		return getTypeDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//messageDef:
	//	command="command"? "message" messageID=MESSAGE_CODE name=ID "{" (descr= // description is not optional for message_def in JSIDL 1.0
	//
	//	description & (header=headerDef | header=headerRef)? & (body=bodyDef | body=bodyRef) & (footer=footerDef |
	//	footer=footerRef)?) "}" ";"?;
	public MessageDefElements getMessageDefAccess() {
		return (pMessageDef != null) ? pMessageDef : (pMessageDef = new MessageDefElements());
	}
	
	public ParserRule getMessageDefRule() {
		return getMessageDefAccess().getRule();
	}

	//headerDef:
	//	comment=INTERPRETATION? "header" name=ID "{" (recordListSequenceVariant=containerDef |
	//	recordListSequenceVariant=containerRef)? "}" ";"?;
	public HeaderDefElements getHeaderDefAccess() {
		return (pHeaderDef != null) ? pHeaderDef : (pHeaderDef = new HeaderDefElements());
	}
	
	public ParserRule getHeaderDefRule() {
		return getHeaderDefAccess().getRule();
	}

	//bodyDef:
	//	comment=INTERPRETATION? "body" name=ID "{" (recordListSequenceVariant=containerDef |
	//	recordListSequenceVariant=containerRef)? "}" ";"?;
	public BodyDefElements getBodyDefAccess() {
		return (pBodyDef != null) ? pBodyDef : (pBodyDef = new BodyDefElements());
	}
	
	public ParserRule getBodyDefRule() {
		return getBodyDefAccess().getRule();
	}

	//footerDef:
	//	comment=INTERPRETATION? "footer" name=ID "{" (recordListSequenceVariant=containerDef |
	//	recordListSequenceVariant=containerRef)? "}" ";"?;
	public FooterDefElements getFooterDefAccess() {
		return (pFooterDef != null) ? pFooterDef : (pFooterDef = new FooterDefElements());
	}
	
	public ParserRule getFooterDefRule() {
		return getFooterDefAccess().getRule();
	}

	//headerRef:
	//	comment=INTERPRETATION? "header" (typeRef=[headerDef] | scopedRef=headerScopedRef) name=ID ";";
	public HeaderRefElements getHeaderRefAccess() {
		return (pHeaderRef != null) ? pHeaderRef : (pHeaderRef = new HeaderRefElements());
	}
	
	public ParserRule getHeaderRefRule() {
		return getHeaderRefAccess().getRule();
	}

	//bodyRef:
	//	comment=INTERPRETATION? "body" (typeRef=[bodyDef] | scopedRef=bodyScopedRef) name=ID ";";
	public BodyRefElements getBodyRefAccess() {
		return (pBodyRef != null) ? pBodyRef : (pBodyRef = new BodyRefElements());
	}
	
	public ParserRule getBodyRefRule() {
		return getBodyRefAccess().getRule();
	}

	//footerRef:
	//	comment=INTERPRETATION? "footer" (typeRef=[footerDef] | scopedRef=footerScopedRef) name=ID ";";
	public FooterRefElements getFooterRefAccess() {
		return (pFooterRef != null) ? pFooterRef : (pFooterRef = new FooterRefElements());
	}
	
	public ParserRule getFooterRefRule() {
		return getFooterRefAccess().getRule();
	}

	//headerScopedRef:
	//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[headerDef];
	public HeaderScopedRefElements getHeaderScopedRefAccess() {
		return (pHeaderScopedRef != null) ? pHeaderScopedRef : (pHeaderScopedRef = new HeaderScopedRefElements());
	}
	
	public ParserRule getHeaderScopedRefRule() {
		return getHeaderScopedRefAccess().getRule();
	}

	//bodyScopedRef:
	//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[bodyDef];
	public BodyScopedRefElements getBodyScopedRefAccess() {
		return (pBodyScopedRef != null) ? pBodyScopedRef : (pBodyScopedRef = new BodyScopedRefElements());
	}
	
	public ParserRule getBodyScopedRefRule() {
		return getBodyScopedRefAccess().getRule();
	}

	//footerScopedRef:
	//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[footerDef];
	public FooterScopedRefElements getFooterScopedRefAccess() {
		return (pFooterScopedRef != null) ? pFooterScopedRef : (pFooterScopedRef = new FooterScopedRefElements());
	}
	
	public ParserRule getFooterScopedRefRule() {
		return getFooterScopedRefAccess().getRule();
	}

	//containerDef:
	//	recordDef | listDef | variantDef | sequenceDef;
	public ContainerDefElements getContainerDefAccess() {
		return (pContainerDef != null) ? pContainerDef : (pContainerDef = new ContainerDefElements());
	}
	
	public ParserRule getContainerDefRule() {
		return getContainerDefAccess().getRule();
	}

	//containerRef:
	//	comment=INTERPRETATION? optional="optional"? (type=[containerDef] | typeScoped=scopedType) name=ID ";";
	public ContainerRefElements getContainerRefAccess() {
		return (pContainerRef != null) ? pContainerRef : (pContainerRef = new ContainerRefElements());
	}
	
	public ParserRule getContainerRefRule() {
		return getContainerRefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//declaredEventDef:
	//	comment=INTERPRETATION? "eventset" (type=[eventDef] | scopedEventType=scopedEventType) name=ID ";"?;
	public DeclaredEventDefElements getDeclaredEventDefAccess() {
		return (pDeclaredEventDef != null) ? pDeclaredEventDef : (pDeclaredEventDef = new DeclaredEventDefElements());
	}
	
	public ParserRule getDeclaredEventDefRule() {
		return getDeclaredEventDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//simpleNumericType:
	//	type=("uint8" | "uint16" | "uint32" | "uint64" | "int8" | "int16" | "int32" | "int64" | "float" | "double");
	public SimpleNumericTypeElements getSimpleNumericTypeAccess() {
		return (pSimpleNumericType != null) ? pSimpleNumericType : (pSimpleNumericType = new SimpleNumericTypeElements());
	}
	
	public ParserRule getSimpleNumericTypeRule() {
		return getSimpleNumericTypeAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//numericLiteral returns ecore::EString:
	//	"-"? (INTLITERAL | NonIntNumber);
	public NumericLiteralElements getNumericLiteralAccess() {
		return (pNumericLiteral != null) ? pNumericLiteral : (pNumericLiteral = new NumericLiteralElements());
	}
	
	public ParserRule getNumericLiteralRule() {
		return getNumericLiteralAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////
	//
	//fixedLenString:
	//	comment=INTERPRETATION? optional="optional"? "string" name=ID "[" (upperLim=INTLITERAL | upperLimRef=constReference |
	//	upperLimScoped=scopedConstId) "]" ";";
	public FixedLenStringElements getFixedLenStringAccess() {
		return (pFixedLenString != null) ? pFixedLenString : (pFixedLenString = new FixedLenStringElements());
	}
	
	public ParserRule getFixedLenStringRule() {
		return getFixedLenStringAccess().getRule();
	}

	//varLenString:
	//	comment=INTERPRETATION? optional="optional"? "vstring" name=ID "[" (lowerLim=INTLITERAL | lowerLimRef=constReference |
	//	lowerLimScoped=scopedConstId) "," (upperLim=INTLITERAL | upperLimRef=constReference | upperLimScoped=scopedConstId)
	//	"]" ";";
	public VarLenStringElements getVarLenStringAccess() {
		return (pVarLenString != null) ? pVarLenString : (pVarLenString = new VarLenStringElements());
	}
	
	public ParserRule getVarLenStringRule() {
		return getVarLenStringAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//fixedFieldDef:
	//	comment=INTERPRETATION? optional="optional"? "field" (type=simpleNumericType name=ID fieldUnit=UNIT
	//	valueRange=(scaledRangeDef | valueSetDef | valueRange)?) ";";
	public FixedFieldDefElements getFixedFieldDefAccess() {
		return (pFixedFieldDef != null) ? pFixedFieldDef : (pFixedFieldDef = new FixedFieldDefElements());
	}
	
	public ParserRule getFixedFieldDefRule() {
		return getFixedFieldDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////
	//
	//// Called a "variable_field" in JSIDL
	//
	//// Note: this version currently only supports one 'type_and_units_field'
	//
	//// TODO: Fix for 1..n
	//
	////
	//
	//varField:
	//	comment=INTERPRETATION? optional="optional"? "variable_field" name=ID "{" vtagField+=taggedUnitsEnum+ "}" ";";
	public VarFieldElements getVarFieldAccess() {
		return (pVarField != null) ? pVarField : (pVarField = new VarFieldElements());
	}
	
	public ParserRule getVarFieldRule() {
		return getVarFieldAccess().getRule();
	}

	//varLenField:
	//	comment=INTERPRETATION? optional="optional"? "vfield" fieldFormat=FIELD_FORMAT name=ID countComment=INTERPRETATION?
	//	("[" (lowerLim=INTLITERAL | lowerLimRef=constReference | lowerLimScoped=scopedConstId) ("," (upperLim=INTLITERAL |
	//	upperLimRef=constReference | upperLimScoped=scopedConstId))? "]")? ";";
	public VarLenFieldElements getVarLenFieldAccess() {
		return (pVarLenField != null) ? pVarLenField : (pVarLenField = new VarLenFieldElements());
	}
	
	public ParserRule getVarLenFieldRule() {
		return getVarLenFieldAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////
	//
	//taggedUnitsEnum:
	//	"tag" (const_tag=INTLITERAL | tag=constReference | scopedTag=scopedConstId) ":" name=ID type=simpleNumericType
	//	fieldUnit=UNIT (valueSetDef=valueSetDef | scaledRangeDef=scaledRangeDef)? ";";
	public TaggedUnitsEnumElements getTaggedUnitsEnumAccess() {
		return (pTaggedUnitsEnum != null) ? pTaggedUnitsEnum : (pTaggedUnitsEnum = new TaggedUnitsEnumElements());
	}
	
	public ParserRule getTaggedUnitsEnumRule() {
		return getTaggedUnitsEnumAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////
	//
	//varFormatField:
	//	comment=INTERPRETATION? optional="optional"? "variable_format_field" name=ID "{" (countComment=INTERPRETATION?
	//	units=("uint8" | "uint16" | "uint32") "tag" countRange=valueRange ";") formatField+=formatEnumDef+ "}" ";";
	public VarFormatFieldElements getVarFormatFieldAccess() {
		return (pVarFormatField != null) ? pVarFormatField : (pVarFormatField = new VarFormatFieldElements());
	}
	
	public ParserRule getVarFormatFieldRule() {
		return getVarFormatFieldAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////
	//
	//formatEnumDef:
	//	"tag" (index=INTLITERAL | constRef=constReference | constScopedRef=scopedConstId) ":" (fieldFormat=FIELD_FORMAT |
	//	fieldFormatStr=STRINGLITERAL) ";";
	public FormatEnumDefElements getFormatEnumDefAccess() {
		return (pFormatEnumDef != null) ? pFormatEnumDef : (pFormatEnumDef = new FormatEnumDefElements());
	}
	
	public ParserRule getFormatEnumDefRule() {
		return getFormatEnumDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//valueSetDef:
	//	{valueSetDef} "{" (value+=(valueSpec | valueRange) ";")+ "}" offset="offset"?;
	public ValueSetDefElements getValueSetDefAccess() {
		return (pValueSetDef != null) ? pValueSetDef : (pValueSetDef = new ValueSetDefElements());
	}
	
	public ParserRule getValueSetDefRule() {
		return getValueSetDefAccess().getRule();
	}

	////////////////////////////////////////////////////////////////////////////////
	//
	//bitfieldDef:
	//	comment=INTERPRETATION? optional="optional"? "bit_field" type=("uint8" | "uint16" | "uint32" | "uint64") name=ID "{"
	//	subField+=subField* "}" ";";
	public BitfieldDefElements getBitfieldDefAccess() {
		return (pBitfieldDef != null) ? pBitfieldDef : (pBitfieldDef = new BitfieldDefElements());
	}
	
	public ParserRule getBitfieldDefRule() {
		return getBitfieldDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//valueRange:
	//	comment=INTERPRETATION? lowerLimit_type=("(" | "[") (lowerLim=numericLiteral | lowerLimRef=constReference |
	//	lowerLimScoped=scopedConstId) "," (upperLim=numericLiteral | upperLimRef=constReference |
	//	upperLimScoped=scopedConstId) upperLimit_type=(")" | "]");
	public ValueRangeElements getValueRangeAccess() {
		return (pValueRange != null) ? pValueRange : (pValueRange = new ValueRangeElements());
	}
	
	public ParserRule getValueRangeRule() {
		return getValueRangeAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//valueSpec:
	//	comment=INTERPRETATION? name=STRINGLITERAL "=" value=INTLITERAL;
	public ValueSpecElements getValueSpecAccess() {
		return (pValueSpec != null) ? pValueSpec : (pValueSpec = new ValueSpecElements());
	}
	
	public ParserRule getValueSpecRule() {
		return getValueSpecAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//scaledRangeDef:
	//	interp=INTERPRETATION? "<" (lowerLim=numericLiteral | lowerLimRef=constReference | lowerLimScoped=scopedConstId) ","
	//	(upperLim=numericLiteral | upperLimRef=constReference | upperLimScoped=scopedConstId) ">" function=("floor" |
	//	"ceiling" | "round");
	public ScaledRangeDefElements getScaledRangeDefAccess() {
		return (pScaledRangeDef != null) ? pScaledRangeDef : (pScaledRangeDef = new ScaledRangeDefElements());
	}
	
	public ParserRule getScaledRangeDefRule() {
		return getScaledRangeDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//subField:
	//	comment=INTERPRETATION? name=ID "[" fromIndex=INTLITERAL ":" toIndex=INTLITERAL "]" valueSet=valueSetDef ";";
	public SubFieldElements getSubFieldAccess() {
		return (pSubField != null) ? pSubField : (pSubField = new SubFieldElements());
	}
	
	public ParserRule getSubFieldRule() {
		return getSubFieldAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//listDef:
	//	comment=INTERPRETATION? optional="optional"? "list" name=ID countComment=INTERPRETATION? "[" (minCount=numericLiteral
	//	| minCountRef=constReference | minCountScoped=scopedConstId) "," (maxCount=numericLiteral | maxCountRef=constReference
	//	| maxCountScoped=scopedConstId) "]" "{" (containerRef=containerRef | containerDef=containerDef) "}" ";"?;
	public ListDefElements getListDefAccess() {
		return (pListDef != null) ? pListDef : (pListDef = new ListDefElements());
	}
	
	public ParserRule getListDefRule() {
		return getListDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// list of vtag/container, and name, optional, interp
	//
	//variantDef:
	//	comment=INTERPRETATION? optional="optional"? "variant" name=ID vtagComment=INTERPRETATION? "["
	//	(minCount=numericLiteral | minCountRef=constReference | minCountScoped=scopedConstId) "," (maxCount=numericLiteral |
	//	maxCountRef=constReference | maxCountScoped=scopedConstId) "]" "{" // list of 0 or more containers(record, list, sequence, variant) 
	//
	//	//      or references to containers                             
	//
	//	itemList+=taggedItemDef* "}" ";";
	public VariantDefElements getVariantDefAccess() {
		return (pVariantDef != null) ? pVariantDef : (pVariantDef = new VariantDefElements());
	}
	
	public ParserRule getVariantDefRule() {
		return getVariantDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//taggedItemDef:
	//	"vtag" ":" (containerDef=containerDef | containerRef=containerRef);
	public TaggedItemDefElements getTaggedItemDefAccess() {
		return (pTaggedItemDef != null) ? pTaggedItemDef : (pTaggedItemDef = new TaggedItemDefElements());
	}
	
	public ParserRule getTaggedItemDefRule() {
		return getTaggedItemDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//sequenceDef:
	//	comment=INTERPRETATION? optional="optional"? "sequence" name=ID "{" containerTypeList+=(containerRef | containerDef)+
	//	"}" ";"?;
	public SequenceDefElements getSequenceDefAccess() {
		return (pSequenceDef != null) ? pSequenceDef : (pSequenceDef = new SequenceDefElements());
	}
	
	public ParserRule getSequenceDefRule() {
		return getSequenceDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////
	//
	//recordDef:
	//	comment=INTERPRETATION? optional="optional"? "record" name=ID "{" (arrayDef+=arrayDef | fieldDef+=fixedFieldDef |
	//	variableFieldDef+=varField | bitfieldDef+=bitfieldDef | fixedLengthStringDef+=fixedLenString |
	//	variableLengthStringDef+=varLenString | variableLengthFieldDef+=varLenField | varFormatField+=varFormatField |
	//	typeReference+=typeReference | scopedRef+=scopedTypeId)+ "}" ";"?;
	public RecordDefElements getRecordDefAccess() {
		return (pRecordDef != null) ? pRecordDef : (pRecordDef = new RecordDefElements());
	}
	
	public ParserRule getRecordDefRule() {
		return getRecordDefAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//constReference:
	//	comment=INTERPRETATION? constVal=[constDef];
	public ConstReferenceElements getConstReferenceAccess() {
		return (pConstReference != null) ? pConstReference : (pConstReference = new ConstReferenceElements());
	}
	
	public ParserRule getConstReferenceRule() {
		return getConstReferenceAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//typeReference:
	//	comment=INTERPRETATION? optional="optional"? type=[ecore::EObject] name=ID ";";
	public TypeReferenceElements getTypeReferenceAccess() {
		return (pTypeReference != null) ? pTypeReference : (pTypeReference = new TypeReferenceElements());
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// This seems to still be a problem - accidentally removing the type variable fixed the
	//
	////	static initializer error.
	//
	//arrayDef:
	//	comment=INTERPRETATION? optional="optional"? (typeRef=[ecore::EObject] | scopedType=scopedType) name=ID "["
	//	arraySize=INTLITERAL "]" ";";
	public ArrayDefElements getArrayDefAccess() {
		return (pArrayDef != null) ? pArrayDef : (pArrayDef = new ArrayDefElements());
	}
	
	public ParserRule getArrayDefRule() {
		return getArrayDefAccess().getRule();
	}

	//messageScopedRef:
	//	comment=INTERPRETATION? "message" scope=[ecore::EObject] ("." scopes+=[ecore::EObject])* "." ref=[messageDef] name=ID
	//	";";
	public MessageScopedRefElements getMessageScopedRefAccess() {
		return (pMessageScopedRef != null) ? pMessageScopedRef : (pMessageScopedRef = new MessageScopedRefElements());
	}
	
	public ParserRule getMessageScopedRefRule() {
		return getMessageScopedRefAccess().getRule();
	}

	//// Multiple scoped types allow for different rules to use
	//
	//// only scoped types the specific rule requires.
	//
	//scopedType:
	//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[ecore::EObject];
	public ScopedTypeElements getScopedTypeAccess() {
		return (pScopedType != null) ? pScopedType : (pScopedType = new ScopedTypeElements());
	}
	
	public ParserRule getScopedTypeRule() {
		return getScopedTypeAccess().getRule();
	}

	//scopedEventType:
	//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[ecore::EObject];
	public ScopedEventTypeElements getScopedEventTypeAccess() {
		return (pScopedEventType != null) ? pScopedEventType : (pScopedEventType = new ScopedEventTypeElements());
	}
	
	public ParserRule getScopedEventTypeRule() {
		return getScopedEventTypeAccess().getRule();
	}

	//scopedTypeId:
	//	comment=INTERPRETATION? optional="optional"? ref=scopedType (scopedName=ID ";");
	public ScopedTypeIdElements getScopedTypeIdAccess() {
		return (pScopedTypeId != null) ? pScopedTypeId : (pScopedTypeId = new ScopedTypeIdElements());
	}
	
	public ParserRule getScopedTypeIdRule() {
		return getScopedTypeIdAccess().getRule();
	}

	//scopedConstId:
	//	name=[ecore::EObject] ("." names+=[ecore::EObject])* "." type=[constDef];
	public ScopedConstIdElements getScopedConstIdAccess() {
		return (pScopedConstId != null) ? pScopedConstId : (pScopedConstId = new ScopedConstIdElements());
	}
	
	public ParserRule getScopedConstIdRule() {
		return getScopedConstIdAccess().getRule();
	}

	//////////////////////////////////////////////////////////////////////////////////
	//
	//// Lexer
	//
	////
	//
	//////////////////////////////////////////////////////////////////////////////////
	//
	//terminal VERSION:
	//	DECIMAL ("." INT)+;
	public TerminalRule getVERSIONRule() {
		return (tVERSION != null) ? tVERSION : (tVERSION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "VERSION"));
	} 

	//terminal DECIMAL:
	//	INT ("." INT) | "." INT;
	public TerminalRule getDECIMALRule() {
		return (tDECIMAL != null) ? tDECIMAL : (tDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DECIMAL"));
	} 

	//enum FIELD_FORMAT:
	//	AU | BMP | JPEG | MJPEG | MPEG1="MPEG-1" | MPEG2="MPEG-2" | MP2 | MP3 | MP4 | RAW | WAV | JAUS_MESSAGE | XML | RNC |
	//	RNG | XSD | USER_DEFINED="User_defined";
	public FIELD_FORMATElements getFIELD_FORMATAccess() {
		return (unknownRuleFIELD_FORMAT != null) ? unknownRuleFIELD_FORMAT : (unknownRuleFIELD_FORMAT = new FIELD_FORMATElements());
	}
	
	public EnumRule getFIELD_FORMATRule() {
		return getFIELD_FORMATAccess().getRule();
	}

	//enum UNIT:
	//	METER="meter" //'one' | 
	//
	//	| KG="kilogram" | SEC="second" | AMP="ampere" | KELVIN="kelvin" | MOLE="mole" | CANDELA="candela" | ONE="one" | // derived units
	//
	//	SQR_METER="square_meter" | CUBIC_METER="cubic_meter" | METER_PER_SEC="meter_per_second" |
	//	METER_PER_SEC_SQR="meter_per_second_squared" | RECIPROCAL_METER="reciprocal_meter" |
	//	KG_PER_CUBIC_METER="kilogram_per_cubic_meter" | CUBICMETERPERKG="cubic_meter_per_kilogram" |
	//	AMPPERSQRMETER="ampere_per_square_meter" | AMP_PER_METER="ampere_per_meter" |
	//	MOLE_PER_CUBIC_METER="mole_per_cubic_meter" | CANDELA_PER_SQUARE_METER="candela_per_square_meter" | // derived units with special names and symbols
	//
	//	RADIAN="radian" | STE_RAD="steradian" | HRZ="hertz" | NEWTON="newton" | PASCAL="pascal" | JOULE="joule" | WATT="watt" |
	//	COULOMB="coulomb" | VOLT="volt" | FARAD="farad" | OHM="ohm" | SIEMENS="siemens" | WEBER="weber" | TESLA="tesla" |
	//	HENRY="henry" | CELSIUS="degree_Celsius" | LUMEN="lumen" | LUX="lux" | BECQUEREL="becquerel" | SIEVERT="sievert" |
	//	KATAL="katal" | PASCAL_SEC="pascal_second" | NEWTON_METER="newton_meter" | NEWTON_PER_METER="newton_per_meter" |
	//	RAD_PER_SEC="radian_per_second" | RAD_PER_SEC_SQR="radian_per_second_squared" |
	//	WATT_PER_SQR_METER="watt_per_square_meter" | JOULE_PER_KELVIN="joule_per_kelvin" | JOULE_PER_KG="joule_per_kilogram" |
	//	WATT_PER_METER_KELVIN="watt_per_meter_kelvin" | JOULES_PER_CUBIC_METER="joule_per_cubic_meter" |
	//	VOLT_PER_METER="volt_per_meter" | COULOMB_PER_CUBIC_METER="coulomb_per_cubic_meter" |
	//	COULOMB_PER_SQR_METER="coulomb_per_square_meter" | FARAD_PER_METER="farad_per_meter" |
	//	HENRY_PER_METER="henry_per_meter" | JOULE_PER_MOLE="joule_per_mole" | JOULE_PER_MOLE_KELVIN="joule_per_mole_kelvin" |
	//	COULOMB_PER_KG="coulomb_per_kilogram" | GRAY_PER_SEC="gray_per_second" |
	//	WATT_PER_SQR_METER_STERAD="watt_per_square_meter_steradian" | KATAL_PER_CUBIC_METER="katal_per_cubic_meter" | // Non-SI units accepted for use with the International System
	//
	//	// 'second' is already SI
	//
	//	MIN="minute" | HOUR="hour" | DAY="day" | DEGREE="degree" | LTR="liter" | MTON="metric_ton" | NEPER="neper" | BEL="bel"
	//	| NMILE="nautical_mile" | KNOT="knot" | ARE="are" | HECTARE="hectare" | BAR="bar" | ANGSROM="angstrom" | BARN="barn" |
	//	CURIE="curie" | ROENTGEN="roentgen" | RAD="rad" | REM="rem";
	public UNITElements getUNITAccess() {
		return (unknownRuleUNIT != null) ? unknownRuleUNIT : (unknownRuleUNIT = new UNITElements());
	}
	
	public EnumRule getUNITRule() {
		return getUNITAccess().getRule();
	}

	//// Define before INTLITERAL, so we can match.
	//
	////
	//
	//terminal MESSAGE_CODE:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F") ("0".."9" | "a".."f" | "A".."F") ("0".."9" | "a".."f" | "A".."F")
	//	("0".."9" | "a".."f" | "A".."F");
	public TerminalRule getMESSAGE_CODERule() {
		return (tMESSAGE_CODE != null) ? tMESSAGE_CODE : (tMESSAGE_CODE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MESSAGE_CODE"));
	} 

	//terminal INTLITERAL:
	//	"0" | "1".."9" "0".."9"*;
	public TerminalRule getINTLITERALRule() {
		return (tINTLITERAL != null) ? tINTLITERAL : (tINTLITERAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INTLITERAL"));
	} 

	//terminal NonIntNumber:
	//	"-"? DECIMAL (("e" | "E") ("+" | "-")? "0".."9"+)?;
	public TerminalRule getNonIntNumberRule() {
		return (tNonIntNumber != null) ? tNonIntNumber : (tNonIntNumber = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NonIntNumber"));
	} 

	//terminal ESC:
	//	"\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\" | "0".."3" "0".."7" "0".."7" | "0".."7" "0".."7" | "0".."7");
	public TerminalRule getESCRule() {
		return (tESC != null) ? tESC : (tESC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ESC"));
	} 

	//URI returns ecore::EString:
	//	ID ("." ID)+;
	public URIElements getURIAccess() {
		return (pURI != null) ? pURI : (pURI = new URIElements());
	}
	
	public ParserRule getURIRule() {
		return getURIAccess().getRule();
	}

	//terminal STRINGLITERAL:
	//	"\"" (ESC | !("\\" | "\""))* "\"" | "\'" (ESC | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGLITERALRule() {
		return (tSTRINGLITERAL != null) ? tSTRINGLITERAL : (tSTRINGLITERAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRINGLITERAL"));
	} 

	//// { debug(4,"ID") }
	//
	//terminal ID:
	//	("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal INTERPRETATION:
	//	"##"->"##";
	public TerminalRule getINTERPRETATIONRule() {
		return (tINTERPRETATION != null) ? tINTERPRETATION : (tINTERPRETATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INTERPRETATION"));
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
