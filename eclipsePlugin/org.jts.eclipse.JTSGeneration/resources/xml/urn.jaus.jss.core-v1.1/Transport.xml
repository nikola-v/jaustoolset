<?xml version="1.0" encoding="UTF-8"?>
<service_def xmlns="urn:jaus:jsidl:1.0" xmlns:ns2="urn:jaus:jsidl:1.1" id="urn:jaus:jss:core:Transport"  name="Transport" version="1.1">
  <description xml:space="preserve">
    The transport service acts as an interface to the JAUS transport layer. It models an abstract bi-directional communication channel (input queue and output queue) whose primary function is to provide the capability of sending messages to a single destination endpoint or broadcasting messages to all endpoints in the system, and to receive a message from any source endpoint. It also provides the capability to prioritize the delivery of sent messages. 
    This service establishes a communication endpoint whose address is defined by a triple {SubsystemID, NodeID, ComponentID} as specified by the Send and Receive internal events. Other services that need to utilize the communication channel provided by the transport service must inherit from the transport service. 
  </description>
  <assumptions> Messages may be delayed, lost or reordered. </assumptions>
  <declared_type_set name="TransportTypeSet">
    <declared_type_set_ref name="basicTypes" id="urn:jaus:jss:core:MessageSet:BasicTypes"
      version="1.1"/>    
    <record name="SendRec" optional="false">
      <presence_vector field_type_unsigned="unsigned byte"/>
      <fixed_field name="ReliableDelivery" field_type="unsigned byte" field_units="one"            optional="false">
        <value_set offset_to_lower_limit="false">
          <value_range lower_limit="0" lower_limit_type="inclusive"
            upper_limit="1" upper_limit_type="inclusive"/>
          <value_enum enum_index="0" enum_const="Unreliable"/>
          <value_enum enum_index="1" enum_const="Reliable"/>
        </value_set>
      </fixed_field>
      <declared_bit_field name="DestinationID" declared_type_ref="basicTypes.JausID"
        optional="false" interpretation="Identifier of destination to send the message"/>
      <declared_bit_field name="SourceID" declared_type_ref="basicTypes.JausID"
        optional="true" interpretation="Identifier of the sender of the message"/>
      <fixed_field name="Priority" field_type="unsigned byte" field_units="one" optional="true"
        interpretation="Priority level of this message. If not specified, the normal priority
        level is used.">
        <value_set offset_to_lower_limit="false">
          <value_range lower_limit="0" lower_limit_type="inclusive" upper_limit="3"
            upper_limit_type="inclusive" interpretation="priority range"/>
          <value_enum enum_index="0" enum_const="LOW"/>
          <value_enum enum_index="1" enum_const="NORMAL"/>
          <value_enum enum_index="2" enum_const="HIGH"/>
          <value_enum enum_index="3" enum_const="SAFETY"/>
        </value_set>
      </fixed_field>
      <variable_length_field name="MessagePayload" field_format="JAUS MESSAGE"
        optional="false" interpretation="Message payload.">
        <count_field field_type_unsigned="unsigned long integer" min_count="2"/>
      </variable_length_field>
    </record>
    <record name="BroadcastRec" optional="false">
      <presence_vector field_type_unsigned="unsigned byte"/>
      <declared_bit_field name="DestinationID" declared_type_ref="basicTypes.JausID"
        optional="false" interpretation="Identifier of destination to send the message"/>
      <declared_bit_field name="SourceID" declared_type_ref="basicTypes.JausID"
        optional="true" interpretation="Identifier of the sender of the message"/>
      <fixed_field name="Priority" field_type="unsigned byte" field_units="one" optional="true"
        interpretation="Priority level of this message. If not specified, the normal priority
        level is used.">
        <value_set offset_to_lower_limit="false">
          <value_range lower_limit="0" lower_limit_type="inclusive" upper_limit="3"
            upper_limit_type="inclusive" interpretation="priority range"/>
          <value_enum enum_index="0" enum_const="LOW"/>
          <value_enum enum_index="1" enum_const="NORMAL"/>
          <value_enum enum_index="2" enum_const="HIGH"/>
          <value_enum enum_index="3" enum_const="SAFETY"/>
        </value_set>
      </fixed_field>
      <variable_length_field name="MessagePayload" field_format="JAUS MESSAGE"
        optional="false" interpretation="Message payload.">
        <count_field field_type_unsigned="unsigned long integer" min_count="2"/>
      </variable_length_field>
    </record>
  </declared_type_set>
  <message_set>
    <input_set/>
    <output_set/>
  </message_set>
  <internal_events_set>
    <event_def name="Send">
      <description xml:space="preserve">
        The Send event is used by a derived service to hand over the payload data that it needs to send to a specified destination endpoint via the transport layer. Upon receipt, this service prepares the message for delivery (marshals the message) as specified by the transport layer specification and attempts to deliver the encapsulated payload data to the destination endpoint.
      </description>
      <header name="Header"/>
      <body name="Body">
        <declared_record name="SendRec" declared_type_ref="SendRec" optional="false"/>
      </body>
      <footer name="Footer"/>
    </event_def>
    <event_def name="BroadcastLocal">
      <description xml:space="preserve">
        The Broadcast Local event is the same as the Send event except that this service sends the payload to all endpoints within the subsystem.
      </description>
      <header name="Header"/>
      <body name="Body">
        <declared_record name="BroadcastRec" declared_type_ref="BroadcastRec" optional="false"/>
      </body>
      <footer name="Footer"/>
    </event_def>
    <event_def name="BroadcastGlobal">
      <description xml:space="preserve">
        The Broadcast Global event is the same as the Send event except that this service sends the payload to all endpoints on all subsystems.
      </description>
      <header name="Header"/>
      <body name="Body">
        <declared_record name="BroadcastRec" declared_type_ref="BroadcastRec" optional="false"/>
      </body>
      <footer name="Footer"/>
    </event_def>
    <event_def name="Receive">
      <description xml:space="preserve">
        The Receive event is used by derived services to hand over the data that was sent by another service to an endpoint established by this service.
      </description>
      <header name="Header"/>
      <body name="Body">
        <record name="ReceiveRec" optional="false" interpretation="transport data">
          <declared_bit_field name="SourceID" declared_type_ref="basicTypes.JausID"
            optional="false" interpretation="Identifier of the sender of the message"/>
          <variable_length_field name="MessagePayload" field_format="JAUS MESSAGE"
            optional="false" interpretation="message payload">
            <count_field field_type_unsigned="unsigned long integer" min_count="2"/>
          </variable_length_field>
        </record>
      </body>
      <footer name="Footer"/>
    </event_def>
  </internal_events_set>
  <protocol_behavior>
    <start state_machine_name="ReceiveFSM" state_name="Receiving"/>
    <start state_machine_name="SendFSM" state_name="Sending"/>
    <state_machine name="ReceiveFSM">
      <state name="Receiving">
        <transition name="Receive">
          <ns2:internal/>
        </transition>
      </state>
    </state_machine>
    <state_machine name="SendFSM">
      <state name="Sending">
        <transition name="Send">
          <parameter type="Send" value="msg"/>
          <ns2:internal/>
          <action name="Enqueue" interpretation="Convert the destination address into an unsigned
            integer such that the ComponentID maps to the least significant byte, NodeID to the next
            least significant byte and SubsystemID maps onto the remaining two bytes of the integer.
            Package the message as specified by the transport layer specification and send it to its
            destination as per the specified priority.">
            <argument value="msg"/>
          </action>
        </transition>
        <transition name="BroadcastLocal">
          <parameter type="BroadcastLocal" value="msg"/>
          <ns2:internal/>
          <action name="BroadcastLocalEnqueue" interpretation="Package the message as specified by the transport layer specification and send it to all endpoints in the local subsystem.">
            <argument value="msg"/>
          </action>
        </transition>
        <transition name="BroadcastGlobal">
          <parameter type="BroadcastGlobal" value="msg"/>
          <ns2:internal/>
          <action name="BroadcastGlobalEnqueue" interpretation="Package the message as specified by the transport layer specification and send it to all endpoints in on all subsystems.">
            <argument value="msg"/>
          </action>
        </transition>
      </state>
    </state_machine>
  </protocol_behavior>
</service_def> 
