<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="StateTestServiceDef" id="urn.jts.StateTest" version="1.1" xmlns:ns2="urn:jaus:jsidl:1.1" xmlns="urn:jaus:jsidl:1.0" xmlns:ns3="urn:jaus:jsidl:plus">
    <description xml:space="preserve"></description>
    <assumptions xml:space="preserve"></assumptions>
    <references/>
    <message_set>
        <input_set>
            <message_def name="Message2" message_id="1514" is_command="false">
                <description xml:space="preserve"></description>
                <header name="JTS_DefaultHeader">
                    <record name="DefaultHeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_units="one" field_type="unsigned short integer"/>
                    </record>
                </header>
                <body name="EmptyBody"/>
                <footer name="EmptyFooter"/>
            </message_def>
            <message_def name="Message1" message_id="5013" is_command="false">
                <description xml:space="preserve"></description>
                <header name="JTS_DefaultHeader">
                    <record name="DefaultHeaderRec" optional="false">
                        <fixed_field name="MessageID" optional="false" field_units="one" field_type="unsigned short integer"/>
                    </record>
                </header>
                <body name="EmptyBody"/>
                <footer name="EmptyFooter"/>
            </message_def>
        </input_set>
        <output_set/>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="true">
        <start state_machine_name="StateTest" state_name="ParentState.ChildState1"/>
        <state_machine name="StateTest">
            <state name="ParentState" initial_state="ChildState1">
                <transition name="Message2">
                    <simple>
                        <end_state state="FinalState"/>
                    </simple>
                </transition>
                <state name="ChildState1">
                    <transition name="Message1">
                        <simple>
                            <end_state state="ParentState.ChildState2"/>
                        </simple>
                    </transition>
                </state>
                <state name="ChildState2"/>
            </state>
            <state name="FinalState"/>
        </state_machine>
    </protocol_behavior>
</service_def>
