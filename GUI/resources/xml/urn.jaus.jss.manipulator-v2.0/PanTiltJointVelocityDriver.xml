<?xml version="1.1" encoding="UTF-8"?> <?oxygen RNGSchema="../../schema/JSIDL/jsidl.rnc" type="compact"?>
<service_def name="PanTiltJointVelocityDriver"
  id="urn:jaus:jss:manipulator:PanTiltJointVelocityDriver" version="2.0"
  xmlns="urn:jaus:jsidl:1.0" xmlns:ns1="urn:jaus:jsidl:1.1">
  <description xml:space="preserve">
    The function of The Pan Tilt Joint Velocity Driver is to perform closed-loop joint 
    velocity control.  The input is the desired instantaneous desired joint velocities 
    for the pan tilt mechanism.  It is assumed that the pan tilt mechanism begins motion 
    immediately after receiving the Set Pan Tilt Joint Velocity message. To ensure 
    backward compatibility with 1.0 implementations of this service, it is recommended 
    that this service be co-located on the same component as a Pan Tilt Specification 
    Service and a Pan Tilt Motion Profile Service.
  </description>
  <assumptions> Messages may be delayed, lost, or reordered. </assumptions>
  <references>
    <inherits_from name="management" id="urn:jaus:jss:core:Management" version="1.1"/>
  </references>
  <declared_type_set name="types">
    <declared_type_set_ref name="manipulator" id="urn:jaus:jss:manipulator:MessageSet"
      version="2.0"/>
  </declared_type_set>
  <message_set>
    <input_set>
      <declared_message_def name="SetPanTiltJointVelocity"
        declared_type_ref="manipulator.commandClass.SetPanTiltJointVelocity"/>
      <declared_message_def name="QueryCommandedPanTiltJointVelocity"
        declared_type_ref="manipulator.queryClass.QueryCommandedPanTiltJointVelocity"/>
    </input_set>
    <output_set>
      <declared_message_def name="ReportCommandedPanTiltJointVelocity"
        declared_type_ref="manipulator.informClass.ReportCommandedPanTiltJointVelocity"
      />
    </output_set>
  </message_set>
  <internal_events_set/>
  <protocol_behavior is_stateless="false">
    <start state_machine_name="management.accessControl.events.transport.ReceiveFSM"
      state_name="Receiving.Ready.NotControlled"/>
    <state_machine name="management.accessControl.events.transport.ReceiveFSM"
      interpretation="extending ReceiveFSM of base service (transport)">
      <state name="Receiving" initial_state="Ready"
        interpretation="redefine state in order to extend">
        <state name="Ready" initial_state="NotControlled"
          interpretation="redefine state in order to extend">
          <state name="NotControlled" interpretation="redefine state in order to extend">

            <default_state>
              <transition name="management.accessControl.events.transport.Receive">
                <parameter type="QueryCommandedPanTiltJointVelocity" value="msg"
                  interpretation="enveloped query commanded Pan Tilt joint velocities message"/>
                <parameter type="Receive.Body.ReceiveRec" value="transportData"
                  interpretation="transport data"/>
                <simple/>
                <action name="management.accessControl.events.transport.Send"
                  interpretation="Send a Report Commanded Pan Tilt joint velocities message">
                  <argument value=" 'ReportCommandedPanTiltJointVelocity' "/>
                  <argument value="transportData"/>
                </action>
              </transition>
            </default_state>

          </state>
          <state name="Controlled" interpretation="redefine state in order to extend">
            <state name="Available" initial_state="Standby">
              <state name="Ready">
                <exit>
                  <action name="stopMotion"
                    interpretation="Stop motion of the pan tilt unit."/>
                </exit>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="SetPanTiltJointVelocity" value="msg"
                    interpretation="enveloped set Pan Tilt joint velocities message"/>
                  <parameter type="Receive.Body.ReceiveRec" value="transportData"
                    interpretation="transport data"/>
                  <guard
                    condition="management.accessControl.isControllingClient(transportData) 
                    &amp;&amp; panTiltMotionProfileExists()"
                    interpretation="True if the message that triggered the transition 
                    is received from the client that is in control of this service AND
                    True if a motion profile has already been received"/>
                  <simple/>
                  <action name="setPanTiltJointVelocity"
                    interpretation="Set the desired velocities for the individual joints 
                    of the Pan Tilt mechanism">
                    <argument value=" 'SetPanTiltJointVelocity' "/>
                    <argument value="transportData"/>
                  </action>
                </transition>
              </state>
            </state>
            <default_state>
              <transition name="management.accessControl.events.transport.Receive">
                <parameter type="QueryCommandedPanTiltJointVelocity" value="msg"
                  interpretation="enveloped query commanded Pan Tilt joint velocities message"/>
                <parameter type="Receive.Body.ReceiveRec" value="transportData"
                  interpretation="transport data"/>
                <simple/>
                <action name="management.accessControl.events.transport.Send"
                  interpretation="Send a Report Commanded Pan Tilt joint velocities message">
                  <argument value=" 'ReportCommandedPanTiltJointVelocity' "/>
                  <argument value="transportData"/>
                </action>
              </transition>
            </default_state>
          </state>
        </state>
      </state>
    </state_machine>
  </protocol_behavior>
</service_def>
