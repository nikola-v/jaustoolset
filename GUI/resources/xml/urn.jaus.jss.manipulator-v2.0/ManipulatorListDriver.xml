<?xml version="1.1" encoding="UTF-8"?> <?oxygen RNGSchema="../../schema/JSIDL/jsidl.rnc" type="compact"?>
<service_def name="ManipulatorListDriver"
  id="urn:jaus:jss:manipulator:ManipulatorListDriver" version="2.0"
  xmlns="urn:jaus:jsidl:1.0" xmlns:ns1="urn:jaus:jsidl:1.1">
  <description xml:space="preserve">
    The function of the Manipulator List Driver is to add support for executing a list 
    of waypoints. It is expected that child services will inherit this service to provide 
    functionality by overriding the isListValid() guard in the protocol.
  </description>
  <assumptions> Messages may be delayed, lost, or reordered. </assumptions>
  <references>
    <inherits_from name="listManager" id="urn:jaus:jss:core:ListManager" version="1.1"/>
  </references>
  <declared_type_set name="types">
    <declared_type_set_ref name="manipulator" id="urn:jaus:jss:manipulator:MessageSet"
      version="2.0"/>
  </declared_type_set>
  <message_set>
    <input_set>
      <declared_message_def name="ExecuteList"
        declared_type_ref="manipulator.commandClass.ExecuteList"/>
      <declared_message_def name="QueryActiveElement"
        declared_type_ref="manipulator.queryClass.QueryActiveElement"/>
    </input_set>
    <output_set>
      <declared_message_def name="ReportActiveElement"
        declared_type_ref="manipulator.informClass.ReportActiveElement"/>
    </output_set>
  </message_set>
  <internal_events_set/>
  <protocol_behavior is_stateless="false">
    <start
      state_machine_name="listManager.management.accessControl.events.transport.ReceiveFSM"
      state_name="Receiving.Ready.NotControlled"/>
    <state_machine name="listManager.management.accessControl.events.transport.ReceiveFSM"
      interpretation="extending ReceiveFSM of base service (transport)">
      <state name="Receiving" initial_state="Ready"
        interpretation="redefine state in order to extend">
        <state name="Ready" initial_state="NotControlled"
          interpretation="redefine state in order to extend">
          <state name="NotControlled" interpretation="redefine state in order to extend">

            <default_state>
              <transition
                name="listManager.management.accessControl.events.transport.Receive">
                <parameter type="QueryActiveElement" value="msg"
                  interpretation="enveloped query Active element message"/>
                <parameter type="Receive.Body.ReceiveRec" value="transportData"
                  interpretation="transport data"/>
                <simple/>
                <action name="listManager.management.accessControl.events.transport.Send"
                  interpretation="Send a Report Active Element message">
                  <argument value=" 'ReportActiveElement' "/>
                  <argument value="transportData"/>
                </action>
              </transition>
            </default_state>

          </state>
          <state name="Controlled" interpretation="redefine state in order to extend">
            <state name="Available" initial_state="Standby">
              <state name="Ready">
                <exit>
                  <action name="stopMotion"
                    interpretation="Stop motion of the manipulator."/>
                </exit>
                <transition
                  name="listManager.management.accessControl.events.transport.Receive">
                  <parameter type="ExecuteList" value="msg"
                    interpretation="enveloped execute list message"/>
                  <parameter type="Receive.Body.ReceiveRec" value="transportData"
                    interpretation="transport data"/>
                  <guard
                    condition="isControllingClient( transportData ) &amp;&amp; 
                    listManager.elementExists( msg ) &amp;&amp; isListValid()"
                    interpretation="This condition is always FALSE.  It must be 
                    overridden by derived services to allow the list to be executed."/>
                  <simple/>
                </transition>
              </state>
            </state>
            <default_state>
              <transition
                name="listManager.management.accessControl.events.transport.Receive">
                <parameter type="QueryActiveElement" value="msg"
                  interpretation="enveloped query Active element message"/>
                <parameter type="Receive.Body.ReceiveRec" value="transportData"
                  interpretation="transport data"/>
                <simple/>
                <action name="listManager.management.accessControl.events.transport.Send"
                  interpretation="Send a Report Active Element message">
                  <argument value=" 'ReportActiveElement' "/>
                  <argument value="transportData"/>
                </action>
              </transition>
            </default_state>
          </state>
        </state>
      </state>
    </state_machine>
  </protocol_behavior>
</service_def>
