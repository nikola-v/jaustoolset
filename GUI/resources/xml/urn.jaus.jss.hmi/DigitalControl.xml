<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../schema/AS5684/jaus_service_interface_definition_language.rnc" type="application/relax-ng-compact-syntax"?>
<service_def xmlns="urn:jaus:jsidl:1.0" name="DigitalControl" id="urn:jaus:jss:HMI:DigitalControl" version="1.0">
    <description>An operator interface that has digital controls, such as a button, either as software or hardware may implement the Digital Control Service that would send a Report DCM message to the remote asset when a digital control push or release occurs.  The Digital Control Service is used in conjunction with the Drawing Service.
        The remote asset may send a Set DCM message to the operator interface to control the current state of a digital control.  This allows the operator interface to alter the display of the referenced digital control to be displayed as inset or released, active or inactive and flashing or steady.
        The remote asset may create an Event for the operator interface to send Digital Control Messages (DCMs).  It is highly recommended that this Event should be upon a change and not periodic frequency.</description>
    <assumptions>Messages may be delayed, lost or reordered.</assumptions>
    <references>
        <inherits_from name="accessControl" id="urn:jaus:jss:core:AccessControl" version="1.0"/>
    </references>
    <declared_type_set name="Types">
        <declared_type_set_ref name="HMI" id="urn:jaus:jss:HMI:MessageSet" version="1.0"/>
    </declared_type_set>
    <message_set>
        <input_set>
            <declared_message_def name="QueryDCM" declared_type_ref="HMI.queryClass.QueryDCM"/>
            <declared_message_def name="SetDCM" declared_type_ref="HMI.commandClass.SetDCM"/>
        </input_set>
        <output_set>
            <declared_message_def name="ReportDCM" declared_type_ref="HMI.informClass.ReportDCM"/>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior>
        <start state_machine_name="accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled"/>
        <state_machine name="accessControl.events.transport.ReceiveFSM" interpretation="extending ReceiveFSM of base service (transport)">
            <state name="Receiving" initial_state="Ready" interpretation="redefine state in order to extend">
                <state name="Ready" initial_state="NotControlled" interpretation="redefine state in order to extend">
                    <state name="NotControlled" interpretation="redefine state in order to extend">
                        
                            <default_state>
                                <transition name="accessControl.events.transport.Receive">
                                    <parameter type="QueryDCM" value="msg" interpretation="query DCM message"/>
                                    <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                    <simple/>
                                    <action name="accessControl.events.transport.Send" interpretation="send a report DCM message">
                                        <argument value="'ReportDCM'"/>
                                        <argument value="transportData"/>
                                    </action>
                                </transition>
                            </default_state>
                        
                    </state>
                    <state name="Controlled" interpretation="redefine state in order to extend">

                            <default_state>
                                <transition name="accessControl.events.transport.Receive">
                                    <parameter type="QueryDCM" value="msg" interpretation="query DCM message"/>
                                    <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                    <simple/>
                                    <action name="accessControl.events.transport.Send" interpretation="send a report DCM message">
                                        <argument value="'ReportDCM'"/>
                                        <argument value="transportData"/>
                                    </action>
                                </transition>
                                <transition name="accessControl.events.transport.Receive">
                                    <parameter type="SetDCM" value="msg" interpretation="set DCM message"/>
                                    <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                                    <simple/>
                                    <action name="setDCM" interpretation="set the digital control style on the operator interface.">
                                        <argument value="msg"/>
                                    </action>
                                </transition>
                            </default_state>
                        
                    </state>
                </state>
            </state>
        </state_machine>
    </protocol_behavior>
</service_def>
