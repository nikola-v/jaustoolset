<?xml version="1.1" encoding="UTF-8"?> <?oxygen RNGSchema="../../schema/JSIDL/jsidl.rnc" type="compact"?>
<service_def name="PanTiltMotionProfileService"
  id="urn:jaus:jss:manipulator:PanTiltMotionProfileService" version="1.1"
  xmlns="urn:jaus:jsidl:1.0" xmlns:ns1="urn:jaus:jsidl:1.1">
  <description xml:space="preserve">
    The function of the Pan Tilt Motion Profile Service is to allow for configuration 
    of the motion profile for all services co-located on this component. 	The Set Pan 
    Tilt Motion Profile message is used to set maximum velocity and acceleration rates 
    for each of the two variable joint parameters. All motions utilize the motion 
    profile data that was most recently sent. 
  </description>
  <assumptions> Messages may be delayed, lost, or reordered. </assumptions>
  <references>
    <inherits_from name="accessControl" id="urn:jaus:jss:core:AccessControl" version="1.1"
    />
  </references>
  <declared_type_set name="types">
    <declared_type_set_ref name="manipulator" id="urn:jaus:jss:manipulator:MessageSet"
      version="1.1"/>
  </declared_type_set>
  <message_set>
    <input_set>
      <declared_message_def name="QueryPanTiltMotionProfile"
        declared_type_ref="manipulator.queryClass.QueryPanTiltMotionProfile"/>
      <declared_message_def name="SetPanTiltMotionProfile"
        declared_type_ref="manipulator.commandClass.SetPanTiltMotionProfile"/>
    </input_set>
    <output_set>
      <declared_message_def name="ReportPanTiltMotionProfile"
        declared_type_ref="manipulator.informClass.ReportPanTiltMotionProfile"/>
    </output_set>
  </message_set>
  <internal_events_set/>
  <protocol_behavior is_stateless="false">
    <start state_machine_name="accessControl.events.transport.ReceiveFSM"
      state_name="Receiving.Ready.NotControlled"/>
    <state_machine name="accessControl.events.transport.ReceiveFSM"
      interpretation="extending ReceiveFSM of base service (transport)">
      <state name="Receiving" initial_state="Ready"
        interpretation="redefine state in order to extend">
        <state name="Ready" initial_state="NotControlled"
          interpretation="redefine state in order to extend">
          <state name="NotControlled" interpretation="redefine in order to extend">
            <default_state>
              <transition name="accessControl.events.transport.Receive">
                <parameter type="QueryPanTiltMotionProfile" value="msg"
                  interpretation="enveloped query Pan Tilt motion profile message"/>
                <parameter type="Receive.Body.ReceiveRec" value="transportData"
                  interpretation="transport data"/>
                <guard condition="panTiltMotionProfileExists()"
                  interpretation="True if a Pan Tilt motion profile has already 
                  been received."/>
                <simple/>
                <action name="accessControl.events.transport.Send"
                  interpretation="Send a Report Pan Tilt Motion Profile message">
                  <argument value=" 'ReportPanTiltMotionProfile' "/>
                  <argument value="transportData"/>
                </action>
              </transition>
            </default_state>
          </state>
          <state name="Controlled" interpretation="redefine in order to extend">
            <default_state>
              <transition name="accessControl.events.transport.Receive">
                <parameter type="QueryPanTiltMotionProfile" value="msg"
                  interpretation="enveloped query Pan Tilt motion profile message"/>
                <parameter type="Receive.Body.ReceiveRec" value="transportData"
                  interpretation="transport data"/>
                <guard condition="panTiltMotionProfileExists()"
                  interpretation="True if a Pan Tilt motion profile has already 
                  been received."/>
                <simple/>
                <action name="accessControl.events.transport.Send"
                  interpretation="Send a Report Pan Tilt Motion Profile message">
                  <argument value=" 'ReportPanTiltMotionProfile' "/>
                  <argument value="transportData"/>
                </action>
              </transition>
              <transition name="accessControl.events.transport.Receive">
                <parameter type="SetPanTiltMotionProfile" value="msg"
                  interpretation="enveloped set Pan Tilt motion profile message"/>
                <parameter type="Receive.Body.ReceiveRec" value="transportData"
                  interpretation="transport data"/>
                <guard condition="accessControl.isControllingClient(transportData)"
                  interpretation="True if the message that triggered the transition 
                  is received from the client that is in control of this service."/>
                <simple/>
                <action name="setPanTiltMotionProfile"
                  interpretation="Set the motion profile parameters for the pan tilt 
                  mechanism">
                  <argument value="msg"/>
                </action>
              </transition>
            </default_state>
          </state>
        </state>
      </state>
    </state_machine>
  </protocol_behavior>
</service_def>
