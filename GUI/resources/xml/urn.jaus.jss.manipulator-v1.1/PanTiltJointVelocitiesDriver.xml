<?xml version="1.1" encoding="UTF-8"?> <?oxygen RNGSchema="../../schema/JSIDL/jsidl.rnc" type="compact"?>
<service_def name="PanTiltJointVelocitiesDriver" id="urn:jaus:jss:manipulator:PanTiltJointVelocitiesDriver"
  version="1.1" xmlns="urn:jaus:jsidl:1.0" xmlns:ns1="urn:jaus:jsidl:1.1" >
  <description xml:space="preserve">
  	The function of the Pan Tilt Joint Velocities Driver is to perform closed-loop joint velocity control.  The input is the desired instantaneous 
    desired joint velocities for the pan tilt mechanism.  The Set Pan Tilt Motion Profile message is used to set maximum velocity and acceleration 
    rates for both of the variable joint parameters.  All motions utilize the motion profile data that was most recently sent.  Default settings 
    are not assumed so that upon initialization this message must be sent before the first Set Pan Tilt Joint Velocities message is sent.  It is 
    assumed that the pan tilt mechanism begins motion immediately after receiving the Set Pan Tilt Joint Velocities message.
  </description>
  <assumptions>
    Messages may be delayed, lost, or reordered.
  </assumptions>
  <references>
    <inherits_from name="management" id="urn:jaus:jss:core:Management" version="1.1" />
  </references>
  <declared_type_set name="types">
    <declared_type_set_ref name="manipulator" id="urn:jaus:jss:manipulator:MessageSet" version="1.1" />
  </declared_type_set>
  <message_set>
    <input_set>
      <declared_message_def name="QueryPanTiltSpecifications" declared_type_ref="manipulator.queryClass.QueryPanTiltSpecifications" />
      <declared_message_def name="SetPanTiltJointVelocities" declared_type_ref="manipulator.commandClass.SetPanTiltJointVelocities" />
      <declared_message_def name="SetPanTiltMotionProfile" declared_type_ref="manipulator.commandClass.SetPanTiltMotionProfile" />
      <declared_message_def name="QueryCommandedPanTiltJointVelocities" declared_type_ref="manipulator.queryClass.QueryCommandedPanTiltJointVelocities" />
      <declared_message_def name="QueryPanTiltMotionProfile" declared_type_ref="manipulator.queryClass.QueryPanTiltMotionProfile" />
    </input_set>
    <output_set>
      <declared_message_def name="ReportPanTiltSpecifications" declared_type_ref="manipulator.informClass.ReportPanTiltSpecifications" />
      <declared_message_def name="ReportCommandedPanTiltJointVelocities" declared_type_ref="manipulator.informClass.ReportCommandedPanTiltJointVelocities" />
      <declared_message_def name="ReportPanTiltMotionProfile" declared_type_ref="manipulator.informClass.ReportPanTiltMotionProfile" />
    </output_set>
  </message_set>
  <internal_events_set />
  <protocol_behavior is_stateless="false">
    <start state_machine_name="management.accessControl.events.transport.ReceiveFSM" state_name="Receiving.Ready.NotControlled" />
    <state_machine name="management.accessControl.events.transport.ReceiveFSM" interpretation="extending ReceiveFSM of base service (transport)">
      <state name="Receiving" initial_state="Ready" interpretation="redefine state in order to extend">
        <state name="Ready" initial_state="NotControlled" interpretation="redefine state in order to extend">
          <state name="NotControlled" interpretation="redefine state in order to extend">
            
              <default_state>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="QueryPanTiltSpecifications" value="msg"
                    interpretation="enveloped query Pan Tilt specification message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <simple />
                  <action name="management.accessControl.events.transport.Send" interpretation="Send a report Pan Tilt specs message">
                    <argument value=" 'ReportPanTiltSpecifications' " />
                    <argument value="transportData"/>
                  </action>
                </transition>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="QueryCommandedPanTiltJointVelocities" value="msg" interpretation="enveloped query commanded Pan Tilt joint velocities message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <simple />
                  <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Commanded Pan Tilt joint velocities message">
                    <argument value=" 'ReportCommandedPanTiltJointVelocities' " />
                    <argument value="transportData"/>
                  </action>
                </transition>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="QueryPanTiltMotionProfile" value="msg" interpretation="enveloped query Pan Tilt motion profile message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <guard condition="panTiltMotionProfileExists()" interpretation="True if a motion profile has already been received." />
                  <simple />
                  <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Pan Tilt Motion Profile message">
                    <argument value=" 'ReportPanTiltMotionProfile' " />
                    <argument value="transportData"/>
                  </action>
                </transition>
              </default_state>
 
          </state>
          <state name="Controlled" interpretation="redefine state in order to extend">
            <state name="Available" initial_state="Standby">
              <state name="Ready">
                <exit>
                  <action name="stopMotion" interpretation="Stop motion of the pan tilt unit." />
                </exit>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="SetPanTiltJointVelocities" value="msg" interpretation="enveloped set Pan Tilt joint velocities message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <guard condition="management.accessControl.isControllingClient(transportData) &amp;&amp; panTiltMotionProfileExists()"
                    interpretation="True if the message that triggered the transition is received from the client that is in control of this service AND
                      True if a motion profile has already been received" />
                  <simple />
                  <action name="setPanTiltJointVelocities" interpretation="Set the desired velocities for the individual joints of the Pan Tilt mechanism">
                    <argument value=" 'SetPanTiltJointVelocities' " />
                    <argument value="transportData"/>
                  </action>
                </transition>
              </state>
            </state>
            <default_state>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="QueryPanTiltSpecifications" value="msg"
                    interpretation="enveloped query Pan Tilt specification message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <simple />
                  <action name="management.accessControl.events.transport.Send" interpretation="Send a report Pan Tilt specs message">
                    <argument value=" 'ReportPanTiltSpecifications' " />
                    <argument value="transportData"/>
                  </action>
                </transition>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="QueryCommandedPanTiltJointVelocities" value="msg" interpretation="enveloped query commanded Pan Tilt joint velocities message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <simple />
                  <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Commanded Pan Tilt joint velocities message">
                    <argument value=" 'ReportCommandedPanTiltJointVelocities' " />
                    <argument value="transportData"/>
                  </action>
                </transition>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="QueryPanTiltMotionProfile" value="msg" interpretation="enveloped query Pan Tilt motion profile message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <guard condition="panTiltMotionProfileExists()" interpretation="True if a motion profile has already been received." />
                  <simple />
                  <action name="management.accessControl.events.transport.Send" interpretation="Send a Report Pan Tilt Motion Profile message">
                    <argument value=" 'ReportPanTiltMotionProfile' " />
                    <argument value="transportData"/>
                  </action>
                </transition>
                <transition name="management.accessControl.events.transport.Receive">
                  <parameter type="SetPanTiltMotionProfile" value="msg" interpretation="enveloped set Pan Tilt motion profile message" />
                  <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data" />
                  <guard condition="management.accessControl.isControllingClient(transportData)" 
                    interpretation="True if the message that triggered the transition is received from the client that is in control of this service." />
                  <simple />
                  <action name="setPanTiltMotionProfile" interpretation="Set the motion profile parameters for the Pan Tilt mechanism">
                    <argument value="msg" />
                  </action>
                </transition>
              </default_state>
          </state>
        </state>
      </state>
    </state_machine>
  </protocol_behavior>
</service_def>