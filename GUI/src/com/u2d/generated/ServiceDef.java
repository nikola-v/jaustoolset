/*
 * ServiceDef.java
 *
 * This code has been auto-updated by JTS after it has been auto-generated by umlc
 * Created on Wed Oct 05 10:31:04 EDT 2011
 */

package com.u2d.generated;


import com.u2d.model.*;
import com.u2d.app.PersistenceMechanism;
import com.u2d.type.*;
import com.u2d.type.atom.*;
import com.u2d.type.composite.*;
import com.u2d.list.RelationalList;
import com.u2d.reflection.Fld;
import javax.persistence.Entity;
import com.u2d.reflection.Cmd;import com.u2d.reflection.Arg;
import com.u2d.element.CommandInfo;


@Entity
public  class ServiceDef extends AbstractComplexEObject_JTS{

    
    /** Creates a new instance of ServiceDef */
    public ServiceDef() {
    }
    public Title title() { 
        StringBuffer text = new StringBuffer();
        text.append(name.title() + " v" + _version.title()+ " [ServiceDef]");
        return new Title(text.toString());
    }    
    


    // ******    name   ******
    private final StringEO name = new StringEO();
    public StringEO getName() { return name;}

    // ******    serviceId   ******
    private final StringEO serviceId = new StringEO();
    @Fld(label="ID")
    public StringEO getServiceId() { return serviceId;}

    // ******    _version   ******
    private final StringEO _version = new StringEO();
    @Fld(label="Version")
    public StringEO get_version() { return _version;}

    // ******    description   ******
    private final TextEO description = new TextEO();
    public TextEO getDescription() { return description;}

    // ******    assumptions   ******
    private final StringEO assumptions = new StringEO();
    public StringEO getAssumptions() { return assumptions;}

    // ******    inheritsFromName   ******
    private final StringEO inheritsFromName = new StringEO();
    public StringEO getInheritsFromName() { return inheritsFromName;}

   




 
    // ********  protocolBehavior ********
    private ProtocolBehavior protocolBehavior;
    public static final String protocolBehaviorInverseFieldName = "referencingServiceDefs";
    public ProtocolBehavior getProtocolBehavior() {
        return protocolBehavior;
    }
    public void setProtocolBehavior(ProtocolBehavior protocolBehavior) {
        ProtocolBehavior old = this.protocolBehavior;
        this.protocolBehavior = protocolBehavior;
        firePropertyChange("protocolBehavior", old, this.protocolBehavior );
    }


 
    // *********  eventDefs ******
    private final RelationalList eventDefs = new RelationalList(EventDef.class);
    public static final Class eventDefsType = EventDef.class;
    public static final int eventDefsRelationType = PersistenceMechanism.MANY_TO_MANY;    
    public static final boolean eventDefsRelationIsInverse = false;
    public RelationalList getEventDefs() { return eventDefs; } 
 


 
    // ********  inputSet ********
    private InputSet inputSet;
    public InputSet getInputSet() {
        return inputSet;
    }
    public void setInputSet(InputSet inputSet) {
        InputSet old = this.inputSet;
        this.inputSet = inputSet;
        firePropertyChange("inputSet", old, this.inputSet );
    }


 
    // ********  outputSet ********
    private OutputSet outputSet;
    public OutputSet getOutputSet() {
        return outputSet;
    }
    public void setOutputSet(OutputSet outputSet) {
        OutputSet old = this.outputSet;
        this.outputSet = outputSet;
        firePropertyChange("outputSet", old, this.outputSet );
    }




 
    // ********  inheritsFrom ********
    private ServiceDef inheritsFrom;
    public ServiceDef getInheritsFrom() {
        return inheritsFrom;
    }
    public void setInheritsFrom(ServiceDef inheritsFrom) {
        // check for a reference to self (this can't get validated through validator because
       // the object is put into a readonly state the moment the reference has been selected
       // in the UI, and manual save never happens. this seems to happen when
       // the *InverseFieldName construct is used)
       if(	inheritsFrom != null &&
         inheritsFrom.getServiceId().equals(getServiceId()) &&
         inheritsFrom.get_version().equals(get_version()) )
       {
		       java.awt.EventQueue.invokeLater( new Runnable() {
   	         public void run() {
   	            javax.swing.JOptionPane.showMessageDialog( null,
   	            "A ServiceDef cannot inherit from itself", "JTS Message Dialog",
   	            javax.swing.JOptionPane.ERROR_MESSAGE) ;
   	         }
    	     });
           return;
       }
       if( inheritsFrom == null && inheritsFromName.stringValue().length() > 0 )
          inheritsFromName.setValue( "" );
       else if( inheritsFrom != null && inheritsFromName.stringValue().length() == 0 )
         inheritsFromName.setValue( inheritsFrom.getName().stringValue() ); 

        ServiceDef  old  =  this.inheritsFrom;
        this.inheritsFrom = inheritsFrom;
        firePropertyChange("inheritsFrom", old, this.inheritsFrom );
    }




 
    // *********  clientOf ******
    private final RelationalList clientOf = new RelationalList(ServiceDef.class);
    public static final Class clientOfType = ServiceDef.class;
    public static final int clientOfRelationType = PersistenceMechanism.MANY_TO_MANY;    
    public static final boolean clientOfRelationIsInverse = false;
    public RelationalList getClientOf() { return clientOf; } 
 


 
    // ********  constantSet ********
    private ConstantSet constantSet;
    public ConstantSet getConstantSet() {
        return constantSet;
    }
    public void setConstantSet(ConstantSet constantSet) {
        ConstantSet old = this.constantSet;
        this.constantSet = constantSet;
        firePropertyChange("constantSet", old, this.constantSet );
    }
 
/************** Uncomment the following as needed *****************************/
      public static String[] fieldOrder  = {"name", "serviceId", "_version", "description", "assumptions", "inheritsFrom", "clientOf", "inputSet", "outputSet", "eventDefs", "protocolBehavior", "constantSet", "referencingElements"};
public static String[] readOnly  = {"referencingElements"};
// ******    referencingElements   ******
   private final StringEO referencingElements = new StringEO("{ServiceDefs (clientOf, InheritsFrom), Service Sets}");
   public StringEO getReferencingElements() { return referencingElements;}

      ;
//    public static String[] tabViews          = {"fieldname1", "fieldname2"};

      ;
//    public static String[] flattenIntoParent = {"fieldname1", "fieldname2"};

      ;
//    public static String[] identities = {"fieldname1", "fieldname2"};

//    public static String pluralName() { return "ServiceDefs"; }
      /* Specify a color to represnt this class */
//    public static Color colorCode = new Color(0x2332);

      /* Use a different Icon for each instance. Change photoFieldName. */
//    private transient PhotoIconAssistant assistant = 
//                        new PhotoIconAssistant(this, photoFieldname);
//    public Icon iconLg() { return assistant.iconLg(); }
//    public Icon iconSm() { return assistant.iconSm(); }


      /* Specify the default search field for this class */
//    public static String defaultSearchPath = "";


      /* Specify a custom view for this class. 
//    public EView getMainView()
//    {
//       return new CustomServiceDefView(this);
//    }
/**********************/
	@Cmd(mnemonic='i')
	public static Object ImportFromJSIDL(CommandInfo cmdInfo)
	{
	     org.jts.gui.importJSIDL.Import _import = new org.jts.gui.importJSIDL.Import();
	       _import.importServiceDefs();
	      return null;
	}
	@Cmd(mnemonic='c')
	public static Object ImportFromCJSIDL(CommandInfo cmdInfo)
	{
	     org.jts.gui.importCJSIDL.Import _import = new org.jts.gui.importCJSIDL.Import();
	       _import.importServiceDefs();
	      return null;
	}
	@Cmd(mnemonic='x')
	public Object ExportToJSIDL(com.u2d.element.CommandInfo cmdInfo)
	{
	      org.jts.gui.exportJSIDL.Export.exportServiceDefJSIDL( this );
		 return null;
	}
	@Cmd(mnemonic='x')
	public Object ExportToJSIDLPlus(com.u2d.element.CommandInfo cmdInfo)
	{
	      org.jts.gui.exportJSIDL.Export.exportServiceDefJSIDLPlus( this );
		 return null;
	}
	@Cmd(mnemonic='C')
	public Object ExportToCJSIDL(com.u2d.element.CommandInfo cmdInfo)
	{
	      org.jts.gui.exportCJSIDL.Export.exportServiceDefCJSIDL( this );
		 return null;
	}
	@Cmd(mnemonic='v')
	public Object recursiveDelete(com.u2d.element.CommandInfo cmdInfo)
	{
	      org.jts.gui.deepDelete.DeepDeleteStart.performDelete( this );
		 return null;
	}
        
}
