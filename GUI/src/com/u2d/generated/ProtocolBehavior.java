/*
 * ProtocolBehavior.java
 *
 * This code has been auto-updated by JTS after it has been auto-generated by umlc
 * Created on Wed Oct 05 10:31:04 EDT 2011
 */

package com.u2d.generated;


import com.u2d.model.*;
import com.u2d.app.PersistenceMechanism;
import com.u2d.type.*;
import com.u2d.type.atom.*;
import com.u2d.type.composite.*;
import com.u2d.list.RelationalList;
import com.u2d.reflection.Fld;
import javax.persistence.Entity;
import java.util.List;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.Unmarshaller;
import javax.xml.transform.stream.StreamSource;
import javax.swing.JOptionPane;
import java.io.StringReader;



@Entity
public  class ProtocolBehavior extends AbstractComplexEObject_JTS{

    
    /** Creates a new instance of ProtocolBehavior */
    public ProtocolBehavior() {
    }
    public Title title() { 
        org.jts.jsidl.binding.ProtocolBehavior jxpb = new org.jts.jsidl.binding.ProtocolBehavior();
        
        try{
        JAXBContext jc = JAXBContext.newInstance( "org.jts.jsidl.binding" );
        Unmarshaller u = jc.createUnmarshaller();
        String xmlStr = getProtocolBehavior().stringValue();
        if( xmlStr != null && xmlStr.length() > 0)
          jxpb = (org.jts.jsidl.binding.ProtocolBehavior)u.unmarshal( new StreamSource( new StringReader( xmlStr ) ) );
        } catch( Exception ex ) {
          ex.printStackTrace();
        }
        
        StringBuffer titleBuf = new StringBuffer();
        List fsmList = jxpb.getStateMachine();
        for(int ii=0; ii<fsmList.size(); ii++) {
          org.jts.jsidl.binding.StateMachine jxfsm = (org.jts.jsidl.binding.StateMachine) fsmList.get(ii);
          titleBuf.append( jxfsm.getName() );
          if( ii != fsmList.size()-1 )
            titleBuf.append( ", " );
        }
        return new Title(titleBuf.toString() + "  [ProtocolBehavior]");
    }    
    


    // ******    protocolBehavior   ******
    private final TextEO protocolBehavior = new TextEO();
    public TextEO getProtocolBehavior() { return protocolBehavior;}

    // ******    image   ******
    private final ImgEO image = new ImgEO();
    public ImgEO getImage() { return image;}

   



    // *********  referencingServiceDefs ******
    private final RelationalList referencingServiceDefs = new RelationalList(ServiceDef.class);
    public static final Class referencingServiceDefsType = ServiceDef.class;
    public static String referencingServiceDefsInverseFieldName = "protocolBehavior";
    public static final int referencingServiceDefsRelationType = PersistenceMechanism.ONE_TO_MANY;
    public static final boolean referencingServiceDefsRelationIsInverse = true;
    public RelationalList getReferencingServiceDefs() { return referencingServiceDefs; }

 
/************** Uncomment the following as needed *****************************/
      public static String[] fieldOrder  = {"protocolBehavior", "image", "referencingServiceDefs"};
//    public static String[] fieldOrder        = {"fieldname1", "fieldname2"};

      ;
//    public static String[] tabViews          = {"fieldname1", "fieldname2"};

      ;
//    public static String[] flattenIntoParent = {"fieldname1", "fieldname2"};

      ;
//    public static String[] identities = {"fieldname1", "fieldname2"};

//    public static String pluralName() { return "ProtocolBehaviors"; }
      /* Specify a color to represnt this class */
//    public static Color colorCode = new Color(0x2332);

      /* Use a different Icon for each instance. Change photoFieldName. */
//    private transient PhotoIconAssistant assistant = 
//                        new PhotoIconAssistant(this, photoFieldname);
//    public Icon iconLg() { return assistant.iconLg(); }
//    public Icon iconSm() { return assistant.iconSm(); }


      /* Specify the default search field for this class */
//    public static String defaultSearchPath = "";


      /* Specify a custom view for this class. 
//    public EView getMainView()
//    {
//       return new CustomProtocolBehaviorView(this);
//    }
/**********************/
public com.u2d.view.EView getMainView()   {
  try {
    if( getReferencingServiceDefs() != null && getReferencingServiceDefs().getItems().size() > 0) 
      org.jts.validator.Validator.validateName( ((ServiceDef)getReferencingServiceDefs().getItems().get(0)).getName().stringValue() );
  } catch( org.jts.validator.ValidatorException ve ) {            
    JOptionPane.showMessageDialog( null, "Please enter a valid name for the associated service definition first", "Protocol Behavior Error", JOptionPane.ERROR_MESSAGE);
    return null;
  } 
  
  return new com.mxgraph.swing.examples.FreeGraphEditor(this);
}

        
}
