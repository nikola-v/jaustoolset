/*
 * ServiceSet.java
 *
 * This code has been auto-updated by JTS after it has been auto-generated by umlc
 * Created on Wed Oct 05 10:31:04 EDT 2011
 */

package com.u2d.generated;


import com.u2d.model.*;
import com.u2d.app.PersistenceMechanism;
import com.u2d.type.*;
import com.u2d.type.atom.*;
import com.u2d.type.composite.*;
import com.u2d.list.RelationalList;
import com.u2d.reflection.Fld;
import javax.persistence.Entity;
import com.u2d.reflection.Cmd;
import com.u2d.reflection.Arg;
import com.u2d.element.CommandInfo;



@Entity
public  class ServiceSet extends AbstractComplexEObject_JTS{

    
    /** Creates a new instance of ServiceSet */
    public ServiceSet() {
    }
    public Title title() { 
        StringBuffer text = new StringBuffer();
        text.append(name.title() + " v" + _version.title()+ " [ServiceSet]");
        return new Title(text.toString());
    }    
    


    // ******    name   ******
    private final StringEO name = new StringEO();
    public StringEO getName() { return name;}

    // ******    serviceSetId   ******
    private final StringEO serviceSetId = new StringEO();
    @Fld(label="ID")
    public StringEO getServiceSetId() { return serviceSetId;}

    // ******    _version   ******
    private final StringEO _version = new StringEO();
    @Fld(label="Version")
    public StringEO get_version() { return _version;}

    // ******    description   ******
    private final TextEO description = new TextEO();
    public TextEO getDescription() { return description;}

   


 
    // *********  serviceDefs ******
    private final RelationalList serviceDefs = new RelationalList(ServiceDef.class);
    public static final Class serviceDefsType = ServiceDef.class;
    public static final int serviceDefsRelationType = PersistenceMechanism.MANY_TO_MANY;    
    public static final boolean serviceDefsRelationIsInverse = false;
    public RelationalList getServiceDefs() { return serviceDefs; } 
 




 
    // *********  constantSets ******
    private final RelationalList constantSets = new RelationalList(ConstantSet.class);
    public static final Class constantSetsType = ConstantSet.class;
    public static final int constantSetsRelationType = PersistenceMechanism.MANY_TO_MANY;    
    public static final boolean constantSetsRelationIsInverse = false;
    public RelationalList getConstantSets() { return constantSets; } 
 
 
/************** Uncomment the following as needed *****************************/
      public static String[] fieldOrder  = {"name", "serviceSetId", "_version", "description", "serviceDefs", "constantSets", "referencingElements"};
public static String[] readOnly  = {"referencingElements"};
// ******    referencingElements   ******
   private final StringEO referencingElements = new StringEO("{Components}");
   public StringEO getReferencingElements() { return referencingElements;}

      ;
//    public static String[] tabViews          = {"fieldname1", "fieldname2"};

      ;
//    public static String[] flattenIntoParent = {"fieldname1", "fieldname2"};

      ;
//    public static String[] identities = {"fieldname1", "fieldname2"};

//    public static String pluralName() { return "ServiceSets"; }
      /* Specify a color to represnt this class */
//    public static Color colorCode = new Color(0x2332);

      /* Use a different Icon for each instance. Change photoFieldName. */
//    private transient PhotoIconAssistant assistant = 
//                        new PhotoIconAssistant(this, photoFieldname);
//    public Icon iconLg() { return assistant.iconLg(); }
//    public Icon iconSm() { return assistant.iconSm(); }


      /* Specify the default search field for this class */
//    public static String defaultSearchPath = "";


      /* Specify a custom view for this class. 
//    public EView getMainView()
//    {
//       return new CustomServiceSetView(this);
//    }
/**********************/
	@Cmd(mnemonic='o')
	public Object GenerateDocumentation(com.u2d.element.CommandInfo cmdInfo )
	{
	      org.jts.gui.docGenerator.DocGeneratorStart docGenerator = new org.jts.gui.docGenerator.DocGeneratorStart( this );
	      docGenerator.performGeneration();
	      return null;
	}
//	@Cmd(mnemonic='c')
//	public Object ImportFromCJSIDL(com.u2d.element.CommandInfo cmdInfo )
//	{
//	     org.jts.gui.importCJSIDL.Import _import = new org.jts.gui.importCJSIDL.Import();
//	       _import.importServiceDefs();
//	      return null;
//	}
	@Cmd(mnemonic='C')
	public Object ExportToCJSIDL(com.u2d.element.CommandInfo cmdInfo )
	{
	      org.jts.gui.exportCJSIDL.Export.exportServiceSetCJSIDL( this );
		 return null;
	}
//	@Cmd(mnemonic='i')
//	public static Object ImportFromJSIDL(CommandInfo cmdInfo,
//	                                         @Arg("Path") FileEO path)
//	{
//	      org.jts.gui.importJSIDL.Import _import = new org.jts.gui.importJSIDL.Import();
//	      _import.importServiceDefs( );
//	      return null;
//	}
	@Cmd(mnemonic='x')
	public Object ExportToJSIDL(com.u2d.element.CommandInfo cmdInfo)
	{
	      org.jts.gui.exportJSIDL.Export _export = new org.jts.gui.exportJSIDL.Export();
	      _export.exportServiceSet( this );
	      return null;
	}
	@Cmd(mnemonic='p')
	public Object generatePromelaCode(com.u2d.element.CommandInfo cmdInfo)
	{
	      org.jts.gui.promelaCodeGenerator.CodeGenStart gen = new org.jts.gui.promelaCodeGenerator.CodeGenStart();	      gen.generateCode( this );
		 return null;
	}
        
}
