/***********           LICENSE HEADER   *******************************
JAUS Tool Set
Copyright (c)  2011, United States Government
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.

Neither the name of the United States Government nor the names of
its contributors may be used to endorse or promote products derived from
this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
 *********************  END OF LICENSE ***********************************/

/*
 * ListDisplayDialog.java
 *
 * Created on Feb 2, 2011, 10:06:55 AM
 */

package org.jts.gui.deepDelete;

import java.util.List;
import javax.swing.text.DefaultCaret;
import org.jts.gui.util.GUISupport;

/**
 * A JDialog that displays a list of strings in a JTextArea, plus a summary label with
 * user-specified text, and a close button.  The dialog's title is also user-specified.
 * Note the text area is immutable by the user.
 * @author idurkan
 */
public class ListDisplayDialog extends javax.swing.JDialog {

    List<String> listItems = null;

    /**
     * Create a new ListDisplayDialog with the given parameters.  Only parent may be null; any other
     * null parameter may result in a null pointer exception.
     * @param parent The parent dialog.  This dialog will be centered on its parent.
     * @param modal Whether the dialog should be displayed modally.
     * @param titleText Text to show in the dialog title.
     * @param summaryText Text to show in the summary label
     * @param listItems Text items to show in the text area.  Each item in the list is placed on
     *      its own line.
     */
    public ListDisplayDialog(java.awt.Frame parent, boolean modal, String titleText,
            String summaryText, List<String> listItems) {
        super(parent, modal);
        initComponents();

        this.listItems = listItems;
        this.setTitle(titleText);
        summaryLabel.setText(summaryText);

        // make the text area never automatically scroll when text is appended.
        DefaultCaret caret = (DefaultCaret)listArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);

        GUISupport.populateTextArea(listArea, listItems);

        // other dialog setup
        this.getRootPane().setDefaultButton(closeButton);

        // make Swing center the dialog on the parent window while keeping the dialog on one monitor.
        this.setLocationRelativeTo(this.getParent());
    }

    /**
     * Alters the contents of the dialog's text area.  Each string in newListItems appears on its
     * own line.
     * @param newListItems A list of Strings to display in the text area.
     */
    public void setListItems(List<String> newListItems) {
        listItems = newListItems;
        GUISupport.populateTextArea(listArea, listItems);
    }

    /**
     * Returns the current list of strings being displayed.
     * @return
     */
    public List<String> getListItems() {
        return listItems;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        summaryLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("dummytitle");
        setResizable(false);

        summaryLabel.setText("dummytext");

        listArea.setColumns(20);
        listArea.setEditable(false);
        listArea.setRows(5);
        jScrollPane1.setViewportView(listArea);

        closeButton.setText("Close");
        closeButton.setMaximumSize(new java.awt.Dimension(67, 23));
        closeButton.setMinimumSize(new java.awt.Dimension(67, 23));
        closeButton.setPreferredSize(new java.awt.Dimension(67, 23));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(summaryLabel)
                        .addContainerGap(282, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(summaryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Called when user clicks close button, closes the dialog.
     * @param evt event details, discarded.
     */
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea listArea;
    private javax.swing.JLabel summaryLabel;
    // End of variables declaration//GEN-END:variables

}
